[
  {
    "file": "Azure::OffAzure::MasterSites_sqlSites.json",
    "resourceType": "Microsoft.OffAzure/masterSites/sqlSites",
    "isChild": true,
    "parentType": "Microsoft.OffAzure/masterSites"
  },
  {
    "file": "Azure::Sql::Servers_keys.json",
    "resourceType": "Microsoft.Sql/servers/keys",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers"
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_sqlDatabases_containers.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases"
  },
  {
    "file": "Azure::Media::MediaServices_transforms.json",
    "resourceType": "Microsoft.Media/mediaServices/transforms",
    "isChild": true,
    "parentType": "Microsoft.Media/mediaServices"
  },
  {
    "file": "Azure::Elastic::Monitors_monitoredSubscriptions.json",
    "resourceType": "Microsoft.Elastic/monitors/monitoredSubscriptions",
    "isChild": true,
    "parentType": "Microsoft.Elastic/monitors"
  },
  {
    "file": "Azure::M365SecurityAndCompliance::PrivateLinkServicesForMIPPolicySync_privateEndpointConnections.json",
    "resourceType": "Microsoft.M365SecurityAndCompliance/privateLinkServicesForMIPPolicySync/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.M365SecurityAndCompliance/privateLinkServicesForMIPPolicySync"
  },
  {
    "file": "Azure::ServiceFabric::Clusters_applicationTypes_versions.json",
    "resourceType": "Microsoft.ServiceFabric/clusters/applicationTypes/versions",
    "isChild": true,
    "parentType": "Microsoft.ServiceFabric/clusters/applicationTypes"
  },
  {
    "file": "Azure::MachineLearningServices::Workspaces_inferencePools.json",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/inferencePools",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/workspaces"
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_notebookWorkspaces.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/notebookWorkspaces",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts"
  },
  {
    "file": "Azure::DataBoxEdge::DataBoxEdgeDevices.json",
    "resourceType": "Microsoft.DataBoxEdge/dataBoxEdgeDevices",
    "isChild": false
  },
  {
    "file": "Azure::ApiManagement::Service_tags_productLinks.json",
    "resourceType": "Microsoft.ApiManagement/service/tags/productLinks",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/tags"
  },
  {
    "file": "Azure::VisualStudio::Account_project.json",
    "resourceType": "microsoft.visualstudio/account/project",
    "isChild": true,
    "parentType": "microsoft.visualstudio/account"
  },
  {
    "file": "Azure::Resources::DeploymentStacks.json",
    "resourceType": "Microsoft.Resources/deploymentStacks",
    "isChild": false
  },
  {
    "file": "Azure::ServiceNetworking::TrafficControllers_frontends.json",
    "resourceType": "Microsoft.ServiceNetworking/trafficControllers/frontends",
    "isChild": true,
    "parentType": "Microsoft.ServiceNetworking/trafficControllers"
  },
  {
    "file": "Azure::Workloads::Monitors_providerInstances.json",
    "resourceType": "Microsoft.Workloads/monitors/providerInstances",
    "isChild": true,
    "parentType": "Microsoft.Workloads/monitors"
  },
  {
    "file": "Azure::Compute::Galleries_inVMAccessControlProfiles_versions.json",
    "resourceType": "Microsoft.Compute/galleries/inVMAccessControlProfiles/versions",
    "isChild": true,
    "parentType": "Microsoft.Compute/galleries/inVMAccessControlProfiles"
  },
  {
    "file": "Azure::MachineLearningServices::Workspaces_connections_raiBlocklists_raiBlocklistItems.json",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/connections/raiBlocklists/raiBlocklistItems",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/workspaces/connections/raiBlocklists"
  },
  {
    "file": "Azure::MachineLearningServices::Workspaces_inferencePools_endpoints.json",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/inferencePools/endpoints",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/workspaces/inferencePools"
  },
  {
    "file": "Azure::Migrate::AssessmentProjects_importcollectors.json",
    "resourceType": "Microsoft.Migrate/assessmentProjects/importcollectors",
    "isChild": true,
    "parentType": "Microsoft.Migrate/assessmentProjects"
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_sqlRoleDefinitions.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts"
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_mongoMIRoleDefinitions.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/mongoMIRoleDefinitions",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts"
  },
  {
    "file": "Azure::M365SecurityAndCompliance::PrivateLinkServicesForO365ManagementActivityAPI_privateEndpointConnections.json",
    "resourceType": "Microsoft.M365SecurityAndCompliance/privateLinkServicesForO365ManagementActivityAPI/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.M365SecurityAndCompliance/privateLinkServicesForO365ManagementActivityAPI"
  },
  {
    "file": "Azure::StreamAnalytics::Streamingjobs_inputs.json",
    "resourceType": "Microsoft.StreamAnalytics/streamingjobs/inputs",
    "isChild": true,
    "parentType": "Microsoft.StreamAnalytics/streamingjobs"
  },
  {
    "file": "Azure::Cache::RedisEnterprise_databases.json",
    "resourceType": "Microsoft.Cache/redisEnterprise/databases",
    "isChild": true,
    "parentType": "Microsoft.Cache/redisEnterprise"
  },
  {
    "file": "Azure::MachineLearningServices::Registries_components_versions.json",
    "resourceType": "Microsoft.MachineLearningServices/registries/components/versions",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/registries/components"
  },
  {
    "file": "Azure::Cdn::EdgeActions_executionFilters.json",
    "resourceType": "Microsoft.Cdn/edgeActions/executionFilters",
    "isChild": true,
    "parentType": "Microsoft.Cdn/edgeActions"
  },
  {
    "file": "Azure::ContainerRegistry::Registries_buildTasks.json",
    "resourceType": "Microsoft.ContainerRegistry/registries/buildTasks",
    "isChild": true,
    "parentType": "Microsoft.ContainerRegistry/registries"
  },
  {
    "file": "Azure::ApiManagement::Service_workspaces_apis.json",
    "resourceType": "Microsoft.ApiManagement/service/workspaces/apis",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/workspaces"
  },
  {
    "file": "Azure::Sql::Servers_jobAgents_targetGroups.json",
    "resourceType": "Microsoft.Sql/servers/jobAgents/targetGroups",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers/jobAgents"
  },
  {
    "file": "Azure::AwsConnector::Ec2RouteTables.json",
    "resourceType": "Microsoft.AwsConnector/ec2RouteTables",
    "isChild": false
  },
  {
    "file": "Azure::DBforMySQL::Servers.json",
    "resourceType": "Microsoft.DBforMySQL/servers",
    "isChild": false
  },
  {
    "file": "Azure::EventHub::Namespaces_virtualnetworkrules.json",
    "resourceType": "Microsoft.EventHub/namespaces/virtualnetworkrules",
    "isChild": true,
    "parentType": "Microsoft.EventHub/namespaces"
  },
  {
    "file": "Azure::Network::ExpressRouteCrossConnections.json",
    "resourceType": "Microsoft.Network/expressRouteCrossConnections",
    "isChild": false
  },
  {
    "file": "Azure::Compute::Galleries_images_versions.json",
    "resourceType": "Microsoft.Compute/galleries/images/versions",
    "isChild": true,
    "parentType": "Microsoft.Compute/galleries/images"
  },
  {
    "file": "Azure::Network::FrontDoorWebApplicationFirewallPolicies.json",
    "resourceType": "Microsoft.Network/FrontDoorWebApplicationFirewallPolicies",
    "isChild": false
  },
  {
    "file": "Azure::DocumentDB::ThroughputPools.json",
    "resourceType": "Microsoft.DocumentDB/throughputPools",
    "isChild": false
  },
  {
    "file": "Azure::Network::PrivateDnsZones.json",
    "resourceType": "Microsoft.Network/privateDnsZones",
    "isChild": false
  },
  {
    "file": "Azure::DocumentDB::ThroughputPools_throughputPoolAccounts.json",
    "resourceType": "Microsoft.DocumentDB/throughputPools/throughputPoolAccounts",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/throughputPools"
  },
  {
    "file": "Azure::AgFoodPlatform::FarmBeats_extensions.json",
    "resourceType": "Microsoft.AgFoodPlatform/farmBeats/extensions",
    "isChild": true,
    "parentType": "Microsoft.AgFoodPlatform/farmBeats"
  },
  {
    "file": "Azure::Sql::Locations_serverTrustGroups.json",
    "resourceType": "Microsoft.Sql/locations/serverTrustGroups",
    "isChild": true,
    "parentType": "Microsoft.Sql/locations"
  },
  {
    "file": "Azure::Synapse::Workspaces_kustoPools_principalAssignments.json",
    "resourceType": "Microsoft.Synapse/workspaces/kustoPools/principalAssignments",
    "isChild": true,
    "parentType": "Microsoft.Synapse/workspaces/kustoPools"
  },
  {
    "file": "Azure::Scheduler::JobCollections_jobs.json",
    "resourceType": "Microsoft.Scheduler/jobCollections/jobs",
    "isChild": true,
    "parentType": "Microsoft.Scheduler/jobCollections"
  },
  {
    "file": "Azure::ApiManagement::Service_workspaces_groups_users.json",
    "resourceType": "Microsoft.ApiManagement/service/workspaces/groups/users",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/workspaces/groups"
  },
  {
    "file": "Azure::MobileNetwork::PacketCoreControlPlanes_diagnosticsPackages.json",
    "resourceType": "Microsoft.MobileNetwork/packetCoreControlPlanes/diagnosticsPackages",
    "isChild": true,
    "parentType": "Microsoft.MobileNetwork/packetCoreControlPlanes"
  },
  {
    "file": "Azure::Network::VirtualNetworkGateways.json",
    "resourceType": "Microsoft.Network/virtualnetworkgateways",
    "isChild": false
  },
  {
    "file": "Azure::App::ManagedEnvironments_daprSubscriptions.json",
    "resourceType": "Microsoft.App/managedEnvironments/daprSubscriptions",
    "isChild": true,
    "parentType": "Microsoft.App/managedEnvironments"
  },
  {
    "file": "Azure::Sql::Servers_databases_workloadGroups.json",
    "resourceType": "Microsoft.Sql/servers/databases/workloadGroups",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers/databases"
  },
  {
    "file": "Azure::ServiceFabric::Clusters.json",
    "resourceType": "Microsoft.ServiceFabric/clusters",
    "isChild": false
  },
  {
    "file": "Azure::Databricks::Workspaces_privateEndpointConnections.json",
    "resourceType": "Microsoft.Databricks/workspaces/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.Databricks/workspaces"
  },
  {
    "file": "Azure::Elastic::Monitors.json",
    "resourceType": "Microsoft.Elastic/monitors",
    "isChild": false
  },
  {
    "file": "Azure::ApiManagement::Service_workspaces_namedValues.json",
    "resourceType": "Microsoft.ApiManagement/service/workspaces/namedValues",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/workspaces"
  },
  {
    "file": "Azure::MachineLearningServices::Workspaces_services.json",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/services",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/workspaces"
  },
  {
    "file": "Azure::NetworkCloud::KubernetesClusters.json",
    "resourceType": "Microsoft.NetworkCloud/kubernetesClusters",
    "isChild": false
  },
  {
    "file": "Azure::BatchAI::Jobs.json",
    "resourceType": "Microsoft.BatchAI/jobs",
    "isChild": false
  },
  {
    "file": "Azure::DevCenter::Plans_members.json",
    "resourceType": "Microsoft.DevCenter/plans/members",
    "isChild": true,
    "parentType": "Microsoft.DevCenter/plans"
  },
  {
    "file": "Azure::Network::NetworkSecurityPerimeters_loggingConfigurations.json",
    "resourceType": "Microsoft.Network/networkSecurityPerimeters/loggingConfigurations",
    "isChild": true,
    "parentType": "Microsoft.Network/networkSecurityPerimeters"
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_cassandraKeyspaces_tables_throughputSettings.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/tables/throughputSettings",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/tables"
  },
  {
    "file": "Azure::RecoveryServices::Vaults_replicationFabrics_replicationRecoveryServicesProviders.json",
    "resourceType": "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationRecoveryServicesProviders",
    "isChild": true,
    "parentType": "Microsoft.RecoveryServices/vaults/replicationFabrics"
  },
  {
    "file": "Azure::NetApp::NetAppAccounts_capacityPools_volumes_buckets.json",
    "resourceType": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/buckets",
    "isChild": true,
    "parentType": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_dataTransferJobs.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/dataTransferJobs",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts"
  },
  {
    "file": "Azure::Sql::Servers_virtualNetworkRules.json",
    "resourceType": "Microsoft.Sql/servers/virtualNetworkRules",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers"
  },
  {
    "file": "Azure::ServiceFabric::Managedclusters_applications_services.json",
    "resourceType": "Microsoft.ServiceFabric/managedclusters/applications/services",
    "isChild": true,
    "parentType": "Microsoft.ServiceFabric/managedclusters/applications"
  },
  {
    "file": "Azure::SignalRService::WebPubSub_privateEndpointConnections.json",
    "resourceType": "Microsoft.SignalRService/webPubSub/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.SignalRService/webPubSub"
  },
  {
    "file": "Azure::App::ConnectedEnvironments_storages.json",
    "resourceType": "Microsoft.App/connectedEnvironments/storages",
    "isChild": true,
    "parentType": "Microsoft.App/connectedEnvironments"
  },
  {
    "file": "Azure::DataFactory::Factories_globalParameters.json",
    "resourceType": "Microsoft.DataFactory/factories/globalParameters",
    "isChild": true,
    "parentType": "Microsoft.DataFactory/factories"
  },
  {
    "file": "Azure::DataMigration::Services.json",
    "resourceType": "Microsoft.DataMigration/services",
    "isChild": false
  },
  {
    "file": "Azure::DevCenter::Devcenters_devboxdefinitions.json",
    "resourceType": "Microsoft.DevCenter/devcenters/devboxdefinitions",
    "isChild": true,
    "parentType": "Microsoft.DevCenter/devcenters"
  },
  {
    "file": "Azure::ApiManagement::Service_gateways_certificateAuthorities.json",
    "resourceType": "Microsoft.ApiManagement/service/gateways/certificateAuthorities",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/gateways"
  },
  {
    "file": "Azure::Media::VideoAnalyzers_pipelineTopologies.json",
    "resourceType": "Microsoft.Media/videoAnalyzers/pipelineTopologies",
    "isChild": true,
    "parentType": "Microsoft.Media/videoAnalyzers"
  },
  {
    "file": "Azure::ApiManagement::Service_loggers.json",
    "resourceType": "Microsoft.ApiManagement/service/loggers",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service"
  },
  {
    "file": "Azure::CognitiveServices::Accounts_deployments.json",
    "resourceType": "Microsoft.CognitiveServices/accounts/deployments",
    "isChild": true,
    "parentType": "Microsoft.CognitiveServices/accounts"
  },
  {
    "file": "Azure::MachineLearning::WebServices.json",
    "resourceType": "Microsoft.MachineLearning/webServices",
    "isChild": false
  },
  {
    "file": "Azure::AwsConnector::EcsClusters.json",
    "resourceType": "Microsoft.AwsConnector/ecsClusters",
    "isChild": false
  },
  {
    "file": "Azure::ApiManagement::Service_caches.json",
    "resourceType": "Microsoft.ApiManagement/service/caches",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service"
  },
  {
    "file": "Azure::ManagedNetworkFabric::L3IsolationDomains.json",
    "resourceType": "Microsoft.ManagedNetworkFabric/l3IsolationDomains",
    "isChild": false
  },
  {
    "file": "Azure::StorageMover::StorageMovers_endpoints.json",
    "resourceType": "Microsoft.StorageMover/storageMovers/endpoints",
    "isChild": true,
    "parentType": "Microsoft.StorageMover/storageMovers"
  },
  {
    "file": "Azure::ContainerRegistry::Registries_packages_archives_versions.json",
    "resourceType": "Microsoft.ContainerRegistry/registries/packages/archives/versions",
    "isChild": true,
    "parentType": "Microsoft.ContainerRegistry/registries/packages/archives"
  },
  {
    "file": "Azure::Network::FirewallPolicies_ruleCollectionGroups.json",
    "resourceType": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
    "isChild": true,
    "parentType": "Microsoft.Network/firewallPolicies"
  },
  {
    "file": "Azure::AVS::PrivateClouds_workloadNetworks_portMirroringProfiles.json",
    "resourceType": "Microsoft.AVS/privateClouds/workloadNetworks/portMirroringProfiles",
    "isChild": true,
    "parentType": "Microsoft.AVS/privateClouds/workloadNetworks"
  },
  {
    "file": "Azure::EventHub::Namespaces.json",
    "resourceType": "Microsoft.EventHub/namespaces",
    "isChild": false
  },
  {
    "file": "Azure::AzureSphere::Catalogs.json",
    "resourceType": "Microsoft.AzureSphere/catalogs",
    "isChild": false
  },
  {
    "file": "Azure::EnterpriseKnowledgeGraph::Services.json",
    "resourceType": "Microsoft.EnterpriseKnowledgeGraph/services",
    "isChild": false
  },
  {
    "file": "Azure::Sql::Servers_dnsAliases.json",
    "resourceType": "Microsoft.Sql/servers/dnsAliases",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers"
  },
  {
    "file": "Azure::SignalRService::WebPubSub_replicas.json",
    "resourceType": "Microsoft.SignalRService/webPubSub/replicas",
    "isChild": true,
    "parentType": "Microsoft.SignalRService/webPubSub"
  },
  {
    "file": "Azure::EventGrid::Domains_topics.json",
    "resourceType": "Microsoft.EventGrid/domains/topics",
    "isChild": true,
    "parentType": "Microsoft.EventGrid/domains"
  },
  {
    "file": "Azure::DataMigration::SqlMigrationServices.json",
    "resourceType": "Microsoft.DataMigration/sqlMigrationServices",
    "isChild": false
  },
  {
    "file": "Azure::Automation::AutomationAccounts_hybridRunbookWorkerGroups_hybridRunbookWorkers.json",
    "resourceType": "Microsoft.Automation/automationAccounts/hybridRunbookWorkerGroups/hybridRunbookWorkers",
    "isChild": true,
    "parentType": "Microsoft.Automation/automationAccounts/hybridRunbookWorkerGroups"
  },
  {
    "file": "Azure::VisualStudio::Account.json",
    "resourceType": "microsoft.visualstudio/account",
    "isChild": false
  },
  {
    "file": "Azure::DBforMySQL::FlexibleServers_advancedThreatProtectionSettings.json",
    "resourceType": "Microsoft.DBforMySQL/flexibleServers/advancedThreatProtectionSettings",
    "isChild": true,
    "parentType": "Microsoft.DBforMySQL/flexibleServers"
  },
  {
    "file": "Azure::DeploymentManager::Rollouts.json",
    "resourceType": "Microsoft.DeploymentManager/rollouts",
    "isChild": false
  },
  {
    "file": "Azure::ServiceFabricMesh::Gateways.json",
    "resourceType": "Microsoft.ServiceFabricMesh/gateways",
    "isChild": false
  },
  {
    "file": "Azure::AlertsManagement::SmartDetectorAlertRules.json",
    "resourceType": "microsoft.alertsManagement/smartDetectorAlertRules",
    "isChild": false
  },
  {
    "file": "Azure::ApiManagement::Service_products_apiLinks.json",
    "resourceType": "Microsoft.ApiManagement/service/products/apiLinks",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/products"
  },
  {
    "file": "Azure::LabServices::Labs_users.json",
    "resourceType": "Microsoft.LabServices/labs/users",
    "isChild": true,
    "parentType": "Microsoft.LabServices/labs"
  },
  {
    "file": "Azure::App::ManagedEnvironments_maintenanceConfigurations.json",
    "resourceType": "Microsoft.App/managedEnvironments/maintenanceConfigurations",
    "isChild": true,
    "parentType": "Microsoft.App/managedEnvironments"
  },
  {
    "file": "Azure::Resources::Deployments.json",
    "resourceType": "Microsoft.Resources/deployments",
    "isChild": false
  },
  {
    "file": "Azure::DesktopVirtualization::ScalingPlans.json",
    "resourceType": "Microsoft.DesktopVirtualization/scalingPlans",
    "isChild": false
  },
  {
    "file": "Azure::AutonomousDevelopmentPlatform::Accounts.json",
    "resourceType": "Microsoft.AutonomousDevelopmentPlatform/accounts",
    "isChild": false
  },
  {
    "file": "Azure::MobilePacketCore::SmfDeployments.json",
    "resourceType": "Microsoft.MobilePacketCore/smfDeployments",
    "isChild": false
  },
  {
    "file": "Azure::Automation::AutomationAccounts_connectionTypes.json",
    "resourceType": "Microsoft.Automation/automationAccounts/connectionTypes",
    "isChild": true,
    "parentType": "Microsoft.Automation/automationAccounts"
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_mongodbDatabases_collections.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases"
  },
  {
    "file": "Azure::Insights::Autoscalesettings.json",
    "resourceType": "Microsoft.Insights/autoscalesettings",
    "isChild": false
  },
  {
    "file": "Azure::M365SecurityAndCompliance::PrivateLinkServicesForM365SecurityCenter_privateEndpointConnections.json",
    "resourceType": "Microsoft.M365SecurityAndCompliance/privateLinkServicesForM365SecurityCenter/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.M365SecurityAndCompliance/privateLinkServicesForM365SecurityCenter"
  },
  {
    "file": "Azure::IoTFirmwareDefense::Workspaces.json",
    "resourceType": "Microsoft.IoTFirmwareDefense/workspaces",
    "isChild": false
  },
  {
    "file": "Azure::IoTOperations::Instances_dataflowEndpoints.json",
    "resourceType": "Microsoft.IoTOperations/instances/dataflowEndpoints",
    "isChild": true,
    "parentType": "Microsoft.IoTOperations/instances"
  },
  {
    "file": "Azure::ManagedNetwork::ManagedNetworks_managedNetworkPeeringPolicies.json",
    "resourceType": "Microsoft.ManagedNetwork/managedNetworks/managedNetworkPeeringPolicies",
    "isChild": true,
    "parentType": "Microsoft.ManagedNetwork/managedNetworks"
  },
  {
    "file": "Azure::App::ConnectedEnvironments_certificates.json",
    "resourceType": "Microsoft.App/connectedEnvironments/certificates",
    "isChild": true,
    "parentType": "Microsoft.App/connectedEnvironments"
  },
  {
    "file": "Azure::Synapse::Workspaces_sqlPools_extendedAuditingSettings.json",
    "resourceType": "Microsoft.Synapse/workspaces/sqlPools/extendedAuditingSettings",
    "isChild": true,
    "parentType": "Microsoft.Synapse/workspaces/sqlPools"
  },
  {
    "file": "Azure::OffAzure::HyperVSites.json",
    "resourceType": "Microsoft.OffAzure/hypervSites",
    "isChild": false
  },
  {
    "file": "Azure::Kusto::Clusters_sandboxCustomImages.json",
    "resourceType": "Microsoft.Kusto/clusters/sandboxCustomImages",
    "isChild": true,
    "parentType": "Microsoft.Kusto/clusters"
  },
  {
    "file": "Azure::AwsConnector::RdsDBInstances.json",
    "resourceType": "Microsoft.AwsConnector/rdsDBInstances",
    "isChild": false
  },
  {
    "file": "Azure::Dashboard::Dashboards.json",
    "resourceType": "Microsoft.Dashboard/dashboards",
    "isChild": false
  },
  {
    "file": "Azure::Security::SecurityConnectors_devops_azureDevOpsOrgs_projects_repos.json",
    "resourceType": "Microsoft.Security/securityConnectors/devops/azureDevOpsOrgs/projects/repos",
    "isChild": true,
    "parentType": "Microsoft.Security/securityConnectors/devops/azureDevOpsOrgs/projects"
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_gremlinDatabases.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts"
  },
  {
    "file": "Azure::Web::StaticSites_databaseConnections.json",
    "resourceType": "Microsoft.Web/staticSites/databaseConnections",
    "isChild": true,
    "parentType": "Microsoft.Web/staticSites"
  },
  {
    "file": "Azure::OffAzure::MasterSites_sqlSites_discoverySiteDataSources.json",
    "resourceType": "Microsoft.OffAzure/masterSites/sqlSites/discoverySiteDataSources",
    "isChild": true,
    "parentType": "Microsoft.OffAzure/masterSites/sqlSites"
  },
  {
    "file": "Azure::AVS::PrivateClouds_authorizations.json",
    "resourceType": "Microsoft.AVS/privateClouds/authorizations",
    "isChild": true,
    "parentType": "Microsoft.AVS/privateClouds"
  },
  {
    "file": "Azure::DBforMySQL::FlexibleServers_configurations.json",
    "resourceType": "Microsoft.DBforMySQL/flexibleServers/configurations",
    "isChild": true,
    "parentType": "Microsoft.DBforMySQL/flexibleServers"
  },
  {
    "file": "Azure::AppPlatform::Spring_apps_deployments.json",
    "resourceType": "Microsoft.AppPlatform/Spring/apps/deployments",
    "isChild": true,
    "parentType": "Microsoft.AppPlatform/Spring/apps"
  },
  {
    "file": "Azure::SignalRService::SignalR_privateEndpointConnections.json",
    "resourceType": "Microsoft.SignalRService/signalR/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.SignalRService/signalR"
  },
  {
    "file": "Azure::MachineLearningServices::Workspaces_codes_versions.json",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/codes/versions",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/workspaces/codes"
  },
  {
    "file": "Azure::IoTOperationsOrchestrator::Targets.json",
    "resourceType": "Microsoft.IoTOperationsOrchestrator/targets",
    "isChild": false
  },
  {
    "file": "Azure::AVS::PrivateClouds_scriptExecutions.json",
    "resourceType": "Microsoft.AVS/privateClouds/scriptExecutions",
    "isChild": true,
    "parentType": "Microsoft.AVS/privateClouds"
  },
  {
    "file": "Azure::Synapse::Workspaces_sqlPools_auditingSettings.json",
    "resourceType": "Microsoft.Synapse/workspaces/sqlPools/auditingSettings",
    "isChild": true,
    "parentType": "Microsoft.Synapse/workspaces/sqlPools"
  },
  {
    "file": "Azure::StorSimple::Managers_certificates.json",
    "resourceType": "Microsoft.StorSimple/managers/certificates",
    "isChild": true,
    "parentType": "Microsoft.StorSimple/managers"
  },
  {
    "file": "Azure::Sql::Servers_databases_securityAlertPolicies.json",
    "resourceType": "Microsoft.Sql/servers/databases/securityAlertPolicies",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers/databases"
  },
  {
    "file": "Azure::EventGrid::Topics.json",
    "resourceType": "Microsoft.EventGrid/topics",
    "isChild": false
  },
  {
    "file": "Azure::SignalRService::WebPubSub_sharedPrivateLinkResources.json",
    "resourceType": "Microsoft.SignalRService/webPubSub/sharedPrivateLinkResources",
    "isChild": true,
    "parentType": "Microsoft.SignalRService/webPubSub"
  },
  {
    "file": "Azure::DBforPostgreSQL::FlexibleServers_configurations.json",
    "resourceType": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
    "isChild": true,
    "parentType": "Microsoft.DBforPostgreSQL/flexibleServers"
  },
  {
    "file": "Azure::Sql::ManagedInstances_keys.json",
    "resourceType": "Microsoft.Sql/managedInstances/keys",
    "isChild": true,
    "parentType": "Microsoft.Sql/managedInstances"
  },
  {
    "file": "Azure::AVS::PrivateClouds_workloadNetworks_publicIPs.json",
    "resourceType": "Microsoft.AVS/privateClouds/workloadNetworks/publicIPs",
    "isChild": true,
    "parentType": "Microsoft.AVS/privateClouds/workloadNetworks"
  },
  {
    "file": "Azure::Network::NetworkWatchers.json",
    "resourceType": "Microsoft.Network/networkWatchers",
    "isChild": false
  },
  {
    "file": "Azure::NetApp::NetAppAccounts_capacityPools_volumes_subvolumes.json",
    "resourceType": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/subvolumes",
    "isChild": true,
    "parentType": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
  },
  {
    "file": "Azure::AwsConnector::ConfigServiceConfigurationRecorderStatuses.json",
    "resourceType": "Microsoft.AwsConnector/configServiceConfigurationRecorderStatuses",
    "isChild": false
  },
  {
    "file": "Azure::Elastic::Monitors_openAIIntegrations.json",
    "resourceType": "Microsoft.Elastic/monitors/openAIIntegrations",
    "isChild": true,
    "parentType": "Microsoft.Elastic/monitors"
  },
  {
    "file": "Azure::Compute::CapacityReservationGroups_capacityReservations.json",
    "resourceType": "Microsoft.Compute/capacityReservationGroups/capacityReservations",
    "isChild": true,
    "parentType": "Microsoft.Compute/capacityReservationGroups"
  },
  {
    "file": "Azure::DeviceUpdate::Accounts_privateEndpointConnections.json",
    "resourceType": "Microsoft.DeviceUpdate/accounts/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.DeviceUpdate/accounts"
  },
  {
    "file": "Azure::DataMigration::Services_projects_files.json",
    "resourceType": "Microsoft.DataMigration/services/projects/files",
    "isChild": true,
    "parentType": "Microsoft.DataMigration/services/projects"
  },
  {
    "file": "Azure::Insights::PrivateLinkScopes_scopedResources.json",
    "resourceType": "Microsoft.Insights/privateLinkScopes/scopedResources",
    "isChild": true,
    "parentType": "Microsoft.Insights/privateLinkScopes"
  },
  {
    "file": "Azure::DBforPostgreSQL::Servers_administrators.json",
    "resourceType": "Microsoft.DBforPostgreSQL/servers/administrators",
    "isChild": true,
    "parentType": "Microsoft.DBforPostgreSQL/servers"
  },
  {
    "file": "Azure::HybridNetwork::Publishers_networkFunctionDefinitionGroups.json",
    "resourceType": "Microsoft.HybridNetwork/publishers/networkFunctionDefinitionGroups",
    "isChild": true,
    "parentType": "Microsoft.HybridNetwork/publishers"
  },
  {
    "file": "Azure::MySQLDiscovery::MySQLSites.json",
    "resourceType": "Microsoft.MySQLDiscovery/MySQLSites",
    "isChild": false
  },
  {
    "file": "Azure::PowerPlatform::EnterprisePolicies.json",
    "resourceType": "Microsoft.PowerPlatform/enterprisePolicies",
    "isChild": false
  },
  {
    "file": "Azure::ElasticSan::ElasticSans_volumegroups_snapshots.json",
    "resourceType": "Microsoft.ElasticSan/elasticSans/volumegroups/snapshots",
    "isChild": true,
    "parentType": "Microsoft.ElasticSan/elasticSans/volumegroups"
  },
  {
    "file": "Azure::Logic::IntegrationAccounts_batchConfigurations.json",
    "resourceType": "Microsoft.Logic/integrationAccounts/batchConfigurations",
    "isChild": true,
    "parentType": "Microsoft.Logic/integrationAccounts"
  },
  {
    "file": "Azure::ApiManagement::Service_diagnostics_loggers.json",
    "resourceType": "Microsoft.ApiManagement/service/diagnostics/loggers",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/diagnostics"
  },
  {
    "file": "Azure::TestBase::TestBaseAccounts_customImages.json",
    "resourceType": "Microsoft.TestBase/testBaseAccounts/customImages",
    "isChild": true,
    "parentType": "Microsoft.TestBase/testBaseAccounts"
  },
  {
    "file": "Azure::DurableTask::Schedulers_retentionPolicies.json",
    "resourceType": "Microsoft.DurableTask/schedulers/retentionPolicies",
    "isChild": true,
    "parentType": "Microsoft.DurableTask/schedulers"
  },
  {
    "file": "Azure::DocumentDB::CassandraClusters.json",
    "resourceType": "Microsoft.DocumentDB/cassandraClusters",
    "isChild": false
  },
  {
    "file": "Azure::SecurityAndCompliance::PrivateLinkServicesForM365ComplianceCenter_privateEndpointConnections.json",
    "resourceType": "Microsoft.SecurityAndCompliance/privateLinkServicesForM365ComplianceCenter/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.SecurityAndCompliance/privateLinkServicesForM365ComplianceCenter"
  },
  {
    "file": "Azure::Databricks::Workspaces_virtualNetworkPeerings.json",
    "resourceType": "Microsoft.Databricks/workspaces/virtualNetworkPeerings",
    "isChild": true,
    "parentType": "Microsoft.Databricks/workspaces"
  },
  {
    "file": "Azure::AppPlatform::Spring_buildServices_builders_buildpackBindings.json",
    "resourceType": "Microsoft.AppPlatform/Spring/buildServices/builders/buildpackBindings",
    "isChild": true,
    "parentType": "Microsoft.AppPlatform/Spring/buildServices/builders"
  },
  {
    "file": "Azure::Cloudngfw::LocalRulestacks_certificates.json",
    "resourceType": "PaloAltoNetworks.Cloudngfw/localRulestacks/certificates",
    "isChild": true,
    "parentType": "PaloAltoNetworks.Cloudngfw/localRulestacks"
  },
  {
    "file": "Azure::DigitalTwins::DigitalTwinsInstances_timeSeriesDatabaseConnections.json",
    "resourceType": "Microsoft.DigitalTwins/digitalTwinsInstances/timeSeriesDatabaseConnections",
    "isChild": true,
    "parentType": "Microsoft.DigitalTwins/digitalTwinsInstances"
  },
  {
    "file": "Azure::Cloudngfw::Firewalls.json",
    "resourceType": "PaloAltoNetworks.Cloudngfw/firewalls",
    "isChild": false
  },
  {
    "file": "Azure::MachineLearningServices::Registries_codes.json",
    "resourceType": "Microsoft.MachineLearningServices/registries/codes",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/registries"
  },
  {
    "file": "Azure::ApiManagement::Service_groups.json",
    "resourceType": "Microsoft.ApiManagement/service/groups",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service"
  },
  {
    "file": "Azure::Automanage::Accounts.json",
    "resourceType": "Microsoft.Automanage/accounts",
    "isChild": false
  },
  {
    "file": "Azure::DBforPostgreSQL::Servers_securityAlertPolicies.json",
    "resourceType": "Microsoft.DBforPostgreSQL/servers/securityAlertPolicies",
    "isChild": true,
    "parentType": "Microsoft.DBforPostgreSQL/servers"
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_apis_databases_collections.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/apis/databases/collections",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts/apis/databases"
  },
  {
    "file": "Azure::Network::ExpressRouteCircuits_peerings_connections.json",
    "resourceType": "Microsoft.Network/expressRouteCircuits/peerings/connections",
    "isChild": true,
    "parentType": "Microsoft.Network/expressRouteCircuits/peerings"
  },
  {
    "file": "Azure::Cache::Redis_accessPolicyAssignments.json",
    "resourceType": "Microsoft.Cache/redis/accessPolicyAssignments",
    "isChild": true,
    "parentType": "Microsoft.Cache/redis"
  },
  {
    "file": "Azure::Web::HostingEnvironments_workerPools.json",
    "resourceType": "Microsoft.Web/hostingEnvironments/workerPools",
    "isChild": true,
    "parentType": "Microsoft.Web/hostingEnvironments"
  },
  {
    "file": "Azure::SecurityAndCompliance::PrivateLinkServicesForM365ComplianceCenter.json",
    "resourceType": "Microsoft.SecurityAndCompliance/privateLinkServicesForM365ComplianceCenter",
    "isChild": false
  },
  {
    "file": "Azure::Insights::Components_ProactiveDetectionConfigs.json",
    "resourceType": "Microsoft.Insights/components/ProactiveDetectionConfigs",
    "isChild": true,
    "parentType": "Microsoft.Insights/components"
  },
  {
    "file": "Azure::AzureSphere::Catalogs_products.json",
    "resourceType": "Microsoft.AzureSphere/catalogs/products",
    "isChild": true,
    "parentType": "Microsoft.AzureSphere/catalogs"
  },
  {
    "file": "Azure::SecurityAndCompliance::PrivateLinkServicesForMIPPolicySync_privateEndpointConnections.json",
    "resourceType": "Microsoft.SecurityAndCompliance/privateLinkServicesForMIPPolicySync/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.SecurityAndCompliance/privateLinkServicesForMIPPolicySync"
  },
  {
    "file": "Azure::StreamAnalytics::Streamingjobs_transformations.json",
    "resourceType": "Microsoft.StreamAnalytics/streamingjobs/transformations",
    "isChild": true,
    "parentType": "Microsoft.StreamAnalytics/streamingjobs"
  },
  {
    "file": "Azure::Web::StaticSites_builds_databaseConnections.json",
    "resourceType": "Microsoft.Web/staticSites/builds/databaseConnections",
    "isChild": true,
    "parentType": "Microsoft.Web/staticSites/builds"
  },
  {
    "file": "Azure::Network::NetworkManagers_securityAdminConfigurations_ruleCollections.json",
    "resourceType": "Microsoft.Network/networkManagers/securityAdminConfigurations/ruleCollections",
    "isChild": true,
    "parentType": "Microsoft.Network/networkManagers/securityAdminConfigurations"
  },
  {
    "file": "Azure::Chaos::PrivateAccesses.json",
    "resourceType": "Microsoft.Chaos/privateAccesses",
    "isChild": false
  },
  {
    "file": "Azure::KeyVault::Vaults_secrets.json",
    "resourceType": "Microsoft.KeyVault/vaults/secrets",
    "isChild": true,
    "parentType": "Microsoft.KeyVault/vaults"
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_apis_tables.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/apis/tables",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts/apis"
  },
  {
    "file": "Azure::ServiceNetworking::TrafficControllers.json",
    "resourceType": "Microsoft.ServiceNetworking/trafficControllers",
    "isChild": false
  },
  {
    "file": "Azure::Media::MediaServices_accountFilters.json",
    "resourceType": "Microsoft.Media/mediaServices/accountFilters",
    "isChild": true,
    "parentType": "Microsoft.Media/mediaServices"
  },
  {
    "file": "Azure::Network::InterfaceEndpoints.json",
    "resourceType": "Microsoft.Network/interfaceEndpoints",
    "isChild": false
  },
  {
    "file": "Azure::StreamAnalytics::Streamingjobs.json",
    "resourceType": "Microsoft.StreamAnalytics/streamingjobs",
    "isChild": false
  },
  {
    "file": "Azure::DevCenter::NetworkConnections.json",
    "resourceType": "Microsoft.DevCenter/networkConnections",
    "isChild": false
  },
  {
    "file": "Azure::ServiceBus::Namespaces_disasterRecoveryConfigs.json",
    "resourceType": "Microsoft.ServiceBus/namespaces/disasterRecoveryConfigs",
    "isChild": true,
    "parentType": "Microsoft.ServiceBus/namespaces"
  },
  {
    "file": "Azure::AwsConnector::SageMakerApps.json",
    "resourceType": "Microsoft.AwsConnector/sageMakerApps",
    "isChild": false
  },
  {
    "file": "Azure::AlertsManagement::PrometheusRuleGroups.json",
    "resourceType": "Microsoft.AlertsManagement/prometheusRuleGroups",
    "isChild": false
  },
  {
    "file": "Azure::MachineLearningServices::Workspaces_jobs.json",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/jobs",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/workspaces"
  },
  {
    "file": "Azure::MachineLearningExperimentation::Accounts_workspaces_projects.json",
    "resourceType": "Microsoft.MachineLearningExperimentation/accounts/workspaces/projects",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningExperimentation/accounts/workspaces"
  },
  {
    "file": "Azure::DelegatedNetwork::DelegatedSubnets.json",
    "resourceType": "Microsoft.DelegatedNetwork/delegatedSubnets",
    "isChild": false
  },
  {
    "file": "Azure::Email::Accounts.json",
    "resourceType": "Sendgrid.Email/accounts",
    "isChild": false
  },
  {
    "file": "Azure::NetworkCloud::VirtualMachines_consoles.json",
    "resourceType": "Microsoft.NetworkCloud/virtualMachines/consoles",
    "isChild": true,
    "parentType": "Microsoft.NetworkCloud/virtualMachines"
  },
  {
    "file": "Azure::VisualStudio::Account_extension.json",
    "resourceType": "microsoft.visualstudio/account/extension",
    "isChild": true,
    "parentType": "microsoft.visualstudio/account"
  },
  {
    "file": "Azure::CodeSigning::CodeSigningAccounts_certificateProfiles.json",
    "resourceType": "Microsoft.CodeSigning/codeSigningAccounts/certificateProfiles",
    "isChild": true,
    "parentType": "Microsoft.CodeSigning/codeSigningAccounts"
  },
  {
    "file": "Azure::LabServices::Labaccounts.json",
    "resourceType": "Microsoft.LabServices/labaccounts",
    "isChild": false
  },
  {
    "file": "Azure::DesktopVirtualization::HostPools_privateEndpointConnections.json",
    "resourceType": "Microsoft.DesktopVirtualization/hostPools/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.DesktopVirtualization/hostPools"
  },
  {
    "file": "Azure::NetApp::NetAppAccounts_capacityPools_volumes_backups.json",
    "resourceType": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/backups",
    "isChild": true,
    "parentType": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
  },
  {
    "file": "Azure::DBforPostgreSQL::FlexibleServers_virtualendpoints.json",
    "resourceType": "Microsoft.DBforPostgreSQL/flexibleServers/virtualendpoints",
    "isChild": true,
    "parentType": "Microsoft.DBforPostgreSQL/flexibleServers"
  },
  {
    "file": "Azure::StorageSync::StorageSyncServices_syncGroups_serverEndpoints.json",
    "resourceType": "Microsoft.StorageSync/storageSyncServices/syncGroups/serverEndpoints",
    "isChild": true,
    "parentType": "Microsoft.StorageSync/storageSyncServices/syncGroups"
  },
  {
    "file": "Azure::DataFactory::Factories_adfcdcs.json",
    "resourceType": "Microsoft.DataFactory/factories/adfcdcs",
    "isChild": true,
    "parentType": "Microsoft.DataFactory/factories"
  },
  {
    "file": "Azure::Media::VideoAnalyzers_privateEndpointConnections.json",
    "resourceType": "Microsoft.Media/videoAnalyzers/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.Media/videoAnalyzers"
  },
  {
    "file": "Azure::ApiManagement::Service_apis_issues_comments.json",
    "resourceType": "Microsoft.ApiManagement/service/apis/issues/comments",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/apis/issues"
  },
  {
    "file": "Azure::HardwareSecurityModules::CloudHsmClusters_privateEndpointConnections.json",
    "resourceType": "Microsoft.HardwareSecurityModules/cloudHsmClusters/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.HardwareSecurityModules/cloudHsmClusters"
  },
  {
    "file": "Azure::TimeSeriesInsights::Environments.json",
    "resourceType": "Microsoft.TimeSeriesInsights/environments",
    "isChild": false
  },
  {
    "file": "Azure::ConnectedVMwarevSphere::Clusters.json",
    "resourceType": "Microsoft.ConnectedVMwarevSphere/clusters",
    "isChild": false
  },
  {
    "file": "Azure::ApiManagement::Service_workspaces_products.json",
    "resourceType": "Microsoft.ApiManagement/service/workspaces/products",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/workspaces"
  },
  {
    "file": "Azure::Cdn::Profiles_originGroups.json",
    "resourceType": "Microsoft.Cdn/profiles/originGroups",
    "isChild": true,
    "parentType": "Microsoft.Cdn/profiles"
  },
  {
    "file": "Azure::ApiManagement::Service_diagnostics.json",
    "resourceType": "Microsoft.ApiManagement/service/diagnostics",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service"
  },
  {
    "file": "Azure::DataFactory::Factories_privateEndpointConnections.json",
    "resourceType": "Microsoft.DataFactory/factories/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.DataFactory/factories"
  },
  {
    "file": "Azure::Sql::Servers_databases.json",
    "resourceType": "Microsoft.Sql/servers/databases",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers"
  },
  {
    "file": "Azure::KeyVault::Vaults_keys.json",
    "resourceType": "Microsoft.KeyVault/vaults/keys",
    "isChild": true,
    "parentType": "Microsoft.KeyVault/vaults"
  },
  {
    "file": "Azure::EdgeOrder::Addresses.json",
    "resourceType": "Microsoft.EdgeOrder/addresses",
    "isChild": false
  },
  {
    "file": "Azure::RecoveryServices::Vaults_replicationFabrics_replicationNetworks_replicationNetworkMappings.json",
    "resourceType": "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationNetworks/replicationNetworkMappings",
    "isChild": true,
    "parentType": "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationNetworks"
  },
  {
    "file": "Azure::SignalRService::SignalR_sharedPrivateLinkResources.json",
    "resourceType": "Microsoft.SignalRService/signalR/sharedPrivateLinkResources",
    "isChild": true,
    "parentType": "Microsoft.SignalRService/signalR"
  },
  {
    "file": "Azure::AwsConnector::Ec2KeyPairs.json",
    "resourceType": "Microsoft.AwsConnector/ec2KeyPairs",
    "isChild": false
  },
  {
    "file": "Azure::Sql::Servers_connectionPolicies.json",
    "resourceType": "Microsoft.Sql/servers/connectionPolicies",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers"
  },
  {
    "file": "Azure::Network::DnsZones_DS.json",
    "resourceType": "Microsoft.Network/dnsZones/DS",
    "isChild": true,
    "parentType": "Microsoft.Network/dnsZones"
  },
  {
    "file": "Azure::ApiManagement::Service_notifications_recipientUsers.json",
    "resourceType": "Microsoft.ApiManagement/service/notifications/recipientUsers",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/notifications"
  },
  {
    "file": "Azure::IoTOperationsDataProcessor::Instances_pipelines.json",
    "resourceType": "Microsoft.IoTOperationsDataProcessor/instances/pipelines",
    "isChild": true,
    "parentType": "Microsoft.IoTOperationsDataProcessor/instances"
  },
  {
    "file": "Azure::Network::VirtualHubs.json",
    "resourceType": "Microsoft.Network/virtualHubs",
    "isChild": false
  },
  {
    "file": "Azure::DBforPostgreSQL::ServerGroupsv2_roles.json",
    "resourceType": "Microsoft.DBforPostgreSQL/serverGroupsv2/roles",
    "isChild": true,
    "parentType": "Microsoft.DBforPostgreSQL/serverGroupsv2"
  },
  {
    "file": "Azure::CognitiveServices::Accounts_connections.json",
    "resourceType": "Microsoft.CognitiveServices/accounts/connections",
    "isChild": true,
    "parentType": "Microsoft.CognitiveServices/accounts"
  },
  {
    "file": "Azure::ScVmm::VirtualMachines_hybridIdentityMetadata.json",
    "resourceType": "Microsoft.ScVmm/virtualMachines/hybridIdentityMetadata",
    "isChild": true,
    "parentType": "Microsoft.ScVmm/virtualMachines"
  },
  {
    "file": "Azure::AzureStackHCI::VirtualMachines_hybridIdentityMetadata.json",
    "resourceType": "Microsoft.AzureStackHCI/virtualMachines/hybridIdentityMetadata",
    "isChild": true,
    "parentType": "Microsoft.AzureStackHCI/virtualMachines"
  },
  {
    "file": "Azure::BatchAI::FileServers.json",
    "resourceType": "Microsoft.BatchAI/fileServers",
    "isChild": false
  },
  {
    "file": "Azure::DataProtection::BackupVaults_backupPolicies.json",
    "resourceType": "Microsoft.DataProtection/backupVaults/backupPolicies",
    "isChild": true,
    "parentType": "Microsoft.DataProtection/backupVaults"
  },
  {
    "file": "Azure::Synapse::Workspaces_securityAlertPolicies.json",
    "resourceType": "Microsoft.Synapse/workspaces/securityAlertPolicies",
    "isChild": true,
    "parentType": "Microsoft.Synapse/workspaces"
  },
  {
    "file": "Azure::Relay::Namespaces_hybridConnections_authorizationRules.json",
    "resourceType": "Microsoft.Relay/namespaces/HybridConnections/authorizationRules",
    "isChild": true,
    "parentType": "Microsoft.Relay/namespaces/HybridConnections"
  },
  {
    "file": "Azure::Migrate::AssessmentProjects_hypervcollectors.json",
    "resourceType": "Microsoft.Migrate/assessmentProjects/hypervcollectors",
    "isChild": true,
    "parentType": "Microsoft.Migrate/assessmentProjects"
  },
  {
    "file": "Azure::ApiManagement::Service_portalconfigs.json",
    "resourceType": "Microsoft.ApiManagement/service/portalconfigs",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service"
  },
  {
    "file": "Azure::ApiManagement::Service_workspaces_tags.json",
    "resourceType": "Microsoft.ApiManagement/service/workspaces/tags",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/workspaces"
  },
  {
    "file": "Azure::DesktopVirtualization::Workspaces.json",
    "resourceType": "Microsoft.DesktopVirtualization/workspaces",
    "isChild": false
  },
  {
    "file": "Azure::Network::PrivateDnsZones_CNAME.json",
    "resourceType": "Microsoft.Network/privateDnsZones/CNAME",
    "isChild": true,
    "parentType": "Microsoft.Network/privateDnsZones"
  },
  {
    "file": "Azure::MachineLearningServices::Workspaces_components_versions.json",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/components/versions",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/workspaces/components"
  },
  {
    "file": "Azure::EventHub::Clusters.json",
    "resourceType": "Microsoft.EventHub/clusters",
    "isChild": false
  },
  {
    "file": "Azure::App::ManagedEnvironments_httpRouteConfigs.json",
    "resourceType": "Microsoft.App/managedEnvironments/httpRouteConfigs",
    "isChild": true,
    "parentType": "Microsoft.App/managedEnvironments"
  },
  {
    "file": "Azure::EventGrid::PartnerTopics.json",
    "resourceType": "Microsoft.EventGrid/partnerTopics",
    "isChild": false
  },
  {
    "file": "Azure::BatchAI::Workspaces_experiments.json",
    "resourceType": "Microsoft.BatchAI/workspaces/experiments",
    "isChild": true,
    "parentType": "Microsoft.BatchAI/workspaces"
  },
  {
    "file": "Azure::HybridContainerService::ProvisionedClusters_hybridIdentityMetadata.json",
    "resourceType": "Microsoft.HybridContainerService/provisionedClusters/hybridIdentityMetadata",
    "isChild": true,
    "parentType": "Microsoft.HybridContainerService/provisionedClusters"
  },
  {
    "file": "Azure::Insights::ScheduledQueryRules.json",
    "resourceType": "Microsoft.Insights/scheduledQueryRules",
    "isChild": false
  },
  {
    "file": "Azure::Sql::Servers_databases_dataMaskingPolicies.json",
    "resourceType": "Microsoft.Sql/servers/databases/dataMaskingPolicies",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers/databases"
  },
  {
    "file": "Azure::Synapse::Workspaces_extendedAuditingSettings.json",
    "resourceType": "Microsoft.Synapse/workspaces/extendedAuditingSettings",
    "isChild": true,
    "parentType": "Microsoft.Synapse/workspaces"
  },
  {
    "file": "Azure::Cdn::EdgeActions_versions.json",
    "resourceType": "Microsoft.Cdn/edgeActions/versions",
    "isChild": true,
    "parentType": "Microsoft.Cdn/edgeActions"
  },
  {
    "file": "Azure::KeyVault::Vaults.json",
    "resourceType": "Microsoft.KeyVault/vaults",
    "isChild": false
  },
  {
    "file": "Azure::MobileNetwork::Sims.json",
    "resourceType": "Microsoft.MobileNetwork/sims",
    "isChild": false
  },
  {
    "file": "Azure::BatchAI::Workspaces_fileServers.json",
    "resourceType": "Microsoft.BatchAI/workspaces/fileServers",
    "isChild": true,
    "parentType": "Microsoft.BatchAI/workspaces"
  },
  {
    "file": "Azure::HybridNetwork::Publishers_artifactStores_artifactManifests.json",
    "resourceType": "Microsoft.HybridNetwork/publishers/artifactStores/artifactManifests",
    "isChild": true,
    "parentType": "Microsoft.HybridNetwork/publishers/artifactStores"
  },
  {
    "file": "Azure::MobilePacketCore::ClusterServices.json",
    "resourceType": "Microsoft.MobilePacketCore/clusterServices",
    "isChild": false
  },
  {
    "file": "Azure::HybridCloud::CloudConnectors.json",
    "resourceType": "Microsoft.HybridCloud/cloudConnectors",
    "isChild": false
  },
  {
    "file": "Azure::DevCenter::Devcenters_curationProfiles.json",
    "resourceType": "Microsoft.DevCenter/devcenters/curationProfiles",
    "isChild": true,
    "parentType": "Microsoft.DevCenter/devcenters"
  },
  {
    "file": "Azure::MachineLearningServices::Workspaces_environments_versions.json",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/environments/versions",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/workspaces/environments"
  },
  {
    "file": "Azure::ElasticSan::ElasticSans.json",
    "resourceType": "Microsoft.ElasticSan/elasticSans",
    "isChild": false
  },
  {
    "file": "Azure::DataShare::Accounts_shareSubscriptions_dataSetMappings.json",
    "resourceType": "Microsoft.DataShare/accounts/shareSubscriptions/dataSetMappings",
    "isChild": true,
    "parentType": "Microsoft.DataShare/accounts/shareSubscriptions"
  },
  {
    "file": "Azure::IotCentral::IotApps.json",
    "resourceType": "Microsoft.IoTCentral/iotApps",
    "isChild": false
  },
  {
    "file": "Azure::ContainerService::ManagedClusters.json",
    "resourceType": "Microsoft.ContainerService/managedClusters",
    "isChild": false
  },
  {
    "file": "Azure::Network::PrivateLinkServices.json",
    "resourceType": "Microsoft.Network/privateLinkServices",
    "isChild": false
  },
  {
    "file": "Azure::Network::PrivateDnsZones_AAAA.json",
    "resourceType": "Microsoft.Network/privateDnsZones/AAAA",
    "isChild": true,
    "parentType": "Microsoft.Network/privateDnsZones"
  },
  {
    "file": "Azure::Confluent::Organizations.json",
    "resourceType": "Microsoft.Confluent/organizations",
    "isChild": false
  },
  {
    "file": "Azure::HealthcareApis::Workspaces_fhirservices.json",
    "resourceType": "Microsoft.HealthcareApis/workspaces/fhirservices",
    "isChild": true,
    "parentType": "Microsoft.HealthcareApis/workspaces"
  },
  {
    "file": "Azure::Kusto::Clusters_databases_scripts.json",
    "resourceType": "Microsoft.Kusto/clusters/databases/scripts",
    "isChild": true,
    "parentType": "Microsoft.Kusto/clusters/databases"
  },
  {
    "file": "Azure::App::ManagedEnvironments_daprComponents_resiliencyPolicies.json",
    "resourceType": "Microsoft.App/managedEnvironments/daprComponents/resiliencyPolicies",
    "isChild": true,
    "parentType": "Microsoft.App/managedEnvironments/daprComponents"
  },
  {
    "file": "Azure::AwsConnector::Ec2VPCPeeringConnections.json",
    "resourceType": "Microsoft.AwsConnector/ec2VPCPeeringConnections",
    "isChild": false
  },
  {
    "file": "Azure::Compute::CloudServices.json",
    "resourceType": "Microsoft.Compute/cloudServices",
    "isChild": false
  },
  {
    "file": "Azure::PowerBI::PrivateLinkServicesForPowerBI.json",
    "resourceType": "Microsoft.PowerBI/privateLinkServicesForPowerBI",
    "isChild": false
  },
  {
    "file": "Azure::DBforPostgreSQL::ServerGroupsv2.json",
    "resourceType": "Microsoft.DBforPostgreSQL/serverGroupsv2",
    "isChild": false
  },
  {
    "file": "Azure::RecoveryServices::Vaults_replicationFabrics_replicationProtectionContainers.json",
    "resourceType": "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers",
    "isChild": true,
    "parentType": "Microsoft.RecoveryServices/vaults/replicationFabrics"
  },
  {
    "file": "Azure::ApiManagement::Service_products_policies.json",
    "resourceType": "Microsoft.ApiManagement/service/products/policies",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/products"
  },
  {
    "file": "Azure::DevTestLab::Labs_users.json",
    "resourceType": "Microsoft.DevTestLab/labs/users",
    "isChild": true,
    "parentType": "Microsoft.DevTestLab/labs"
  },
  {
    "file": "Azure::MachineLearningServices::Registries_data.json",
    "resourceType": "Microsoft.MachineLearningServices/registries/data",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/registries"
  },
  {
    "file": "Azure::AgFoodPlatform::FarmBeats.json",
    "resourceType": "Microsoft.AgFoodPlatform/farmBeats",
    "isChild": false
  },
  {
    "file": "Azure::KeyVault::ManagedHSMs.json",
    "resourceType": "Microsoft.KeyVault/managedHSMs",
    "isChild": false
  },
  {
    "file": "Azure::AgriculturePlatform::AgriServices.json",
    "resourceType": "Microsoft.AgriculturePlatform/agriServices",
    "isChild": false
  },
  {
    "file": "Azure::Network::LoadBalancers_backendAddressPools.json",
    "resourceType": "Microsoft.Network/loadBalancers/backendAddressPools",
    "isChild": true,
    "parentType": "Microsoft.Network/loadBalancers"
  },
  {
    "file": "Azure::Network::VpnSites.json",
    "resourceType": "Microsoft.Network/vpnSites",
    "isChild": false
  },
  {
    "file": "Azure::Migrate::AssessmentProjects_servercollectors.json",
    "resourceType": "Microsoft.Migrate/assessmentProjects/servercollectors",
    "isChild": true,
    "parentType": "Microsoft.Migrate/assessmentProjects"
  },
  {
    "file": "Azure::OperationalInsights::Workspaces_dataSources.json",
    "resourceType": "Microsoft.OperationalInsights/workspaces/dataSources",
    "isChild": true,
    "parentType": "Microsoft.OperationalInsights/workspaces"
  },
  {
    "file": "Azure::SqlVirtualMachine::SqlVirtualMachines.json",
    "resourceType": "Microsoft.SqlVirtualMachine/sqlVirtualMachines",
    "isChild": false
  },
  {
    "file": "Azure::AwsConnector::MacieAllowLists.json",
    "resourceType": "Microsoft.AwsConnector/macieAllowLists",
    "isChild": false
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_tableRoleDefinitions.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/tableRoleDefinitions",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts"
  },
  {
    "file": "Azure::BotService::EnterpriseChannels.json",
    "resourceType": "Microsoft.BotService/enterpriseChannels",
    "isChild": false
  },
  {
    "file": "Azure::IoTOperationsMQ::Mq_dataLakeConnector.json",
    "resourceType": "Microsoft.IoTOperationsMQ/mq/dataLakeConnector",
    "isChild": true,
    "parentType": "Microsoft.IoTOperationsMQ/mq"
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_gremlinDatabases_throughputSettings.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/throughputSettings",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases"
  },
  {
    "file": "Azure::MachineLearningServices::Workspaces_endpoints.json",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/endpoints",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/workspaces"
  },
  {
    "file": "Azure::SecurityDevOps::AzureDevOpsConnectors_orgs.json",
    "resourceType": "Microsoft.SecurityDevOps/azureDevOpsConnectors/orgs",
    "isChild": true,
    "parentType": "Microsoft.SecurityDevOps/azureDevOpsConnectors"
  },
  {
    "file": "Azure::ApiManagement::Service_workspaces_groups.json",
    "resourceType": "Microsoft.ApiManagement/service/workspaces/groups",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/workspaces"
  },
  {
    "file": "Azure::AppPlatform::Spring_serviceRegistries.json",
    "resourceType": "Microsoft.AppPlatform/Spring/serviceRegistries",
    "isChild": true,
    "parentType": "Microsoft.AppPlatform/Spring"
  },
  {
    "file": "Azure::Network::DnsZones_CNAME.json",
    "resourceType": "Microsoft.Network/dnszones/CNAME",
    "isChild": true,
    "parentType": "Microsoft.Network/dnszones"
  },
  {
    "file": "Azure::Insights::ActionGroups.json",
    "resourceType": "Microsoft.Insights/actionGroups",
    "isChild": false
  },
  {
    "file": "Azure::StandbyPool::StandbyVirtualMachinePools.json",
    "resourceType": "Microsoft.StandbyPool/standbyVirtualMachinePools",
    "isChild": false
  },
  {
    "file": "Azure::IoTOperationsMQ::Mq_broker_authorization.json",
    "resourceType": "Microsoft.IoTOperationsMQ/mq/broker/authorization",
    "isChild": true,
    "parentType": "Microsoft.IoTOperationsMQ/mq/broker"
  },
  {
    "file": "Azure::Experimentation::ExperimentationWorkspaces.json",
    "resourceType": "SplitIO.Experimentation/experimentationWorkspaces",
    "isChild": false
  },
  {
    "file": "Azure::IoTOperationsMQ::Mq.json",
    "resourceType": "Microsoft.IoTOperationsMQ/mq",
    "isChild": false
  },
  {
    "file": "Azure::Automation::AutomationAccounts_softwareUpdateConfigurations.json",
    "resourceType": "Microsoft.Automation/automationAccounts/softwareUpdateConfigurations",
    "isChild": true,
    "parentType": "Microsoft.Automation/automationAccounts"
  },
  {
    "file": "Azure::Dashboard::Grafana_integrationFabrics.json",
    "resourceType": "Microsoft.Dashboard/grafana/integrationFabrics",
    "isChild": true,
    "parentType": "Microsoft.Dashboard/grafana"
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_copyJobs.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/copyJobs",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts"
  },
  {
    "file": "Azure::EventGrid::Namespaces_topics.json",
    "resourceType": "Microsoft.EventGrid/namespaces/topics",
    "isChild": true,
    "parentType": "Microsoft.EventGrid/namespaces"
  },
  {
    "file": "Azure::RecommendationsService::Accounts.json",
    "resourceType": "Microsoft.RecommendationsService/accounts",
    "isChild": false
  },
  {
    "file": "Azure::ApiManagement::Service_products_wikis.json",
    "resourceType": "Microsoft.ApiManagement/service/products/wikis",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/products"
  },
  {
    "file": "Azure::Kusto::Clusters_databases_principalAssignments.json",
    "resourceType": "Microsoft.Kusto/clusters/databases/principalAssignments",
    "isChild": true,
    "parentType": "Microsoft.Kusto/clusters/databases"
  },
  {
    "file": "Azure::Synapse::PrivateLinkHubs.json",
    "resourceType": "Microsoft.Synapse/privateLinkHubs",
    "isChild": false
  },
  {
    "file": "Azure::MobileNetwork::PacketCoreControlPlanes.json",
    "resourceType": "Microsoft.MobileNetwork/packetCoreControlPlanes",
    "isChild": false
  },
  {
    "file": "Azure::DBforMySQL::FlexibleServers_backups.json",
    "resourceType": "Microsoft.DBforMySQL/flexibleServers/backups",
    "isChild": true,
    "parentType": "Microsoft.DBforMySQL/flexibleServers"
  },
  {
    "file": "Azure::DataBoxEdge::DataBoxEdgeDevices_roles_addons.json",
    "resourceType": "Microsoft.DataBoxEdge/dataBoxEdgeDevices/roles/addons",
    "isChild": true,
    "parentType": "Microsoft.DataBoxEdge/dataBoxEdgeDevices/roles"
  },
  {
    "file": "Azure::Media::VideoAnalyzers.json",
    "resourceType": "Microsoft.Media/videoAnalyzers",
    "isChild": false
  },
  {
    "file": "Azure::Sql::Servers_databases_vulnerabilityAssessments.json",
    "resourceType": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers/databases"
  },
  {
    "file": "Azure::Web::Sites_slots_siteextensions.json",
    "resourceType": "Microsoft.Web/sites/slots/siteextensions",
    "isChild": true,
    "parentType": "Microsoft.Web/sites/slots"
  },
  {
    "file": "Azure::SecurityDevOps::GitHubConnectors_owners.json",
    "resourceType": "Microsoft.SecurityDevOps/gitHubConnectors/owners",
    "isChild": true,
    "parentType": "Microsoft.SecurityDevOps/gitHubConnectors"
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_sqlDatabases_clientEncryptionKeys.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/clientEncryptionKeys",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases"
  },
  {
    "file": "Azure::AwsConnector::EcsTaskDefinitions.json",
    "resourceType": "Microsoft.AwsConnector/ecsTaskDefinitions",
    "isChild": false
  },
  {
    "file": "Azure::Migrate::MigrateProjects_solutions.json",
    "resourceType": "Microsoft.Migrate/migrateProjects/solutions",
    "isChild": true,
    "parentType": "Microsoft.Migrate/migrateProjects"
  },
  {
    "file": "Azure::HybridData::DataManagers_dataStores.json",
    "resourceType": "Microsoft.HybridData/dataManagers/dataStores",
    "isChild": true,
    "parentType": "Microsoft.HybridData/dataManagers"
  },
  {
    "file": "Azure::Logz::Monitors_metricsSource.json",
    "resourceType": "Microsoft.Logz/monitors/metricsSource",
    "isChild": true,
    "parentType": "Microsoft.Logz/monitors"
  },
  {
    "file": "Azure::AwsConnector::ElasticLoadBalancingV2TargetGroups.json",
    "resourceType": "Microsoft.AwsConnector/elasticLoadBalancingV2TargetGroups",
    "isChild": false
  },
  {
    "file": "Azure::Sql::Servers_jobAgents_privateEndpoints.json",
    "resourceType": "Microsoft.Sql/servers/jobAgents/privateEndpoints",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers/jobAgents"
  },
  {
    "file": "Azure::SignalRService::SignalR_customDomains.json",
    "resourceType": "Microsoft.SignalRService/signalR/customDomains",
    "isChild": true,
    "parentType": "Microsoft.SignalRService/signalR"
  },
  {
    "file": "Azure::ManagedNetworkFabric::NetworkFabricControllers.json",
    "resourceType": "Microsoft.ManagedNetworkFabric/networkFabricControllers",
    "isChild": false
  },
  {
    "file": "Azure::Relay::Namespaces_authorizationRules.json",
    "resourceType": "Microsoft.Relay/namespaces/AuthorizationRules",
    "isChild": true,
    "parentType": "Microsoft.Relay/namespaces"
  },
  {
    "file": "Azure::OffAzure::ImportSites.json",
    "resourceType": "Microsoft.OffAzure/importSites",
    "isChild": false
  },
  {
    "file": "Azure::EventHub::Namespaces_networkRuleSets.json",
    "resourceType": "Microsoft.EventHub/namespaces/networkRuleSets",
    "isChild": true,
    "parentType": "Microsoft.EventHub/namespaces"
  },
  {
    "file": "Azure::ApiManagement::Service_apis_diagnostics.json",
    "resourceType": "Microsoft.ApiManagement/service/apis/diagnostics",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/apis"
  },
  {
    "file": "Azure::MachineLearningServices::Workspaces_connections.json",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/connections",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/workspaces"
  },
  {
    "file": "Azure::Logic::IntegrationAccounts_agreements.json",
    "resourceType": "Microsoft.Logic/integrationAccounts/agreements",
    "isChild": true,
    "parentType": "Microsoft.Logic/integrationAccounts"
  },
  {
    "file": "Azure::Media::VideoAnalyzers_accessPolicies.json",
    "resourceType": "Microsoft.Media/videoAnalyzers/accessPolicies",
    "isChild": true,
    "parentType": "Microsoft.Media/videoAnalyzers"
  },
  {
    "file": "Azure::CognitiveServices::Accounts_projects_capabilityHosts.json",
    "resourceType": "Microsoft.CognitiveServices/accounts/projects/capabilityHosts",
    "isChild": true,
    "parentType": "Microsoft.CognitiveServices/accounts/projects"
  },
  {
    "file": "Azure::Batch::BatchAccounts_pools.json",
    "resourceType": "Microsoft.Batch/batchAccounts/pools",
    "isChild": true,
    "parentType": "Microsoft.Batch/batchAccounts"
  },
  {
    "file": "Azure::Network::VirtualHubs_routeMaps.json",
    "resourceType": "Microsoft.Network/virtualHubs/routeMaps",
    "isChild": true,
    "parentType": "Microsoft.Network/virtualHubs"
  },
  {
    "file": "Azure::MachineLearningServices::Registries_models_versions.json",
    "resourceType": "Microsoft.MachineLearningServices/registries/models/versions",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/registries/models"
  },
  {
    "file": "Azure::DataBoxEdge::DataBoxEdgeDevices_storageAccountCredentials.json",
    "resourceType": "Microsoft.DataBoxEdge/dataBoxEdgeDevices/storageAccountCredentials",
    "isChild": true,
    "parentType": "Microsoft.DataBoxEdge/dataBoxEdgeDevices"
  },
  {
    "file": "Azure::MachineLearningServices::Workspaces_privateEndpointConnections.json",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/workspaces"
  },
  {
    "file": "Azure::Community::CommunityTrainings.json",
    "resourceType": "Microsoft.Community/communityTrainings",
    "isChild": false
  },
  {
    "file": "Azure::Cache::Redis_accessPolicies.json",
    "resourceType": "Microsoft.Cache/redis/accessPolicies",
    "isChild": true,
    "parentType": "Microsoft.Cache/redis"
  },
  {
    "file": "Azure::ApiManagement::Service_workspaces_certificates.json",
    "resourceType": "Microsoft.ApiManagement/service/workspaces/certificates",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/workspaces"
  },
  {
    "file": "Azure::Network::NetworkManagers_verifierWorkspaces_reachabilityAnalysisIntents.json",
    "resourceType": "Microsoft.Network/networkManagers/verifierWorkspaces/reachabilityAnalysisIntents",
    "isChild": true,
    "parentType": "Microsoft.Network/networkManagers/verifierWorkspaces"
  },
  {
    "file": "Azure::NetworkCloud::Clusters_bareMetalMachineKeySets.json",
    "resourceType": "Microsoft.NetworkCloud/clusters/bareMetalMachineKeySets",
    "isChild": true,
    "parentType": "Microsoft.NetworkCloud/clusters"
  },
  {
    "file": "Azure::Automanage::ConfigurationProfiles.json",
    "resourceType": "Microsoft.Automanage/configurationProfiles",
    "isChild": false
  },
  {
    "file": "Azure::AwsConnector::SecretsManagerResourcePolicies.json",
    "resourceType": "Microsoft.AwsConnector/secretsManagerResourcePolicies",
    "isChild": false
  },
  {
    "file": "Azure::EventGrid::PartnerConfigurations.json",
    "resourceType": "Microsoft.EventGrid/partnerConfigurations",
    "isChild": false
  },
  {
    "file": "Azure::SignalRService::SignalR_replicas_sharedPrivateLinkResources.json",
    "resourceType": "Microsoft.SignalRService/signalR/replicas/sharedPrivateLinkResources",
    "isChild": true,
    "parentType": "Microsoft.SignalRService/signalR/replicas"
  },
  {
    "file": "Azure::RedHatOpenShift::Openshiftclusters_machinePool.json",
    "resourceType": "Microsoft.RedHatOpenShift/openshiftclusters/machinePool",
    "isChild": true,
    "parentType": "Microsoft.RedHatOpenShift/openshiftclusters"
  },
  {
    "file": "Azure::Automation::AutomationAccounts_credentials.json",
    "resourceType": "Microsoft.Automation/automationAccounts/credentials",
    "isChild": true,
    "parentType": "Microsoft.Automation/automationAccounts"
  },
  {
    "file": "Azure::DevTestLab::Labs_virtualmachines_schedules.json",
    "resourceType": "Microsoft.DevTestLab/labs/virtualmachines/schedules",
    "isChild": true,
    "parentType": "Microsoft.DevTestLab/labs/virtualmachines"
  },
  {
    "file": "Azure::Migrate::AssessmentProjects_businessCases.json",
    "resourceType": "Microsoft.Migrate/assessmentProjects/businessCases",
    "isChild": true,
    "parentType": "Microsoft.Migrate/assessmentProjects"
  },
  {
    "file": "Azure::Datadog::Monitors.json",
    "resourceType": "Microsoft.Datadog/monitors",
    "isChild": false
  },
  {
    "file": "Azure::Block::StoragePools.json",
    "resourceType": "PureStorage.Block/storagePools",
    "isChild": false
  },
  {
    "file": "Azure::NetApp::NetAppAccounts_capacityPools_volumes_snapshots.json",
    "resourceType": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots",
    "isChild": true,
    "parentType": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
  },
  {
    "file": "Azure::ApiManagement::Service_workspaces_products_groupLinks.json",
    "resourceType": "Microsoft.ApiManagement/service/workspaces/products/groupLinks",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/workspaces/products"
  },
  {
    "file": "Azure::AVS::PrivateClouds_workloadNetworks_vmGroups.json",
    "resourceType": "Microsoft.AVS/privateClouds/workloadNetworks/vmGroups",
    "isChild": true,
    "parentType": "Microsoft.AVS/privateClouds/workloadNetworks"
  },
  {
    "file": "Azure::DBforMariaDB::Servers_configurations.json",
    "resourceType": "Microsoft.DBforMariaDB/servers/configurations",
    "isChild": true,
    "parentType": "Microsoft.DBforMariaDB/servers"
  },
  {
    "file": "Azure::Network::VpnGateways_vpnConnections.json",
    "resourceType": "Microsoft.Network/vpnGateways/vpnConnections",
    "isChild": true,
    "parentType": "Microsoft.Network/vpnGateways"
  },
  {
    "file": "Azure::NetApp::NetAppAccounts_capacityPools_volumes_volumeQuotaRules.json",
    "resourceType": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/volumeQuotaRules",
    "isChild": true,
    "parentType": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
  },
  {
    "file": "Azure::DeviceUpdate::Accounts.json",
    "resourceType": "Microsoft.DeviceUpdate/accounts",
    "isChild": false
  },
  {
    "file": "Azure::Web::Sites_slots_extensions.json",
    "resourceType": "Microsoft.Web/sites/slots/extensions",
    "isChild": true,
    "parentType": "Microsoft.Web/sites/slots"
  },
  {
    "file": "Azure::Storage::StorageAccounts.json",
    "resourceType": "Microsoft.Storage/storageAccounts",
    "isChild": false
  },
  {
    "file": "Azure::Compute::Galleries_applications_versions.json",
    "resourceType": "Microsoft.Compute/galleries/applications/versions",
    "isChild": true,
    "parentType": "Microsoft.Compute/galleries/applications"
  },
  {
    "file": "Azure::Logic::IntegrationAccounts.json",
    "resourceType": "Microsoft.Logic/integrationAccounts",
    "isChild": false
  },
  {
    "file": "Azure::ConnectedCache::IspCustomers_ispCacheNodes.json",
    "resourceType": "Microsoft.ConnectedCache/ispCustomers/ispCacheNodes",
    "isChild": true,
    "parentType": "Microsoft.ConnectedCache/ispCustomers"
  },
  {
    "file": "Azure::DataShare::Accounts_shares_invitations.json",
    "resourceType": "Microsoft.DataShare/accounts/shares/invitations",
    "isChild": true,
    "parentType": "Microsoft.DataShare/accounts/shares"
  },
  {
    "file": "Azure::Synapse::Workspaces_sqlPools_transparentDataEncryption.json",
    "resourceType": "Microsoft.Synapse/workspaces/sqlPools/transparentDataEncryption",
    "isChild": true,
    "parentType": "Microsoft.Synapse/workspaces/sqlPools"
  },
  {
    "file": "Azure::Web::Sites_premieraddons.json",
    "resourceType": "Microsoft.Web/sites/premieraddons",
    "isChild": true,
    "parentType": "Microsoft.Web/sites"
  },
  {
    "file": "Azure::RedHatOpenShift::OpenShiftClusters.json",
    "resourceType": "Microsoft.RedHatOpenShift/openShiftClusters",
    "isChild": false
  },
  {
    "file": "Azure::AppPlatform::Spring_buildServices_agentPools.json",
    "resourceType": "Microsoft.AppPlatform/Spring/buildServices/agentPools",
    "isChild": true,
    "parentType": "Microsoft.AppPlatform/Spring/buildServices"
  },
  {
    "file": "Azure::ConnectedVMwarevSphere::VirtualMachines_extensions.json",
    "resourceType": "Microsoft.ConnectedVMwarevSphere/virtualMachines/extensions",
    "isChild": true,
    "parentType": "Microsoft.ConnectedVMwarevSphere/virtualMachines"
  },
  {
    "file": "Azure::HybridConnectivity::PublicCloudConnectors.json",
    "resourceType": "Microsoft.HybridConnectivity/publicCloudConnectors",
    "isChild": false
  },
  {
    "file": "Azure::LabServices::Labaccounts_labs_environmentsettings.json",
    "resourceType": "Microsoft.LabServices/labaccounts/labs/environmentsettings",
    "isChild": true,
    "parentType": "Microsoft.LabServices/labaccounts/labs"
  },
  {
    "file": "Azure::AwsConnector::AcmCertificateSummaries.json",
    "resourceType": "Microsoft.AwsConnector/acmCertificateSummaries",
    "isChild": false
  },
  {
    "file": "Azure::MobileNetwork::PacketCoreControlPlanes_packetCaptures.json",
    "resourceType": "Microsoft.MobileNetwork/packetCoreControlPlanes/packetCaptures",
    "isChild": true,
    "parentType": "Microsoft.MobileNetwork/packetCoreControlPlanes"
  },
  {
    "file": "Azure::Web::Sites_siteextensions.json",
    "resourceType": "Microsoft.Web/sites/siteextensions",
    "isChild": true,
    "parentType": "Microsoft.Web/sites"
  },
  {
    "file": "Azure::MobileNetwork::MobileNetworks_services.json",
    "resourceType": "Microsoft.MobileNetwork/mobileNetworks/services",
    "isChild": true,
    "parentType": "Microsoft.MobileNetwork/mobileNetworks"
  },
  {
    "file": "Azure::DataMigration::MigrationServices.json",
    "resourceType": "Microsoft.DataMigration/migrationServices",
    "isChild": false
  },
  {
    "file": "Azure::IoTOperationsMQ::Mq_kafkaConnector_topicMap.json",
    "resourceType": "Microsoft.IoTOperationsMQ/mq/kafkaConnector/topicMap",
    "isChild": true,
    "parentType": "Microsoft.IoTOperationsMQ/mq/kafkaConnector"
  },
  {
    "file": "Azure::Cache::Redis.json",
    "resourceType": "Microsoft.Cache/Redis",
    "isChild": false
  },
  {
    "file": "Azure::ScVmm::VirtualMachines_extensions.json",
    "resourceType": "Microsoft.ScVmm/virtualMachines/extensions",
    "isChild": true,
    "parentType": "Microsoft.ScVmm/virtualMachines"
  },
  {
    "file": "Azure::OperationalInsights::Workspaces_storageInsightConfigs.json",
    "resourceType": "Microsoft.OperationalInsights/workspaces/storageInsightConfigs",
    "isChild": true,
    "parentType": "Microsoft.OperationalInsights/workspaces"
  },
  {
    "file": "Azure::Network::NetworkExperimentProfiles_Experiments.json",
    "resourceType": "Microsoft.Network/NetworkExperimentProfiles/Experiments",
    "isChild": true,
    "parentType": "Microsoft.Network/NetworkExperimentProfiles"
  },
  {
    "file": "Azure::AwsConnector::OrganizationsAccounts.json",
    "resourceType": "Microsoft.AwsConnector/organizationsAccounts",
    "isChild": false
  },
  {
    "file": "Azure::Cdn::Profiles_ruleSets_rules.json",
    "resourceType": "Microsoft.Cdn/profiles/ruleSets/rules",
    "isChild": true,
    "parentType": "Microsoft.Cdn/profiles/ruleSets"
  },
  {
    "file": "Azure::Atlas::Organizations.json",
    "resourceType": "MongoDB.Atlas/organizations",
    "isChild": false
  },
  {
    "file": "Azure::App::ManagedEnvironments_managedCertificates.json",
    "resourceType": "Microsoft.App/managedEnvironments/managedCertificates",
    "isChild": true,
    "parentType": "Microsoft.App/managedEnvironments"
  },
  {
    "file": "Azure::Network::CustomIpPrefixes.json",
    "resourceType": "Microsoft.Network/customIpPrefixes",
    "isChild": false
  },
  {
    "file": "Azure::AwsConnector::ElasticLoadBalancingV2TargetHealthDescriptions.json",
    "resourceType": "Microsoft.AwsConnector/elasticLoadBalancingV2TargetHealthDescriptions",
    "isChild": false
  },
  {
    "file": "Azure::AzureStackHCI::Virtualmachines.json",
    "resourceType": "Microsoft.AzureStackHCI/virtualMachines",
    "isChild": false
  },
  {
    "file": "Azure::EventHub::Namespaces_eventhubs_authorizationRules.json",
    "resourceType": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
    "isChild": true,
    "parentType": "Microsoft.EventHub/namespaces/eventhubs"
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_cassandraKeyspaces_views_throughputSettings.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/views/throughputSettings",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/views"
  },
  {
    "file": "Azure::Sovereign::LandingZoneAccounts_landingZoneConfigurations.json",
    "resourceType": "Microsoft.Sovereign/landingZoneAccounts/landingZoneConfigurations",
    "isChild": true,
    "parentType": "Microsoft.Sovereign/landingZoneAccounts"
  },
  {
    "file": "Azure::Web::Sites_slots_certificates.json",
    "resourceType": "Microsoft.Web/sites/slots/certificates",
    "isChild": true,
    "parentType": "Microsoft.Web/sites/slots"
  },
  {
    "file": "Azure::AwsConnector::LogsMetricFilters.json",
    "resourceType": "Microsoft.AwsConnector/logsMetricFilters",
    "isChild": false
  },
  {
    "file": "Azure::AwsConnector::EcrRepositories.json",
    "resourceType": "Microsoft.AwsConnector/ecrRepositories",
    "isChild": false
  },
  {
    "file": "Azure::StorSimple::Managers_devices_iscsiservers_disks.json",
    "resourceType": "Microsoft.StorSimple/managers/devices/iscsiservers/disks",
    "isChild": true,
    "parentType": "Microsoft.StorSimple/managers/devices/iscsiservers"
  },
  {
    "file": "Azure::Cache::RedisEnterprise_databases_accessPolicyAssignments.json",
    "resourceType": "Microsoft.Cache/redisEnterprise/databases/accessPolicyAssignments",
    "isChild": true,
    "parentType": "Microsoft.Cache/redisEnterprise/databases"
  },
  {
    "file": "Azure::HyperExecute::Organizations.json",
    "resourceType": "LambdaTest.HyperExecute/organizations",
    "isChild": false
  },
  {
    "file": "Azure::Network::Connections.json",
    "resourceType": "Microsoft.Network/connections",
    "isChild": false
  },
  {
    "file": "Azure::DataBoxEdge::DataBoxEdgeDevices_diagnosticRemoteSupportSettings.json",
    "resourceType": "Microsoft.DataBoxEdge/dataBoxEdgeDevices/diagnosticRemoteSupportSettings",
    "isChild": true,
    "parentType": "Microsoft.DataBoxEdge/dataBoxEdgeDevices"
  },
  {
    "file": "Azure::SecurityAndCompliance::PrivateLinkServicesForEDMUpload_privateEndpointConnections.json",
    "resourceType": "Microsoft.SecurityAndCompliance/privateLinkServicesForEDMUpload/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.SecurityAndCompliance/privateLinkServicesForEDMUpload"
  },
  {
    "file": "Azure::RedHatOpenShift::Openshiftclusters_syncSet.json",
    "resourceType": "Microsoft.RedHatOpenShift/openshiftclusters/syncSet",
    "isChild": true,
    "parentType": "Microsoft.RedHatOpenShift/openshiftclusters"
  },
  {
    "file": "Azure::ApiManagement::Service_apis_tagDescriptions.json",
    "resourceType": "Microsoft.ApiManagement/service/apis/tagDescriptions",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/apis"
  },
  {
    "file": "Azure::AppPlatform::Spring_apps_bindings.json",
    "resourceType": "Microsoft.AppPlatform/Spring/apps/bindings",
    "isChild": true,
    "parentType": "Microsoft.AppPlatform/Spring/apps"
  },
  {
    "file": "Azure::Chaos::Experiments.json",
    "resourceType": "Microsoft.Chaos/experiments",
    "isChild": false
  },
  {
    "file": "Azure::AppPlatform::Spring_apps_domains.json",
    "resourceType": "Microsoft.AppPlatform/Spring/apps/domains",
    "isChild": true,
    "parentType": "Microsoft.AppPlatform/Spring/apps"
  },
  {
    "file": "Azure::DBforMariaDB::Servers_databases.json",
    "resourceType": "Microsoft.DBforMariaDB/servers/databases",
    "isChild": true,
    "parentType": "Microsoft.DBforMariaDB/servers"
  },
  {
    "file": "Azure::RecoveryServices::Vaults_certificates.json",
    "resourceType": "Microsoft.RecoveryServices/vaults/certificates",
    "isChild": true,
    "parentType": "Microsoft.RecoveryServices/vaults"
  },
  {
    "file": "Azure::ContainerService::ManagedClusters_trustedAccessRoleBindings.json",
    "resourceType": "Microsoft.ContainerService/managedClusters/trustedAccessRoleBindings",
    "isChild": true,
    "parentType": "Microsoft.ContainerService/managedClusters"
  },
  {
    "file": "Azure::Automation::AutomationAccounts_powerShell72Modules.json",
    "resourceType": "Microsoft.Automation/automationAccounts/powerShell72Modules",
    "isChild": true,
    "parentType": "Microsoft.Automation/automationAccounts"
  },
  {
    "file": "Azure::DataMigration::Services_projects.json",
    "resourceType": "Microsoft.DataMigration/services/projects",
    "isChild": true,
    "parentType": "Microsoft.DataMigration/services"
  },
  {
    "file": "Azure::Network::FrontDoors_rulesEngines.json",
    "resourceType": "Microsoft.Network/frontDoors/rulesEngines",
    "isChild": true,
    "parentType": "Microsoft.Network/frontDoors"
  },
  {
    "file": "Azure::OnlineExperimentation::Workspaces.json",
    "resourceType": "Microsoft.OnlineExperimentation/workspaces",
    "isChild": false
  },
  {
    "file": "Azure::Sql::ManagedInstances_databases_backupLongTermRetentionPolicies.json",
    "resourceType": "Microsoft.Sql/managedInstances/databases/backupLongTermRetentionPolicies",
    "isChild": true,
    "parentType": "Microsoft.Sql/managedInstances/databases"
  },
  {
    "file": "Azure::CognitiveServices::Accounts_encryptionScopes.json",
    "resourceType": "Microsoft.CognitiveServices/accounts/encryptionScopes",
    "isChild": true,
    "parentType": "Microsoft.CognitiveServices/accounts"
  },
  {
    "file": "Azure::Synapse::Workspaces_sqlPools_geoBackupPolicies.json",
    "resourceType": "Microsoft.Synapse/workspaces/sqlPools/geoBackupPolicies",
    "isChild": true,
    "parentType": "Microsoft.Synapse/workspaces/sqlPools"
  },
  {
    "file": "Azure::AwsConnector::SqsQueues.json",
    "resourceType": "Microsoft.AwsConnector/sqsQueues",
    "isChild": false
  },
  {
    "file": "Azure::App::Builders.json",
    "resourceType": "Microsoft.App/builders",
    "isChild": false
  },
  {
    "file": "Azure::ContainerRegistry::Registries_importPipelines.json",
    "resourceType": "Microsoft.ContainerRegistry/registries/importPipelines",
    "isChild": true,
    "parentType": "Microsoft.ContainerRegistry/registries"
  },
  {
    "file": "Azure::AzureArcData::SqlServerEsuLicenses.json",
    "resourceType": "Microsoft.AzureArcData/sqlServerEsuLicenses",
    "isChild": false
  },
  {
    "file": "Azure::DataBoxEdge::DataBoxEdgeDevices_storageAccounts.json",
    "resourceType": "Microsoft.DataBoxEdge/dataBoxEdgeDevices/storageAccounts",
    "isChild": true,
    "parentType": "Microsoft.DataBoxEdge/dataBoxEdgeDevices"
  },
  {
    "file": "Azure::Web::Sites_slots_config.json",
    "resourceType": "Microsoft.Web/sites/slots/config",
    "isChild": true,
    "parentType": "Microsoft.Web/sites/slots"
  },
  {
    "file": "Azure::HybridNetwork::SiteNetworkServices.json",
    "resourceType": "Microsoft.HybridNetwork/siteNetworkServices",
    "isChild": false
  },
  {
    "file": "Azure::DesktopVirtualization::ApplicationGroups_applications.json",
    "resourceType": "Microsoft.DesktopVirtualization/applicationGroups/applications",
    "isChild": true,
    "parentType": "Microsoft.DesktopVirtualization/applicationGroups"
  },
  {
    "file": "Azure::SecurityDevOps::AzureDevOpsConnectors.json",
    "resourceType": "Microsoft.SecurityDevOps/azureDevOpsConnectors",
    "isChild": false
  },
  {
    "file": "Azure::DataLakeStore::Accounts_firewallRules.json",
    "resourceType": "Microsoft.DataLakeStore/accounts/firewallRules",
    "isChild": true,
    "parentType": "Microsoft.DataLakeStore/accounts"
  },
  {
    "file": "Azure::Sql::Servers_azureADOnlyAuthentications.json",
    "resourceType": "Microsoft.Sql/servers/azureADOnlyAuthentications",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers"
  },
  {
    "file": "Azure::DBforMySQL::FlexibleServers_databases.json",
    "resourceType": "Microsoft.DBforMySQL/flexibleServers/databases",
    "isChild": true,
    "parentType": "Microsoft.DBforMySQL/flexibleServers"
  },
  {
    "file": "Azure::Cdn::Profiles_tunnelPolicies.json",
    "resourceType": "Microsoft.Cdn/profiles/tunnelPolicies",
    "isChild": true,
    "parentType": "Microsoft.Cdn/profiles"
  },
  {
    "file": "Azure::DataFactory::Factories_managedVirtualNetworks_managedPrivateEndpoints.json",
    "resourceType": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
    "isChild": true,
    "parentType": "Microsoft.DataFactory/factories/managedVirtualNetworks"
  },
  {
    "file": "Azure::Observability::Monitors.json",
    "resourceType": "NewRelic.Observability/monitors",
    "isChild": false
  },
  {
    "file": "Azure::NetworkCloud::DefaultCniNetworks.json",
    "resourceType": "Microsoft.NetworkCloud/defaultCniNetworks",
    "isChild": false
  },
  {
    "file": "Azure::AwsConnector::S3AccessControlPolicies.json",
    "resourceType": "Microsoft.AwsConnector/s3AccessControlPolicies",
    "isChild": false
  },
  {
    "file": "Azure::Automation::AutomationAccounts_webhooks.json",
    "resourceType": "Microsoft.Automation/automationAccounts/webhooks",
    "isChild": true,
    "parentType": "Microsoft.Automation/automationAccounts"
  },
  {
    "file": "Azure::DevTestLab::Labs_artifactsources.json",
    "resourceType": "Microsoft.DevTestLab/labs/artifactsources",
    "isChild": true,
    "parentType": "Microsoft.DevTestLab/labs"
  },
  {
    "file": "Azure::CognitiveServices::Accounts_raiBlocklists_raiBlocklistItems.json",
    "resourceType": "Microsoft.CognitiveServices/accounts/raiBlocklists/raiBlocklistItems",
    "isChild": true,
    "parentType": "Microsoft.CognitiveServices/accounts/raiBlocklists"
  },
  {
    "file": "Azure::IntegrationSpaces::Spaces_applications_businessProcesses.json",
    "resourceType": "Microsoft.IntegrationSpaces/spaces/applications/businessProcesses",
    "isChild": true,
    "parentType": "Microsoft.IntegrationSpaces/spaces/applications"
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_mongodbUserDefinitions.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/mongodbUserDefinitions",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts"
  },
  {
    "file": "Azure::Migrate::MigrateProjects_privateEndpointConnectionProxies.json",
    "resourceType": "Microsoft.Migrate/migrateProjects/privateEndpointConnectionProxies",
    "isChild": true,
    "parentType": "Microsoft.Migrate/migrateProjects"
  },
  {
    "file": "Azure::ManagedNetworkFabric::NetworkDevices_networkInterfaces.json",
    "resourceType": "Microsoft.ManagedNetworkFabric/networkDevices/networkInterfaces",
    "isChild": true,
    "parentType": "Microsoft.ManagedNetworkFabric/networkDevices"
  },
  {
    "file": "Azure::NetworkCloud::Racks.json",
    "resourceType": "Microsoft.NetworkCloud/racks",
    "isChild": false
  },
  {
    "file": "Azure::App::ContainerApps_resiliencyPolicies.json",
    "resourceType": "Microsoft.App/containerApps/resiliencyPolicies",
    "isChild": true,
    "parentType": "Microsoft.App/containerApps"
  },
  {
    "file": "Azure::ApiManagement::Service_apis_tags.json",
    "resourceType": "Microsoft.ApiManagement/service/apis/tags",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/apis"
  },
  {
    "file": "Azure::ServiceFabricMesh::Secrets.json",
    "resourceType": "Microsoft.ServiceFabricMesh/secrets",
    "isChild": false
  },
  {
    "file": "Azure::OffAzureSpringBoot::Springbootsites.json",
    "resourceType": "Microsoft.OffAzureSpringBoot/springbootsites",
    "isChild": false
  },
  {
    "file": "Azure::BatchAI::Workspaces_experiments_jobs.json",
    "resourceType": "Microsoft.BatchAI/workspaces/experiments/jobs",
    "isChild": true,
    "parentType": "Microsoft.BatchAI/workspaces/experiments"
  },
  {
    "file": "Azure::DBforMySQL::FlexibleServers_privateEndpointConnections.json",
    "resourceType": "Microsoft.DBforMySQL/flexibleServers/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.DBforMySQL/flexibleServers"
  },
  {
    "file": "Azure::ElasticSan::ElasticSans_volumegroups.json",
    "resourceType": "Microsoft.ElasticSan/elasticSans/volumegroups",
    "isChild": true,
    "parentType": "Microsoft.ElasticSan/elasticSans"
  },
  {
    "file": "Azure::MySQLDiscovery::MySQLSites_MySQLServers.json",
    "resourceType": "Microsoft.MySQLDiscovery/MySQLSites/MySQLServers",
    "isChild": true,
    "parentType": "Microsoft.MySQLDiscovery/MySQLSites"
  },
  {
    "file": "Azure::Database::AutonomousDatabases_autonomousDatabaseBackups.json",
    "resourceType": "Oracle.Database/autonomousDatabases/autonomousDatabaseBackups",
    "isChild": true,
    "parentType": "Oracle.Database/autonomousDatabases"
  },
  {
    "file": "Azure::MachineLearningServices::Workspaces_batchEndpoints.json",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/batchEndpoints",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/workspaces"
  },
  {
    "file": "Azure::DBforMySQL::Servers_privateEndpointConnections.json",
    "resourceType": "Microsoft.DBforMySQL/servers/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.DBforMySQL/servers"
  },
  {
    "file": "Azure::MachineLearningServices::Registries.json",
    "resourceType": "Microsoft.MachineLearningServices/registries",
    "isChild": false
  },
  {
    "file": "Azure::Migrate::AssessmentProjects_webAppCollectors.json",
    "resourceType": "Microsoft.Migrate/assessmentProjects/webAppCollectors",
    "isChild": true,
    "parentType": "Microsoft.Migrate/assessmentProjects"
  },
  {
    "file": "Azure::IntegrationSpaces::Spaces.json",
    "resourceType": "Microsoft.IntegrationSpaces/spaces",
    "isChild": false
  },
  {
    "file": "Azure::Web::Sites_networkConfig.json",
    "resourceType": "Microsoft.Web/sites/networkConfig",
    "isChild": true,
    "parentType": "Microsoft.Web/sites"
  },
  {
    "file": "Azure::ServiceBus::Namespaces_virtualnetworkrules.json",
    "resourceType": "Microsoft.ServiceBus/namespaces/virtualnetworkrules",
    "isChild": true,
    "parentType": "Microsoft.ServiceBus/namespaces"
  },
  {
    "file": "Azure::SecurityAndCompliance::PrivateLinkServicesForM365SecurityCenter_privateEndpointConnections.json",
    "resourceType": "Microsoft.SecurityAndCompliance/privateLinkServicesForM365SecurityCenter/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.SecurityAndCompliance/privateLinkServicesForM365SecurityCenter"
  },
  {
    "file": "Azure::PowerBI::WorkspaceCollections.json",
    "resourceType": "Microsoft.PowerBI/workspaceCollections",
    "isChild": false
  },
  {
    "file": "Azure::DomainRegistration::Domains_domainOwnershipIdentifiers.json",
    "resourceType": "Microsoft.DomainRegistration/domains/domainOwnershipIdentifiers",
    "isChild": true,
    "parentType": "Microsoft.DomainRegistration/domains"
  },
  {
    "file": "Azure::Storage::StorageAccounts_fileServices_shares.json",
    "resourceType": "Microsoft.Storage/storageAccounts/fileServices/shares",
    "isChild": true,
    "parentType": "Microsoft.Storage/storageAccounts/fileServices"
  },
  {
    "file": "Azure::RecoveryServices::Vaults_backupEncryptionConfigs.json",
    "resourceType": "Microsoft.RecoveryServices/vaults/backupEncryptionConfigs",
    "isChild": true,
    "parentType": "Microsoft.RecoveryServices/vaults"
  },
  {
    "file": "Azure::HybridNetwork::ConfigurationGroupValues.json",
    "resourceType": "Microsoft.HybridNetwork/configurationGroupValues",
    "isChild": false
  },
  {
    "file": "Azure::IoTOperations::Instances_dataflowProfiles.json",
    "resourceType": "Microsoft.IoTOperations/instances/dataflowProfiles",
    "isChild": true,
    "parentType": "Microsoft.IoTOperations/instances"
  },
  {
    "file": "Azure::Sql::Servers_databases_transparentDataEncryption.json",
    "resourceType": "Microsoft.Sql/servers/databases/transparentDataEncryption",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers/databases"
  },
  {
    "file": "Azure::SqlVirtualMachine::SqlVirtualMachineGroups.json",
    "resourceType": "Microsoft.SqlVirtualMachine/sqlVirtualMachineGroups",
    "isChild": false
  },
  {
    "file": "Azure::Observability::Monitors_monitoredSubscriptions.json",
    "resourceType": "NewRelic.Observability/monitors/monitoredSubscriptions",
    "isChild": true,
    "parentType": "NewRelic.Observability/monitors"
  },
  {
    "file": "Azure::Sql::Servers_jobAgents_jobs.json",
    "resourceType": "Microsoft.Sql/servers/jobAgents/jobs",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers/jobAgents"
  },
  {
    "file": "Azure::AzureSphere::Catalogs_products_deviceGroups_deployments.json",
    "resourceType": "Microsoft.AzureSphere/catalogs/products/deviceGroups/deployments",
    "isChild": true,
    "parentType": "Microsoft.AzureSphere/catalogs/products/deviceGroups"
  },
  {
    "file": "Azure::ApiManagement::Service_workspaces_apis_schemas.json",
    "resourceType": "Microsoft.ApiManagement/service/workspaces/apis/schemas",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/workspaces/apis"
  },
  {
    "file": "Azure::EventHub::Namespaces_disasterRecoveryConfigs.json",
    "resourceType": "Microsoft.EventHub/namespaces/disasterRecoveryConfigs",
    "isChild": true,
    "parentType": "Microsoft.EventHub/namespaces"
  },
  {
    "file": "Azure::Network::PublicIPPrefixes.json",
    "resourceType": "Microsoft.Network/publicIPPrefixes",
    "isChild": false
  },
  {
    "file": "Azure::AgFoodPlatform::FarmBeats_privateEndpointConnections.json",
    "resourceType": "Microsoft.AgFoodPlatform/farmBeats/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.AgFoodPlatform/farmBeats"
  },
  {
    "file": "Azure::Storage::StorageAccounts_managementPolicies.json",
    "resourceType": "Microsoft.Storage/storageAccounts/managementPolicies",
    "isChild": true,
    "parentType": "Microsoft.Storage/storageAccounts"
  },
  {
    "file": "Azure::EventGrid::SystemTopics_eventSubscriptions.json",
    "resourceType": "Microsoft.EventGrid/systemTopics/eventSubscriptions",
    "isChild": true,
    "parentType": "Microsoft.EventGrid/systemTopics"
  },
  {
    "file": "Azure::Migrate::ModernizeProjects_workloadInstances.json",
    "resourceType": "Microsoft.Migrate/modernizeProjects/workloadInstances",
    "isChild": true,
    "parentType": "Microsoft.Migrate/modernizeProjects"
  },
  {
    "file": "Azure::CognitiveServices::Accounts_capabilityHosts.json",
    "resourceType": "Microsoft.CognitiveServices/accounts/capabilityHosts",
    "isChild": true,
    "parentType": "Microsoft.CognitiveServices/accounts"
  },
  {
    "file": "Azure::Media::Mediaservices_privateEndpointConnections.json",
    "resourceType": "Microsoft.Media/mediaservices/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.Media/mediaservices"
  },
  {
    "file": "Azure::Sql::Servers_jobAgents_credentials.json",
    "resourceType": "Microsoft.Sql/servers/jobAgents/credentials",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers/jobAgents"
  },
  {
    "file": "Azure::AwsConnector::ApiGatewayRestApis.json",
    "resourceType": "Microsoft.AwsConnector/apiGatewayRestApis",
    "isChild": false
  },
  {
    "file": "Azure::NotificationHubs::Namespaces.json",
    "resourceType": "Microsoft.NotificationHubs/namespaces",
    "isChild": false
  },
  {
    "file": "Azure::Network::Trafficmanagerprofiles_ExternalEndpoints.json",
    "resourceType": "Microsoft.Network/trafficmanagerprofiles/ExternalEndpoints",
    "isChild": true,
    "parentType": "Microsoft.Network/trafficmanagerprofiles"
  },
  {
    "file": "Azure::Purview::Accounts.json",
    "resourceType": "Microsoft.Purview/accounts",
    "isChild": false
  },
  {
    "file": "Azure::Insights::Workbooktemplates.json",
    "resourceType": "Microsoft.Insights/workbooktemplates",
    "isChild": false
  },
  {
    "file": "Azure::Media::MediaServices_assets_assetFilters.json",
    "resourceType": "Microsoft.Media/mediaServices/assets/assetFilters",
    "isChild": true,
    "parentType": "Microsoft.Media/mediaServices/assets"
  },
  {
    "file": "Azure::Sql::Servers_databases_advisors.json",
    "resourceType": "Microsoft.Sql/servers/databases/advisors",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers/databases"
  },
  {
    "file": "Azure::Cdn::EdgeActions.json",
    "resourceType": "Microsoft.Cdn/edgeActions",
    "isChild": false
  },
  {
    "file": "Azure::Orbital::GroundStations.json",
    "resourceType": "Microsoft.Orbital/groundStations",
    "isChild": false
  },
  {
    "file": "Azure::ApiManagement::Service_workspaces_apis_policies.json",
    "resourceType": "Microsoft.ApiManagement/service/workspaces/apis/policies",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/workspaces/apis"
  },
  {
    "file": "Azure::AwsConnector::Route53ResourceRecordSets.json",
    "resourceType": "Microsoft.AwsConnector/route53ResourceRecordSets",
    "isChild": false
  },
  {
    "file": "Azure::DevSpaces::Controllers.json",
    "resourceType": "Microsoft.DevSpaces/controllers",
    "isChild": false
  },
  {
    "file": "Azure::Peering::PeeringServices.json",
    "resourceType": "Microsoft.Peering/peeringServices",
    "isChild": false
  },
  {
    "file": "Azure::StorageCache::Caches.json",
    "resourceType": "Microsoft.StorageCache/caches",
    "isChild": false
  },
  {
    "file": "Azure::AppPlatform::Spring_gateways_routeConfigs.json",
    "resourceType": "Microsoft.AppPlatform/Spring/gateways/routeConfigs",
    "isChild": true,
    "parentType": "Microsoft.AppPlatform/Spring/gateways"
  },
  {
    "file": "Azure::NotificationHubs::Namespaces_notificationHubs.json",
    "resourceType": "Microsoft.NotificationHubs/namespaces/notificationHubs",
    "isChild": true,
    "parentType": "Microsoft.NotificationHubs/namespaces"
  },
  {
    "file": "Azure::Relay::Namespaces_networkRuleSets.json",
    "resourceType": "Microsoft.Relay/namespaces/networkRuleSets",
    "isChild": true,
    "parentType": "Microsoft.Relay/namespaces"
  },
  {
    "file": "Azure::LabServices::Labs.json",
    "resourceType": "Microsoft.LabServices/labs",
    "isChild": false
  },
  {
    "file": "Azure::Web::Sites_virtualNetworkConnections_gateways.json",
    "resourceType": "Microsoft.Web/sites/virtualNetworkConnections/gateways",
    "isChild": true,
    "parentType": "Microsoft.Web/sites/virtualNetworkConnections"
  },
  {
    "file": "Azure::AwsConnector::ConfigServiceDeliveryChannels.json",
    "resourceType": "Microsoft.AwsConnector/configServiceDeliveryChannels",
    "isChild": false
  },
  {
    "file": "Azure::RecoveryServices::Vaults_extendedInformation.json",
    "resourceType": "Microsoft.RecoveryServices/vaults/extendedInformation",
    "isChild": true,
    "parentType": "Microsoft.RecoveryServices/vaults"
  },
  {
    "file": "Azure::Storage::StorageAccounts_blobServices_containers_immutabilityPolicies.json",
    "resourceType": "Microsoft.Storage/storageAccounts/blobServices/containers/immutabilityPolicies",
    "isChild": true,
    "parentType": "Microsoft.Storage/storageAccounts/blobServices/containers"
  },
  {
    "file": "Azure::SecurityAndCompliance::PrivateLinkServicesForO365ManagementActivityAPI.json",
    "resourceType": "Microsoft.SecurityAndCompliance/privateLinkServicesForO365ManagementActivityAPI",
    "isChild": false
  },
  {
    "file": "Azure::Network::DnsForwardingRulesets.json",
    "resourceType": "Microsoft.Network/dnsForwardingRulesets",
    "isChild": false
  },
  {
    "file": "Azure::MachineLearningServices::Registries_environments.json",
    "resourceType": "Microsoft.MachineLearningServices/registries/environments",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/registries"
  },
  {
    "file": "Azure::Cloudngfw::LocalRulestacks_fqdnlists.json",
    "resourceType": "PaloAltoNetworks.Cloudngfw/localRulestacks/fqdnlists",
    "isChild": true,
    "parentType": "PaloAltoNetworks.Cloudngfw/localRulestacks"
  },
  {
    "file": "Azure::App::ManagedEnvironments.json",
    "resourceType": "Microsoft.App/managedEnvironments",
    "isChild": false
  },
  {
    "file": "Azure::StorageActions::StorageTasks.json",
    "resourceType": "Microsoft.StorageActions/storageTasks",
    "isChild": false
  },
  {
    "file": "Azure::CognitiveServices::Accounts_projects.json",
    "resourceType": "Microsoft.CognitiveServices/accounts/projects",
    "isChild": true,
    "parentType": "Microsoft.CognitiveServices/accounts"
  },
  {
    "file": "Azure::IoTOperationsMQ::Mq_broker.json",
    "resourceType": "Microsoft.IoTOperationsMQ/mq/broker",
    "isChild": true,
    "parentType": "Microsoft.IoTOperationsMQ/mq"
  },
  {
    "file": "Azure::StandbyPool::StandbyContainerGroupPools.json",
    "resourceType": "Microsoft.StandbyPool/standbyContainerGroupPools",
    "isChild": false
  },
  {
    "file": "Azure::MachineLearningServices::Workspaces_marketplaceSubscriptions.json",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/marketplaceSubscriptions",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/workspaces"
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_cassandraKeyspaces_tables.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/tables",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces"
  },
  {
    "file": "Azure::Web::StaticSites_config.json",
    "resourceType": "Microsoft.Web/staticSites/config",
    "isChild": true,
    "parentType": "Microsoft.Web/staticSites"
  },
  {
    "file": "Azure::SignalRService::WebPubSub.json",
    "resourceType": "Microsoft.SignalRService/webPubSub",
    "isChild": false
  },
  {
    "file": "Azure::DBforMySQL::FlexibleServers_firewallRules.json",
    "resourceType": "Microsoft.DBforMySQL/flexibleServers/firewallRules",
    "isChild": true,
    "parentType": "Microsoft.DBforMySQL/flexibleServers"
  },
  {
    "file": "Azure::AwsConnector::ConfigServiceConfigurationRecorders.json",
    "resourceType": "Microsoft.AwsConnector/configServiceConfigurationRecorders",
    "isChild": false
  },
  {
    "file": "Azure::DataBoxEdge::DataBoxEdgeDevices_roles_monitoringConfig.json",
    "resourceType": "Microsoft.DataBoxEdge/dataBoxEdgeDevices/roles/monitoringConfig",
    "isChild": true,
    "parentType": "Microsoft.DataBoxEdge/dataBoxEdgeDevices/roles"
  },
  {
    "file": "Azure::ApiManagement::Service_apis_resolvers_policies.json",
    "resourceType": "Microsoft.ApiManagement/service/apis/resolvers/policies",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/apis/resolvers"
  },
  {
    "file": "Azure::Sql::ManagedInstances_databases_advancedThreatProtectionSettings.json",
    "resourceType": "Microsoft.Sql/managedInstances/databases/advancedThreatProtectionSettings",
    "isChild": true,
    "parentType": "Microsoft.Sql/managedInstances/databases"
  },
  {
    "file": "Azure::OffAzure::MasterSites.json",
    "resourceType": "Microsoft.OffAzure/masterSites",
    "isChild": false
  },
  {
    "file": "Azure::IoTOperations::Instances_dataflowProfiles_dataflows.json",
    "resourceType": "Microsoft.IoTOperations/instances/dataflowProfiles/dataflows",
    "isChild": true,
    "parentType": "Microsoft.IoTOperations/instances/dataflowProfiles"
  },
  {
    "file": "Azure::DBforPostgreSQL::Servers_keys.json",
    "resourceType": "Microsoft.DBforPostgreSQL/servers/keys",
    "isChild": true,
    "parentType": "Microsoft.DBforPostgreSQL/servers"
  },
  {
    "file": "Azure::Media::Mediaservices_streamingEndpoints.json",
    "resourceType": "Microsoft.Media/mediaservices/streamingEndpoints",
    "isChild": true,
    "parentType": "Microsoft.Media/mediaservices"
  },
  {
    "file": "Azure::IoTOperationsMQ::Mq_mqttBridgeConnector.json",
    "resourceType": "Microsoft.IoTOperationsMQ/mq/mqttBridgeConnector",
    "isChild": true,
    "parentType": "Microsoft.IoTOperationsMQ/mq"
  },
  {
    "file": "Azure::TimeSeriesInsights::Environments_referenceDataSets.json",
    "resourceType": "Microsoft.TimeSeriesInsights/environments/referenceDataSets",
    "isChild": true,
    "parentType": "Microsoft.TimeSeriesInsights/environments"
  },
  {
    "file": "Azure::DatabaseWatcher::Watchers_sharedPrivateLinkResources.json",
    "resourceType": "Microsoft.DatabaseWatcher/watchers/sharedPrivateLinkResources",
    "isChild": true,
    "parentType": "Microsoft.DatabaseWatcher/watchers"
  },
  {
    "file": "Azure::ApiManagement::Service_tags.json",
    "resourceType": "Microsoft.ApiManagement/service/tags",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service"
  },
  {
    "file": "Azure::IoTOperationsOrchestrator::Solutions.json",
    "resourceType": "Microsoft.IoTOperationsOrchestrator/solutions",
    "isChild": false
  },
  {
    "file": "Azure::AAD::DomainServices_ouContainer.json",
    "resourceType": "Microsoft.Aad/domainServices/ouContainer",
    "isChild": true,
    "parentType": "Microsoft.Aad/domainServices"
  },
  {
    "file": "Azure::ProviderHub::ProviderMonitorSettings.json",
    "resourceType": "Microsoft.ProviderHub/providerMonitorSettings",
    "isChild": false
  },
  {
    "file": "Azure::Confluent::Organizations_environments_clusters_connectors.json",
    "resourceType": "Microsoft.Confluent/organizations/environments/clusters/connectors",
    "isChild": true,
    "parentType": "Microsoft.Confluent/organizations/environments/clusters"
  },
  {
    "file": "Azure::Network::Trafficmanagerprofiles.json",
    "resourceType": "Microsoft.Network/trafficmanagerprofiles",
    "isChild": false
  },
  {
    "file": "Azure::Synapse::Workspaces_integrationRuntimes.json",
    "resourceType": "Microsoft.Synapse/workspaces/integrationRuntimes",
    "isChild": true,
    "parentType": "Microsoft.Synapse/workspaces"
  },
  {
    "file": "Azure::Workloads::Monitors.json",
    "resourceType": "Microsoft.Workloads/monitors",
    "isChild": false
  },
  {
    "file": "Azure::StorSimple::Managers_storageDomains.json",
    "resourceType": "Microsoft.StorSimple/managers/storageDomains",
    "isChild": true,
    "parentType": "Microsoft.StorSimple/managers"
  },
  {
    "file": "Azure::EngagementFabric::Accounts_Channels.json",
    "resourceType": "Microsoft.EngagementFabric/Accounts/Channels",
    "isChild": true,
    "parentType": "Microsoft.EngagementFabric/Accounts"
  },
  {
    "file": "Azure::Cache::Redis_firewallRules.json",
    "resourceType": "Microsoft.Cache/Redis/firewallRules",
    "isChild": true,
    "parentType": "Microsoft.Cache/Redis"
  },
  {
    "file": "Azure::DesktopVirtualization::ScalingPlans_personalSchedules.json",
    "resourceType": "Microsoft.DesktopVirtualization/scalingPlans/personalSchedules",
    "isChild": true,
    "parentType": "Microsoft.DesktopVirtualization/scalingPlans"
  },
  {
    "file": "Azure::AwsConnector::SnsSubscriptions.json",
    "resourceType": "Microsoft.AwsConnector/snsSubscriptions",
    "isChild": false
  },
  {
    "file": "Azure::ManagedNetwork::ManagedNetworks_managedNetworkGroups.json",
    "resourceType": "Microsoft.ManagedNetwork/managedNetworks/managedNetworkGroups",
    "isChild": true,
    "parentType": "Microsoft.ManagedNetwork/managedNetworks"
  },
  {
    "file": "Azure::DataBoxEdge::DataBoxEdgeDevices_shares.json",
    "resourceType": "Microsoft.DataBoxEdge/dataBoxEdgeDevices/shares",
    "isChild": true,
    "parentType": "Microsoft.DataBoxEdge/dataBoxEdgeDevices"
  },
  {
    "file": "Azure::Scom::ManagedInstances_managedGateways.json",
    "resourceType": "Microsoft.Scom/managedInstances/managedGateways",
    "isChild": true,
    "parentType": "Microsoft.Scom/managedInstances"
  },
  {
    "file": "Azure::ManagedNetworkFabric::NetworkDevices.json",
    "resourceType": "Microsoft.ManagedNetworkFabric/networkDevices",
    "isChild": false
  },
  {
    "file": "Azure::Storage::StorageAccounts_blobServices.json",
    "resourceType": "Microsoft.Storage/storageAccounts/blobServices",
    "isChild": true,
    "parentType": "Microsoft.Storage/storageAccounts"
  },
  {
    "file": "Azure::ApiManagement::Service_apiVersionSets.json",
    "resourceType": "Microsoft.ApiManagement/service/apiVersionSets",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service"
  },
  {
    "file": "Azure::Observability::Monitors_tagRules.json",
    "resourceType": "NewRelic.Observability/monitors/tagRules",
    "isChild": true,
    "parentType": "NewRelic.Observability/monitors"
  },
  {
    "file": "Azure::ApiManagement::Service_workspaces_apis_operations.json",
    "resourceType": "Microsoft.ApiManagement/service/workspaces/apis/operations",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/workspaces/apis"
  },
  {
    "file": "Azure::Web::Sites_slots_sourcecontrols.json",
    "resourceType": "Microsoft.Web/sites/slots/sourcecontrols",
    "isChild": true,
    "parentType": "Microsoft.Web/sites/slots"
  },
  {
    "file": "Azure::Sql::Servers_jobAgents_jobs_steps.json",
    "resourceType": "Microsoft.Sql/servers/jobAgents/jobs/steps",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers/jobAgents/jobs"
  },
  {
    "file": "Azure::ContainerRegistry::Registries_tokens.json",
    "resourceType": "Microsoft.ContainerRegistry/registries/tokens",
    "isChild": true,
    "parentType": "Microsoft.ContainerRegistry/registries"
  },
  {
    "file": "Azure::DataLakeAnalytics::Accounts.json",
    "resourceType": "Microsoft.DataLakeAnalytics/accounts",
    "isChild": false
  },
  {
    "file": "Azure::NGINXPLUS::NginxDeployments_apiKeys.json",
    "resourceType": "Nginx.NginxPlus/nginxDeployments/apiKeys",
    "isChild": true,
    "parentType": "Nginx.NginxPlus/nginxDeployments"
  },
  {
    "file": "Azure::AwsConnector::CodeBuildSourceCredentialsInfos.json",
    "resourceType": "Microsoft.AwsConnector/codeBuildSourceCredentialsInfos",
    "isChild": false
  },
  {
    "file": "Azure::Network::DnsZones_SOA.json",
    "resourceType": "Microsoft.Network/dnszones/SOA",
    "isChild": true,
    "parentType": "Microsoft.Network/dnszones"
  },
  {
    "file": "Azure::Network::NetworkVirtualAppliances_virtualApplianceSites.json",
    "resourceType": "Microsoft.Network/networkVirtualAppliances/virtualApplianceSites",
    "isChild": true,
    "parentType": "Microsoft.Network/networkVirtualAppliances"
  },
  {
    "file": "Azure::TestBase::TestBaseAccounts_packages_favoriteProcesses.json",
    "resourceType": "Microsoft.TestBase/testBaseAccounts/packages/favoriteProcesses",
    "isChild": true,
    "parentType": "Microsoft.TestBase/testBaseAccounts/packages"
  },
  {
    "file": "Azure::AwsConnector::Ec2Vpcs.json",
    "resourceType": "Microsoft.AwsConnector/ec2Vpcs",
    "isChild": false
  },
  {
    "file": "Azure::ManagedNetworkFabric::L3IsolationDomains_internalNetworks.json",
    "resourceType": "Microsoft.ManagedNetworkFabric/l3IsolationDomains/internalNetworks",
    "isChild": true,
    "parentType": "Microsoft.ManagedNetworkFabric/l3IsolationDomains"
  },
  {
    "file": "Azure::Database::CloudExadataInfrastructures.json",
    "resourceType": "Oracle.Database/cloudExadataInfrastructures",
    "isChild": false
  },
  {
    "file": "Azure::ElasticSan::ElasticSans_volumegroups_volumes.json",
    "resourceType": "Microsoft.ElasticSan/elasticSans/volumegroups/volumes",
    "isChild": true,
    "parentType": "Microsoft.ElasticSan/elasticSans/volumegroups"
  },
  {
    "file": "Azure::Security::Locations_jitNetworkAccessPolicies.json",
    "resourceType": "Microsoft.Security/locations/jitNetworkAccessPolicies",
    "isChild": true,
    "parentType": "Microsoft.Security/locations"
  },
  {
    "file": "Azure::Network::NetworkManagers_verifierWorkspaces.json",
    "resourceType": "Microsoft.Network/networkManagers/verifierWorkspaces",
    "isChild": true,
    "parentType": "Microsoft.Network/networkManagers"
  },
  {
    "file": "Azure::ConnectedCache::EnterpriseCustomers.json",
    "resourceType": "Microsoft.ConnectedCache/enterpriseCustomers",
    "isChild": false
  },
  {
    "file": "Azure::HybridContainerService::VirtualNetworks.json",
    "resourceType": "Microsoft.HybridContainerService/virtualNetworks",
    "isChild": false
  },
  {
    "file": "Azure::NetApp::NetAppAccounts_capacityPools_volumes.json",
    "resourceType": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes",
    "isChild": true,
    "parentType": "Microsoft.NetApp/netAppAccounts/capacityPools"
  },
  {
    "file": "Azure::AVS::PrivateClouds.json",
    "resourceType": "Microsoft.AVS/privateClouds",
    "isChild": false
  },
  {
    "file": "Azure::ContainerService::Fleets_updateStrategies.json",
    "resourceType": "Microsoft.ContainerService/fleets/updateStrategies",
    "isChild": true,
    "parentType": "Microsoft.ContainerService/fleets"
  },
  {
    "file": "Azure::HybridCompute::Machines_licenseProfiles.json",
    "resourceType": "Microsoft.HybridCompute/machines/licenseProfiles",
    "isChild": true,
    "parentType": "Microsoft.HybridCompute/machines"
  },
  {
    "file": "Azure::Automation::AutomationAccounts_python2Packages.json",
    "resourceType": "Microsoft.Automation/automationAccounts/python2Packages",
    "isChild": true,
    "parentType": "Microsoft.Automation/automationAccounts"
  },
  {
    "file": "Azure::AwsConnector::LogsLogStreams.json",
    "resourceType": "Microsoft.AwsConnector/logsLogStreams",
    "isChild": false
  },
  {
    "file": "Azure::MachineLearningCompute::OperationalizationClusters.json",
    "resourceType": "Microsoft.MachineLearningCompute/operationalizationClusters",
    "isChild": false
  },
  {
    "file": "Azure::Sql::Servers_databases_extendedAuditingSettings.json",
    "resourceType": "Microsoft.Sql/servers/databases/extendedAuditingSettings",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers/databases"
  },
  {
    "file": "Azure::TestBase::TestBaseAccounts.json",
    "resourceType": "Microsoft.TestBase/testBaseAccounts",
    "isChild": false
  },
  {
    "file": "Azure::ContainerInstance::ContainerGroupProfiles.json",
    "resourceType": "Microsoft.ContainerInstance/containerGroupProfiles",
    "isChild": false
  },
  {
    "file": "Azure::ServiceFabricMesh::Networks.json",
    "resourceType": "Microsoft.ServiceFabricMesh/networks",
    "isChild": false
  },
  {
    "file": "Azure::Orbital::Spacecrafts.json",
    "resourceType": "Microsoft.Orbital/spacecrafts",
    "isChild": false
  },
  {
    "file": "Azure::M365SecurityAndCompliance::PrivateLinkServicesForO365ManagementActivityAPI.json",
    "resourceType": "Microsoft.M365SecurityAndCompliance/privateLinkServicesForO365ManagementActivityAPI",
    "isChild": false
  },
  {
    "file": "Azure::Compute::VirtualMachineScaleSets_virtualMachines.json",
    "resourceType": "Microsoft.Compute/virtualMachineScaleSets/virtualmachines",
    "isChild": true,
    "parentType": "Microsoft.Compute/virtualMachineScaleSets"
  },
  {
    "file": "Azure::Sql::Servers_databases_replicationLinks.json",
    "resourceType": "Microsoft.Sql/servers/databases/replicationLinks",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers/databases"
  },
  {
    "file": "Azure::Sql::Servers_databases_syncGroups.json",
    "resourceType": "Microsoft.Sql/servers/databases/syncGroups",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers/databases"
  },
  {
    "file": "Azure::AwsConnector::Route53HostedZones.json",
    "resourceType": "Microsoft.AwsConnector/route53HostedZones",
    "isChild": false
  },
  {
    "file": "Azure::Resources::Links.json",
    "resourceType": "Microsoft.Resources/links",
    "isChild": false
  },
  {
    "file": "Azure::HDInsight::Clusterpools_clusters.json",
    "resourceType": "Microsoft.HDInsight/clusterpools/clusters",
    "isChild": true,
    "parentType": "Microsoft.HDInsight/clusterpools"
  },
  {
    "file": "Azure::Network::ApplicationGateways.json",
    "resourceType": "Microsoft.Network/applicationGateways",
    "isChild": false
  },
  {
    "file": "Azure::Insights::DataCollectionEndpoints.json",
    "resourceType": "Microsoft.Insights/dataCollectionEndpoints",
    "isChild": false
  },
  {
    "file": "Azure::DataShare::Accounts_shares_synchronizationSettings.json",
    "resourceType": "Microsoft.DataShare/accounts/shares/synchronizationSettings",
    "isChild": true,
    "parentType": "Microsoft.DataShare/accounts/shares"
  },
  {
    "file": "Azure::EventGrid::Namespaces_topicSpaces.json",
    "resourceType": "Microsoft.EventGrid/namespaces/topicSpaces",
    "isChild": true,
    "parentType": "Microsoft.EventGrid/namespaces"
  },
  {
    "file": "Azure::DBforPostgreSQL::ServerGroupsv2_coordinatorConfigurations.json",
    "resourceType": "Microsoft.DBforPostgreSQL/serverGroupsv2/coordinatorConfigurations",
    "isChild": true,
    "parentType": "Microsoft.DBforPostgreSQL/serverGroupsv2"
  },
  {
    "file": "Azure::Scom::ManagedInstances_monitoredResources.json",
    "resourceType": "Microsoft.Scom/managedInstances/monitoredResources",
    "isChild": true,
    "parentType": "Microsoft.Scom/managedInstances"
  },
  {
    "file": "Azure::Network::NetworkManagers_routingConfigurations_ruleCollections.json",
    "resourceType": "Microsoft.Network/networkManagers/routingConfigurations/ruleCollections",
    "isChild": true,
    "parentType": "Microsoft.Network/networkManagers/routingConfigurations"
  },
  {
    "file": "Azure::Web::StaticSites_linkedBackends.json",
    "resourceType": "Microsoft.Web/staticSites/linkedBackends",
    "isChild": true,
    "parentType": "Microsoft.Web/staticSites"
  },
  {
    "file": "Azure::Network::VirtualNetworkGateways_natRules.json",
    "resourceType": "Microsoft.Network/virtualNetworkGateways/natRules",
    "isChild": true,
    "parentType": "Microsoft.Network/virtualNetworkGateways"
  },
  {
    "file": "Azure::Insights::Components_favorites.json",
    "resourceType": "Microsoft.Insights/components/favorites",
    "isChild": true,
    "parentType": "Microsoft.Insights/components"
  },
  {
    "file": "Azure::HealthcareApis::Workspaces_iotconnectors_fhirdestinations.json",
    "resourceType": "Microsoft.HealthcareApis/workspaces/iotconnectors/fhirdestinations",
    "isChild": true,
    "parentType": "Microsoft.HealthcareApis/workspaces/iotconnectors"
  },
  {
    "file": "Azure::DataShare::Accounts_shareSubscriptions_triggers.json",
    "resourceType": "Microsoft.DataShare/accounts/shareSubscriptions/triggers",
    "isChild": true,
    "parentType": "Microsoft.DataShare/accounts/shareSubscriptions"
  },
  {
    "file": "Azure::AwsConnector::RdsEventSubscriptions.json",
    "resourceType": "Microsoft.AwsConnector/rdsEventSubscriptions",
    "isChild": false
  },
  {
    "file": "Azure::ApiManagement::Service_properties.json",
    "resourceType": "Microsoft.ApiManagement/service/properties",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service"
  },
  {
    "file": "Azure::M365SecurityAndCompliance::PrivateLinkServicesForMIPPolicySync.json",
    "resourceType": "Microsoft.M365SecurityAndCompliance/privateLinkServicesForMIPPolicySync",
    "isChild": false
  },
  {
    "file": "Azure::AwsConnector::IamInstanceProfiles.json",
    "resourceType": "Microsoft.AwsConnector/iamInstanceProfiles",
    "isChild": false
  },
  {
    "file": "Azure::HybridNetwork::Publishers_networkServiceDesignGroups.json",
    "resourceType": "Microsoft.HybridNetwork/publishers/networkServiceDesignGroups",
    "isChild": true,
    "parentType": "Microsoft.HybridNetwork/publishers"
  },
  {
    "file": "Azure::AVS::PrivateClouds_workloadNetworks_dnsServices.json",
    "resourceType": "Microsoft.AVS/privateClouds/workloadNetworks/dnsServices",
    "isChild": true,
    "parentType": "Microsoft.AVS/privateClouds/workloadNetworks"
  },
  {
    "file": "Azure::Cdn::Profiles.json",
    "resourceType": "Microsoft.Cdn/profiles",
    "isChild": false
  },
  {
    "file": "Azure::Security::Standards.json",
    "resourceType": "Microsoft.Security/standards",
    "isChild": false
  },
  {
    "file": "Azure::M365SecurityAndCompliance::PrivateLinkServicesForEDMUpload.json",
    "resourceType": "Microsoft.M365SecurityAndCompliance/privateLinkServicesForEDMUpload",
    "isChild": false
  },
  {
    "file": "Azure::Network::DnsZones.json",
    "resourceType": "Microsoft.Network/dnszones",
    "isChild": false
  },
  {
    "file": "Azure::Sql::ManagedInstances_databases_ledgerDigestUploads.json",
    "resourceType": "Microsoft.Sql/managedInstances/databases/ledgerDigestUploads",
    "isChild": true,
    "parentType": "Microsoft.Sql/managedInstances/databases"
  },
  {
    "file": "Azure::Web::Sites_slots_functions.json",
    "resourceType": "Microsoft.Web/sites/slots/functions",
    "isChild": true,
    "parentType": "Microsoft.Web/sites/slots"
  },
  {
    "file": "Azure::Network::ApplicationSecurityGroups.json",
    "resourceType": "Microsoft.Network/applicationSecurityGroups",
    "isChild": false
  },
  {
    "file": "Azure::Web::HostingEnvironments_privateEndpointConnections.json",
    "resourceType": "Microsoft.Web/hostingEnvironments/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.Web/hostingEnvironments"
  },
  {
    "file": "Azure::AwsConnector::IamVirtualMFADevices.json",
    "resourceType": "Microsoft.AwsConnector/iamVirtualMFADevices",
    "isChild": false
  },
  {
    "file": "Azure::Web::Sites_slots_privateEndpointConnections.json",
    "resourceType": "Microsoft.Web/sites/slots/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.Web/sites/slots"
  },
  {
    "file": "Azure::Network::DnsResolverPolicies_dnsSecurityRules.json",
    "resourceType": "Microsoft.Network/dnsResolverPolicies/dnsSecurityRules",
    "isChild": true,
    "parentType": "Microsoft.Network/dnsResolverPolicies"
  },
  {
    "file": "Azure::ConnectedVMwarevSphere::Vcenters.json",
    "resourceType": "Microsoft.ConnectedVMwarevSphere/vcenters",
    "isChild": false
  },
  {
    "file": "Azure::SecurityAndCompliance::PrivateLinkServicesForMIPPolicySync.json",
    "resourceType": "Microsoft.SecurityAndCompliance/privateLinkServicesForMIPPolicySync",
    "isChild": false
  },
  {
    "file": "Azure::DevCenter::Devcenters_environmentTypes.json",
    "resourceType": "Microsoft.DevCenter/devcenters/environmentTypes",
    "isChild": true,
    "parentType": "Microsoft.DevCenter/devcenters"
  },
  {
    "file": "Azure::RecoveryServices::Vaults_replicationFabrics_replicationvCenters.json",
    "resourceType": "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationvCenters",
    "isChild": true,
    "parentType": "Microsoft.RecoveryServices/vaults/replicationFabrics"
  },
  {
    "file": "Azure::GraphServices::Accounts.json",
    "resourceType": "Microsoft.GraphServices/accounts",
    "isChild": false
  },
  {
    "file": "Azure::Postgres::Organizations_projects_branches.json",
    "resourceType": "Neon.Postgres/organizations/projects/branches",
    "isChild": true,
    "parentType": "Neon.Postgres/organizations/projects"
  },
  {
    "file": "Azure::Web::Sites_sourcecontrols.json",
    "resourceType": "Microsoft.Web/sites/sourcecontrols",
    "isChild": true,
    "parentType": "Microsoft.Web/sites"
  },
  {
    "file": "Azure::Security::SecurityConnectors_devops_policyAssignments.json",
    "resourceType": "Microsoft.Security/securityConnectors/devops/policyAssignments",
    "isChild": true,
    "parentType": "Microsoft.Security/securityConnectors/devops"
  },
  {
    "file": "Azure::DBforMySQL::Servers_keys.json",
    "resourceType": "Microsoft.DBforMySQL/servers/keys",
    "isChild": true,
    "parentType": "Microsoft.DBforMySQL/servers"
  },
  {
    "file": "Azure::DevCenter::Devcenters_projectPolicies.json",
    "resourceType": "Microsoft.DevCenter/devcenters/projectPolicies",
    "isChild": true,
    "parentType": "Microsoft.DevCenter/devcenters"
  },
  {
    "file": "Azure::RecoveryServices::Vaults_replicationFabrics.json",
    "resourceType": "Microsoft.RecoveryServices/vaults/replicationFabrics",
    "isChild": true,
    "parentType": "Microsoft.RecoveryServices/vaults"
  },
  {
    "file": "Azure::IoTFirmwareDefense::Workspaces_firmwares.json",
    "resourceType": "Microsoft.IoTFirmwareDefense/workspaces/firmwares",
    "isChild": true,
    "parentType": "Microsoft.IoTFirmwareDefense/workspaces"
  },
  {
    "file": "Azure::ApiManagement::Service_workspaces_loggers.json",
    "resourceType": "Microsoft.ApiManagement/service/workspaces/loggers",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/workspaces"
  },
  {
    "file": "Azure::ApiManagement::Service_gateways_hostnameConfigurations.json",
    "resourceType": "Microsoft.ApiManagement/service/gateways/hostnameConfigurations",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/gateways"
  },
  {
    "file": "Azure::DesktopVirtualization::AppAttachPackages.json",
    "resourceType": "Microsoft.DesktopVirtualization/appAttachPackages",
    "isChild": false
  },
  {
    "file": "Azure::Datadog::Monitors_monitoredSubscriptions.json",
    "resourceType": "Microsoft.Datadog/monitors/monitoredSubscriptions",
    "isChild": true,
    "parentType": "Microsoft.Datadog/monitors"
  },
  {
    "file": "Azure::Automation::AutomationAccounts_runbooks_draft.json",
    "resourceType": "Microsoft.Automation/automationAccounts/runbooks/draft",
    "isChild": true,
    "parentType": "Microsoft.Automation/automationAccounts/runbooks"
  },
  {
    "file": "Azure::RecoveryServices::Vaults_backupFabrics_protectionContainers.json",
    "resourceType": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers",
    "isChild": true,
    "parentType": "Microsoft.RecoveryServices/vaults/backupFabrics"
  },
  {
    "file": "Azure::Web::Sites_domainOwnershipIdentifiers.json",
    "resourceType": "Microsoft.Web/sites/domainOwnershipIdentifiers",
    "isChild": true,
    "parentType": "Microsoft.Web/sites"
  },
  {
    "file": "Azure::ApiManagement::Service_apis_policies.json",
    "resourceType": "Microsoft.ApiManagement/service/apis/policies",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/apis"
  },
  {
    "file": "Azure::Sql::ManagedInstances_serverConfigurationOptions.json",
    "resourceType": "Microsoft.Sql/managedInstances/serverConfigurationOptions",
    "isChild": true,
    "parentType": "Microsoft.Sql/managedInstances"
  },
  {
    "file": "Azure::Network::DnsResolverDomainLists.json",
    "resourceType": "Microsoft.Network/dnsResolverDomainLists",
    "isChild": false
  },
  {
    "file": "Azure::DevTestLab::Labs_users_servicefabrics.json",
    "resourceType": "Microsoft.DevTestLab/labs/users/servicefabrics",
    "isChild": true,
    "parentType": "Microsoft.DevTestLab/labs/users"
  },
  {
    "file": "Azure::HealthcareApis::Services.json",
    "resourceType": "Microsoft.HealthcareApis/services",
    "isChild": false
  },
  {
    "file": "Azure::Logz::Monitors.json",
    "resourceType": "Microsoft.Logz/monitors",
    "isChild": false
  },
  {
    "file": "Azure::ContainerService::Fleets.json",
    "resourceType": "Microsoft.ContainerService/fleets",
    "isChild": false
  },
  {
    "file": "Azure::Web::KubeEnvironments.json",
    "resourceType": "Microsoft.Web/kubeEnvironments",
    "isChild": false
  },
  {
    "file": "Azure::DataFactory::Factories_pipelines.json",
    "resourceType": "Microsoft.DataFactory/factories/pipelines",
    "isChild": true,
    "parentType": "Microsoft.DataFactory/factories"
  },
  {
    "file": "Azure::Astro::Organizations.json",
    "resourceType": "Astronomer.Astro/organizations",
    "isChild": false
  },
  {
    "file": "Azure::DurableTask::Schedulers_taskHubs.json",
    "resourceType": "Microsoft.DurableTask/schedulers/taskHubs",
    "isChild": true,
    "parentType": "Microsoft.DurableTask/schedulers"
  },
  {
    "file": "Azure::AwsConnector::DynamoDBContinuousBackupsDescriptions.json",
    "resourceType": "Microsoft.AwsConnector/dynamoDBContinuousBackupsDescriptions",
    "isChild": false
  },
  {
    "file": "Azure::Network::PrivateDnsZones_SRV.json",
    "resourceType": "Microsoft.Network/privateDnsZones/SRV",
    "isChild": true,
    "parentType": "Microsoft.Network/privateDnsZones"
  },
  {
    "file": "Azure::Web::Sites_functions.json",
    "resourceType": "Microsoft.Web/sites/functions",
    "isChild": true,
    "parentType": "Microsoft.Web/sites"
  },
  {
    "file": "Azure::ProfessionalService::Resources.json",
    "resourceType": "Microsoft.ProfessionalService/resources",
    "isChild": false
  },
  {
    "file": "Azure::SecurityDevOps::GitHubConnectors.json",
    "resourceType": "Microsoft.SecurityDevOps/gitHubConnectors",
    "isChild": false
  },
  {
    "file": "Azure::AwsConnector::IamPolicyVersions.json",
    "resourceType": "Microsoft.AwsConnector/iamPolicyVersions",
    "isChild": false
  },
  {
    "file": "Azure::AppPlatform::Spring_apps.json",
    "resourceType": "Microsoft.AppPlatform/Spring/apps",
    "isChild": true,
    "parentType": "Microsoft.AppPlatform/Spring"
  },
  {
    "file": "Azure::Compute::SshPublicKeys.json",
    "resourceType": "Microsoft.Compute/sshPublicKeys",
    "isChild": false
  },
  {
    "file": "Azure::MachineLearningServices::Workspaces_schedules.json",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/schedules",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/workspaces"
  },
  {
    "file": "Azure::NetworkCloud::Clusters_bmcKeySets.json",
    "resourceType": "Microsoft.NetworkCloud/clusters/bmcKeySets",
    "isChild": true,
    "parentType": "Microsoft.NetworkCloud/clusters"
  },
  {
    "file": "Azure::Synapse::Workspaces_sqlPools_workloadGroups.json",
    "resourceType": "Microsoft.Synapse/workspaces/sqlPools/workloadGroups",
    "isChild": true,
    "parentType": "Microsoft.Synapse/workspaces/sqlPools"
  },
  {
    "file": "Azure::DBforPostgreSQL::FlexibleServers.json",
    "resourceType": "Microsoft.DBforPostgreSQL/flexibleServers",
    "isChild": false
  },
  {
    "file": "Azure::DocumentDB::Fleets_fleetAnalytics.json",
    "resourceType": "Microsoft.DocumentDB/fleets/fleetAnalytics",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/fleets"
  },
  {
    "file": "Azure::Network::VirtualHubs_routeTables.json",
    "resourceType": "Microsoft.Network/virtualHubs/routeTables",
    "isChild": true,
    "parentType": "Microsoft.Network/virtualHubs"
  },
  {
    "file": "Azure::LabServices::Labs_schedules.json",
    "resourceType": "Microsoft.LabServices/labs/schedules",
    "isChild": true,
    "parentType": "Microsoft.LabServices/labs"
  },
  {
    "file": "Azure::DataShare::Accounts_shares.json",
    "resourceType": "Microsoft.DataShare/accounts/shares",
    "isChild": true,
    "parentType": "Microsoft.DataShare/accounts"
  },
  {
    "file": "Azure::Sql::Servers_databases_sqlVulnerabilityAssessments_baselines.json",
    "resourceType": "Microsoft.Sql/servers/databases/sqlVulnerabilityAssessments/baselines",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers/databases/sqlVulnerabilityAssessments"
  },
  {
    "file": "Azure::Dashboard::Grafana_managedPrivateEndpoints.json",
    "resourceType": "Microsoft.Dashboard/grafana/managedPrivateEndpoints",
    "isChild": true,
    "parentType": "Microsoft.Dashboard/grafana"
  },
  {
    "file": "Azure::MixedReality::ObjectAnchorsAccounts.json",
    "resourceType": "Microsoft.MixedReality/objectAnchorsAccounts",
    "isChild": false
  },
  {
    "file": "Azure::OffAzure::ServerSites.json",
    "resourceType": "Microsoft.OffAzure/serverSites",
    "isChild": false
  },
  {
    "file": "Azure::BatchAI::Clusters.json",
    "resourceType": "Microsoft.BatchAI/clusters",
    "isChild": false
  },
  {
    "file": "Azure::Insights::Components_linkedStorageAccounts.json",
    "resourceType": "microsoft.insights/components/linkedStorageAccounts",
    "isChild": true,
    "parentType": "microsoft.insights/components"
  },
  {
    "file": "Azure::ApiManagement::Service.json",
    "resourceType": "Microsoft.ApiManagement/service",
    "isChild": false
  },
  {
    "file": "Azure::DelegatedNetwork::Orchestrators.json",
    "resourceType": "Microsoft.DelegatedNetwork/orchestrators",
    "isChild": false
  },
  {
    "file": "Azure::IoTOperationsDataProcessor::Instances.json",
    "resourceType": "Microsoft.IoTOperationsDataProcessor/instances",
    "isChild": false
  },
  {
    "file": "Azure::DataProtection::ResourceGuards.json",
    "resourceType": "Microsoft.DataProtection/resourceGuards",
    "isChild": false
  },
  {
    "file": "Azure::Storage::StorageAccounts_privateEndpointConnections.json",
    "resourceType": "Microsoft.Storage/storageAccounts/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.Storage/storageAccounts"
  },
  {
    "file": "Azure::Web::Connections.json",
    "resourceType": "Microsoft.Web/connections",
    "isChild": false
  },
  {
    "file": "Azure::DataReplication::ReplicationFabrics.json",
    "resourceType": "Microsoft.DataReplication/replicationFabrics",
    "isChild": false
  },
  {
    "file": "Azure::RecoveryServices::Vaults_privateEndpointConnections.json",
    "resourceType": "Microsoft.RecoveryServices/vaults/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.RecoveryServices/vaults"
  },
  {
    "file": "Azure::RecoveryServices::Vaults_backupstorageconfig.json",
    "resourceType": "Microsoft.RecoveryServices/vaults/backupstorageconfig",
    "isChild": true,
    "parentType": "Microsoft.RecoveryServices/vaults"
  },
  {
    "file": "Azure::ServiceFabric::Clusters_applicationTypes.json",
    "resourceType": "Microsoft.ServiceFabric/clusters/applicationTypes",
    "isChild": true,
    "parentType": "Microsoft.ServiceFabric/clusters"
  },
  {
    "file": "Azure::LabServices::Labaccounts_labs.json",
    "resourceType": "Microsoft.LabServices/labaccounts/labs",
    "isChild": true,
    "parentType": "Microsoft.LabServices/labaccounts"
  },
  {
    "file": "Azure::DataFactory::Factories_managedVirtualNetworks.json",
    "resourceType": "Microsoft.DataFactory/factories/managedVirtualNetworks",
    "isChild": true,
    "parentType": "Microsoft.DataFactory/factories"
  },
  {
    "file": "Azure::ContainerService::Fleets_members.json",
    "resourceType": "Microsoft.ContainerService/fleets/members",
    "isChild": true,
    "parentType": "Microsoft.ContainerService/fleets"
  },
  {
    "file": "Azure::DeploymentManager::ServiceTopologies_services_serviceUnits.json",
    "resourceType": "Microsoft.DeploymentManager/serviceTopologies/services/serviceUnits",
    "isChild": true,
    "parentType": "Microsoft.DeploymentManager/serviceTopologies/services"
  },
  {
    "file": "Azure::EventHub::Namespaces_privateEndpointConnections.json",
    "resourceType": "Microsoft.EventHub/namespaces/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.EventHub/namespaces"
  },
  {
    "file": "Azure::LabServices::LabPlans_images.json",
    "resourceType": "Microsoft.LabServices/labPlans/images",
    "isChild": true,
    "parentType": "Microsoft.LabServices/labPlans"
  },
  {
    "file": "Azure::Web::Sites_slots_virtualNetworkConnections.json",
    "resourceType": "Microsoft.Web/sites/slots/virtualNetworkConnections",
    "isChild": true,
    "parentType": "Microsoft.Web/sites/slots"
  },
  {
    "file": "Azure::MachineLearningServices::Registries_codes_versions.json",
    "resourceType": "Microsoft.MachineLearningServices/registries/codes/versions",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/registries/codes"
  },
  {
    "file": "Azure::AwsConnector::EmrClusters.json",
    "resourceType": "Microsoft.AwsConnector/emrClusters",
    "isChild": false
  },
  {
    "file": "Azure::Cdn::Profiles_endpoints.json",
    "resourceType": "Microsoft.Cdn/profiles/endpoints",
    "isChild": true,
    "parentType": "Microsoft.Cdn/profiles"
  },
  {
    "file": "Azure::AlertsManagement::ActionRules.json",
    "resourceType": "Microsoft.AlertsManagement/actionRules",
    "isChild": false
  },
  {
    "file": "Azure::HDInsight::Clusterpools.json",
    "resourceType": "Microsoft.HDInsight/clusterpools",
    "isChild": false
  },
  {
    "file": "Azure::AVS::PrivateClouds_globalReachConnections.json",
    "resourceType": "Microsoft.AVS/privateClouds/globalReachConnections",
    "isChild": true,
    "parentType": "Microsoft.AVS/privateClouds"
  },
  {
    "file": "Azure::App::Jobs.json",
    "resourceType": "Microsoft.App/jobs",
    "isChild": false
  },
  {
    "file": "Azure::Confluent::Organizations_environments_clusters_topics.json",
    "resourceType": "Microsoft.Confluent/organizations/environments/clusters/topics",
    "isChild": true,
    "parentType": "Microsoft.Confluent/organizations/environments/clusters"
  },
  {
    "file": "Azure::MachineLearningServices::Registries_environments_versions.json",
    "resourceType": "Microsoft.MachineLearningServices/registries/environments/versions",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/registries/environments"
  },
  {
    "file": "Azure::ManagedNetworkFabric::IpExtendedCommunities.json",
    "resourceType": "Microsoft.ManagedNetworkFabric/ipExtendedCommunities",
    "isChild": false
  },
  {
    "file": "Azure::Compute::DiskEncryptionSets.json",
    "resourceType": "Microsoft.Compute/diskEncryptionSets",
    "isChild": false
  },
  {
    "file": "Azure::Cdn::Profiles_targetGroups.json",
    "resourceType": "Microsoft.Cdn/profiles/targetGroups",
    "isChild": true,
    "parentType": "Microsoft.Cdn/profiles"
  },
  {
    "file": "Azure::StorSimple::Managers_devices_alertSettings.json",
    "resourceType": "Microsoft.StorSimple/managers/devices/alertSettings",
    "isChild": true,
    "parentType": "Microsoft.StorSimple/managers/devices"
  },
  {
    "file": "Azure::BatchAI::Workspaces.json",
    "resourceType": "Microsoft.BatchAI/workspaces",
    "isChild": false
  },
  {
    "file": "Azure::Sql::Servers_disasterRecoveryConfiguration.json",
    "resourceType": "Microsoft.Sql/servers/disasterRecoveryConfiguration",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers"
  },
  {
    "file": "Azure::SqlVirtualMachine::SqlVirtualMachineGroups_availabilityGroupListeners.json",
    "resourceType": "Microsoft.SqlVirtualMachine/sqlVirtualMachineGroups/availabilityGroupListeners",
    "isChild": true,
    "parentType": "Microsoft.SqlVirtualMachine/sqlVirtualMachineGroups"
  },
  {
    "file": "Azure::ApiManagement::Service_authorizationProviders.json",
    "resourceType": "Microsoft.ApiManagement/service/authorizationProviders",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service"
  },
  {
    "file": "Azure::HealthDataAIServices::DeidServices_privateEndpointConnections.json",
    "resourceType": "Microsoft.HealthDataAIServices/deidServices/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.HealthDataAIServices/deidServices"
  },
  {
    "file": "Azure::BotService::BotServices_channels.json",
    "resourceType": "Microsoft.BotService/botServices/channels",
    "isChild": true,
    "parentType": "Microsoft.BotService/botServices"
  },
  {
    "file": "Azure::DBforPostgreSQL::FlexibleServers_firewallRules.json",
    "resourceType": "Microsoft.DBforPostgreSQL/flexibleServers/firewallRules",
    "isChild": true,
    "parentType": "Microsoft.DBforPostgreSQL/flexibleServers"
  },
  {
    "file": "Azure::Automation::AutomationAccounts_compilationjobs.json",
    "resourceType": "Microsoft.Automation/automationAccounts/compilationjobs",
    "isChild": true,
    "parentType": "Microsoft.Automation/automationAccounts"
  },
  {
    "file": "Azure::Sql::Servers_jobAgents.json",
    "resourceType": "Microsoft.Sql/servers/jobAgents",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers"
  },
  {
    "file": "Azure::DBforPostgreSQL::FlexibleServers_databases.json",
    "resourceType": "Microsoft.DBforPostgreSQL/flexibleServers/databases",
    "isChild": true,
    "parentType": "Microsoft.DBforPostgreSQL/flexibleServers"
  },
  {
    "file": "Azure::Network::ApplicationGateways_privateEndpointConnections.json",
    "resourceType": "Microsoft.Network/applicationGateways/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.Network/applicationGateways"
  },
  {
    "file": "Azure::Migrate::AssessmentProjects_groups_assessments.json",
    "resourceType": "Microsoft.Migrate/assessmentProjects/groups/assessments",
    "isChild": true,
    "parentType": "Microsoft.Migrate/assessmentProjects/groups"
  },
  {
    "file": "Azure::ContainerStorage::Pools_snapshots.json",
    "resourceType": "Microsoft.ContainerStorage/pools/snapshots",
    "isChild": true,
    "parentType": "Microsoft.ContainerStorage/pools"
  },
  {
    "file": "Azure::Sql::ManagedInstances_administrators.json",
    "resourceType": "Microsoft.Sql/managedInstances/administrators",
    "isChild": true,
    "parentType": "Microsoft.Sql/managedInstances"
  },
  {
    "file": "Azure::Network::NetworkManagers_scopeConnections.json",
    "resourceType": "Microsoft.Network/networkManagers/scopeConnections",
    "isChild": true,
    "parentType": "Microsoft.Network/networkManagers"
  },
  {
    "file": "Azure::EventGrid::Domains_eventSubscriptions.json",
    "resourceType": "Microsoft.EventGrid/domains/eventSubscriptions",
    "isChild": true,
    "parentType": "Microsoft.EventGrid/domains"
  },
  {
    "file": "Azure::ServiceFabric::Managedclusters_applicationTypes.json",
    "resourceType": "Microsoft.ServiceFabric/managedclusters/applicationTypes",
    "isChild": true,
    "parentType": "Microsoft.ServiceFabric/managedclusters"
  },
  {
    "file": "Azure::DesktopVirtualization::HostPools.json",
    "resourceType": "Microsoft.DesktopVirtualization/hostPools",
    "isChild": false
  },
  {
    "file": "Azure::MachineLearningServices::Workspaces_models.json",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/models",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/workspaces"
  },
  {
    "file": "Azure::MachineLearningServices::Workspaces_endpoints_raiPolicies.json",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/endpoints/raiPolicies",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/workspaces/endpoints"
  },
  {
    "file": "Azure::ContainerService::ManagedClusters_loadBalancers.json",
    "resourceType": "Microsoft.ContainerService/managedClusters/loadBalancers",
    "isChild": true,
    "parentType": "Microsoft.ContainerService/managedClusters"
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_tables.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/tables",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts"
  },
  {
    "file": "Azure::AzureStackHCI::VirtualNetworks.json",
    "resourceType": "Microsoft.AzureStackHCI/virtualnetworks",
    "isChild": false
  },
  {
    "file": "Azure::Devices::ProvisioningServices.json",
    "resourceType": "Microsoft.Devices/provisioningServices",
    "isChild": false
  },
  {
    "file": "Azure::Migrate::AssessmentProjects_groups.json",
    "resourceType": "Microsoft.Migrate/assessmentProjects/groups",
    "isChild": true,
    "parentType": "Microsoft.Migrate/assessmentProjects"
  },
  {
    "file": "Azure::IoTOperationsMQ::Mq_diagnosticService.json",
    "resourceType": "Microsoft.IoTOperationsMQ/mq/diagnosticService",
    "isChild": true,
    "parentType": "Microsoft.IoTOperationsMQ/mq"
  },
  {
    "file": "Azure::DataMigration::Services_projects_tasks.json",
    "resourceType": "Microsoft.DataMigration/services/projects/tasks",
    "isChild": true,
    "parentType": "Microsoft.DataMigration/services/projects"
  },
  {
    "file": "Azure::AppConfiguration::ConfigurationStores_privateEndpointConnections.json",
    "resourceType": "Microsoft.AppConfiguration/configurationStores/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.AppConfiguration/configurationStores"
  },
  {
    "file": "Azure::DesktopVirtualization::ScalingPlans_pooledSchedules.json",
    "resourceType": "Microsoft.DesktopVirtualization/scalingPlans/pooledSchedules",
    "isChild": true,
    "parentType": "Microsoft.DesktopVirtualization/scalingPlans"
  },
  {
    "file": "Azure::IoTOperations::Instances_brokers_authorizations.json",
    "resourceType": "Microsoft.IoTOperations/instances/brokers/authorizations",
    "isChild": true,
    "parentType": "Microsoft.IoTOperations/instances/brokers"
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_sqlDatabases.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts"
  },
  {
    "file": "Azure::KeyVault::ManagedHSMs_keys.json",
    "resourceType": "Microsoft.KeyVault/managedHSMs/keys",
    "isChild": true,
    "parentType": "Microsoft.KeyVault/managedHSMs"
  },
  {
    "file": "Azure::DBforMySQL::FlexibleServers.json",
    "resourceType": "Microsoft.DBforMySQL/flexibleServers",
    "isChild": false
  },
  {
    "file": "Azure::ServiceBus::Namespaces_topics_subscriptions.json",
    "resourceType": "Microsoft.ServiceBus/namespaces/topics/subscriptions",
    "isChild": true,
    "parentType": "Microsoft.ServiceBus/namespaces/topics"
  },
  {
    "file": "Azure::ApiManagement::Service_workspaces.json",
    "resourceType": "Microsoft.ApiManagement/service/workspaces",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service"
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_apis_keyspaces_tables_settings.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/apis/keyspaces/tables/settings",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts/apis/keyspaces/tables"
  },
  {
    "file": "Azure::ApiManagement::Service_apis.json",
    "resourceType": "Microsoft.ApiManagement/service/apis",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service"
  },
  {
    "file": "Azure::CostManagement::Reportconfigs.json",
    "resourceType": "Microsoft.CostManagement/reportconfigs",
    "isChild": false
  },
  {
    "file": "Azure::AzureActiveDirectory::GuestUsages.json",
    "resourceType": "Microsoft.AzureActiveDirectory/guestUsages",
    "isChild": false
  },
  {
    "file": "Azure::OperationalInsights::Workspaces_dataExports.json",
    "resourceType": "Microsoft.OperationalInsights/workspaces/dataExports",
    "isChild": true,
    "parentType": "Microsoft.OperationalInsights/workspaces"
  },
  {
    "file": "Azure::Orbital::EdgeSites.json",
    "resourceType": "Microsoft.Orbital/edgeSites",
    "isChild": false
  },
  {
    "file": "Azure::Confluent::Organizations_environments_clusters.json",
    "resourceType": "Microsoft.Confluent/organizations/environments/clusters",
    "isChild": true,
    "parentType": "Microsoft.Confluent/organizations/environments"
  },
  {
    "file": "Azure::Security::SecurityConnectors_devops_azureDevOpsOrgs_projects.json",
    "resourceType": "Microsoft.Security/securityConnectors/devops/azureDevOpsOrgs/projects",
    "isChild": true,
    "parentType": "Microsoft.Security/securityConnectors/devops/azureDevOpsOrgs"
  },
  {
    "file": "Azure::ApiManagement::Service_products_groupLinks.json",
    "resourceType": "Microsoft.ApiManagement/service/products/groupLinks",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/products"
  },
  {
    "file": "Azure::Automation::AutomationAccounts_runtimeEnvironments_packages.json",
    "resourceType": "Microsoft.Automation/automationAccounts/runtimeEnvironments/packages",
    "isChild": true,
    "parentType": "Microsoft.Automation/automationAccounts/runtimeEnvironments"
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_gremlinRoleAssignments.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/gremlinRoleAssignments",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts"
  },
  {
    "file": "Azure::Network::NetworkVirtualAppliances_inboundSecurityRules.json",
    "resourceType": "Microsoft.Network/networkVirtualAppliances/inboundSecurityRules",
    "isChild": true,
    "parentType": "Microsoft.Network/networkVirtualAppliances"
  },
  {
    "file": "Azure::DigitalTwins::DigitalTwinsInstances.json",
    "resourceType": "Microsoft.DigitalTwins/digitalTwinsInstances",
    "isChild": false
  },
  {
    "file": "Azure::Compute::ProximityPlacementGroups.json",
    "resourceType": "Microsoft.Compute/proximityPlacementGroups",
    "isChild": false
  },
  {
    "file": "Azure::Logz::Monitors_tagRules.json",
    "resourceType": "Microsoft.Logz/monitors/tagRules",
    "isChild": true,
    "parentType": "Microsoft.Logz/monitors"
  },
  {
    "file": "Azure::SecurityAndCompliance::PrivateLinkServicesForM365SecurityCenter.json",
    "resourceType": "Microsoft.SecurityAndCompliance/privateLinkServicesForM365SecurityCenter",
    "isChild": false
  },
  {
    "file": "Azure::Network::VirtualNetworkTaps.json",
    "resourceType": "Microsoft.Network/virtualNetworkTaps",
    "isChild": false
  },
  {
    "file": "Azure::ApiCenter::Services_workspaces_apis.json",
    "resourceType": "Microsoft.ApiCenter/services/workspaces/apis",
    "isChild": true,
    "parentType": "Microsoft.ApiCenter/services/workspaces"
  },
  {
    "file": "Azure::ContainerRegistry::Registries_replications.json",
    "resourceType": "Microsoft.ContainerRegistry/registries/replications",
    "isChild": true,
    "parentType": "Microsoft.ContainerRegistry/registries"
  },
  {
    "file": "Azure::ContainerRegistry::Registries_taskRuns.json",
    "resourceType": "Microsoft.ContainerRegistry/registries/taskRuns",
    "isChild": true,
    "parentType": "Microsoft.ContainerRegistry/registries"
  },
  {
    "file": "Azure::Cdn::Profiles_endpoints_customDomains.json",
    "resourceType": "Microsoft.Cdn/profiles/endpoints/customDomains",
    "isChild": true,
    "parentType": "Microsoft.Cdn/profiles/endpoints"
  },
  {
    "file": "Azure::Cache::RedisEnterprise_privateEndpointConnections.json",
    "resourceType": "Microsoft.Cache/redisEnterprise/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.Cache/redisEnterprise"
  },
  {
    "file": "Azure::CloudHealth::Healthmodels_signaldefinitions.json",
    "resourceType": "Microsoft.CloudHealth/healthmodels/signaldefinitions",
    "isChild": true,
    "parentType": "Microsoft.CloudHealth/healthmodels"
  },
  {
    "file": "Azure::AwsConnector::RdsDBSnapshotAttributesResults.json",
    "resourceType": "Microsoft.AwsConnector/rdsDBSnapshotAttributesResults",
    "isChild": false
  },
  {
    "file": "Azure::DevCenter::Plans.json",
    "resourceType": "Microsoft.DevCenter/plans",
    "isChild": false
  },
  {
    "file": "Azure::Compute::Galleries_applications.json",
    "resourceType": "Microsoft.Compute/galleries/applications",
    "isChild": true,
    "parentType": "Microsoft.Compute/galleries"
  },
  {
    "file": "Azure::Network::PrivateDnsZones_PTR.json",
    "resourceType": "Microsoft.Network/privateDnsZones/PTR",
    "isChild": true,
    "parentType": "Microsoft.Network/privateDnsZones"
  },
  {
    "file": "Azure::App::ConnectedEnvironments_daprComponents.json",
    "resourceType": "Microsoft.App/connectedEnvironments/daprComponents",
    "isChild": true,
    "parentType": "Microsoft.App/connectedEnvironments"
  },
  {
    "file": "Azure::Automanage::ConfigurationProfiles_versions.json",
    "resourceType": "Microsoft.Automanage/configurationProfiles/versions",
    "isChild": true,
    "parentType": "Microsoft.Automanage/configurationProfiles"
  },
  {
    "file": "Azure::Network::VirtualHubs_ipConfigurations.json",
    "resourceType": "Microsoft.Network/virtualHubs/ipConfigurations",
    "isChild": true,
    "parentType": "Microsoft.Network/virtualHubs"
  },
  {
    "file": "Azure::Network::ExpressRouteCrossConnections_peerings.json",
    "resourceType": "Microsoft.Network/expressRouteCrossConnections/peerings",
    "isChild": true,
    "parentType": "Microsoft.Network/expressRouteCrossConnections"
  },
  {
    "file": "Azure::App::ContainerApps_sourcecontrols.json",
    "resourceType": "Microsoft.App/containerApps/sourcecontrols",
    "isChild": true,
    "parentType": "Microsoft.App/containerApps"
  },
  {
    "file": "Azure::StoragePool::DiskPools.json",
    "resourceType": "Microsoft.StoragePool/diskPools",
    "isChild": false
  },
  {
    "file": "Azure::Network::ServiceEndpointPolicies_serviceEndpointPolicyDefinitions.json",
    "resourceType": "Microsoft.Network/serviceEndpointPolicies/serviceEndpointPolicyDefinitions",
    "isChild": true,
    "parentType": "Microsoft.Network/serviceEndpointPolicies"
  },
  {
    "file": "Azure::AwsConnector::LogsSubscriptionFilters.json",
    "resourceType": "Microsoft.AwsConnector/logsSubscriptionFilters",
    "isChild": false
  },
  {
    "file": "Azure::AwsConnector::S3Buckets.json",
    "resourceType": "Microsoft.AwsConnector/s3Buckets",
    "isChild": false
  },
  {
    "file": "Azure::DatabaseFleetManager::Fleets.json",
    "resourceType": "Microsoft.DatabaseFleetManager/fleets",
    "isChild": false
  },
  {
    "file": "Azure::Web::Sites_basicPublishingCredentialsPolicies.json",
    "resourceType": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
    "isChild": true,
    "parentType": "Microsoft.Web/sites"
  },
  {
    "file": "Azure::AVS::PrivateClouds_pureStoragePolicies.json",
    "resourceType": "Microsoft.AVS/privateClouds/pureStoragePolicies",
    "isChild": true,
    "parentType": "Microsoft.AVS/privateClouds"
  },
  {
    "file": "Azure::Media::MediaServices_assets_tracks.json",
    "resourceType": "Microsoft.Media/mediaServices/assets/tracks",
    "isChild": true,
    "parentType": "Microsoft.Media/mediaServices/assets"
  },
  {
    "file": "Azure::RedHatOpenShift::Openshiftclusters_secret.json",
    "resourceType": "Microsoft.RedHatOpenShift/openshiftclusters/secret",
    "isChild": true,
    "parentType": "Microsoft.RedHatOpenShift/openshiftclusters"
  },
  {
    "file": "Azure::HybridCompute::Machines.json",
    "resourceType": "Microsoft.HybridCompute/machines",
    "isChild": false
  },
  {
    "file": "Azure::ManagedNetworkFabric::L2IsolationDomains.json",
    "resourceType": "Microsoft.ManagedNetworkFabric/l2IsolationDomains",
    "isChild": false
  },
  {
    "file": "Azure::DataMigration::Services_serviceTasks.json",
    "resourceType": "Microsoft.DataMigration/services/serviceTasks",
    "isChild": true,
    "parentType": "Microsoft.DataMigration/services"
  },
  {
    "file": "Azure::NetworkFunction::AzureTrafficCollectors_collectorPolicies.json",
    "resourceType": "Microsoft.NetworkFunction/azureTrafficCollectors/collectorPolicies",
    "isChild": true,
    "parentType": "Microsoft.NetworkFunction/azureTrafficCollectors"
  },
  {
    "file": "Azure::CognitiveServices::Accounts.json",
    "resourceType": "Microsoft.CognitiveServices/accounts",
    "isChild": false
  },
  {
    "file": "Azure::StorageMover::StorageMovers_projects.json",
    "resourceType": "Microsoft.StorageMover/storageMovers/projects",
    "isChild": true,
    "parentType": "Microsoft.StorageMover/storageMovers"
  },
  {
    "file": "Azure::IoTOperationsMQ::Mq_dataLakeConnector_topicMap.json",
    "resourceType": "Microsoft.IoTOperationsMQ/mq/dataLakeConnector/topicMap",
    "isChild": true,
    "parentType": "Microsoft.IoTOperationsMQ/mq/dataLakeConnector"
  },
  {
    "file": "Azure::DataFactory::Factories_linkedservices.json",
    "resourceType": "Microsoft.DataFactory/factories/linkedservices",
    "isChild": true,
    "parentType": "Microsoft.DataFactory/factories"
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_mongodbDatabases.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts"
  },
  {
    "file": "Azure::DataFactory::Factories_triggers.json",
    "resourceType": "Microsoft.DataFactory/factories/triggers",
    "isChild": true,
    "parentType": "Microsoft.DataFactory/factories"
  },
  {
    "file": "Azure::DataManagement::Organizations_serverlessRuntimes.json",
    "resourceType": "Informatica.DataManagement/organizations/serverlessRuntimes",
    "isChild": true,
    "parentType": "Informatica.DataManagement/organizations"
  },
  {
    "file": "Azure::Sql::Servers_databases_backupShortTermRetentionPolicies.json",
    "resourceType": "Microsoft.Sql/servers/databases/backupShortTermRetentionPolicies",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers/databases"
  },
  {
    "file": "Azure::Storage::StorageAccounts_tableServices.json",
    "resourceType": "Microsoft.Storage/storageAccounts/tableServices",
    "isChild": true,
    "parentType": "Microsoft.Storage/storageAccounts"
  },
  {
    "file": "Azure::Web::Sites_slots_hostNameBindings.json",
    "resourceType": "Microsoft.Web/sites/slots/hostNameBindings",
    "isChild": true,
    "parentType": "Microsoft.Web/sites/slots"
  },
  {
    "file": "Azure::DeviceRegistry::SchemaRegistries_schemas.json",
    "resourceType": "Microsoft.DeviceRegistry/schemaRegistries/schemas",
    "isChild": true,
    "parentType": "Microsoft.DeviceRegistry/schemaRegistries"
  },
  {
    "file": "Azure::Insights::PrivateLinkScopes_privateEndpointConnections.json",
    "resourceType": "Microsoft.Insights/privateLinkScopes/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.Insights/privateLinkScopes"
  },
  {
    "file": "Azure::AppPlatform::Spring_eurekaServers.json",
    "resourceType": "Microsoft.AppPlatform/Spring/eurekaServers",
    "isChild": true,
    "parentType": "Microsoft.AppPlatform/Spring"
  },
  {
    "file": "Azure::ContainerRegistry::Registries_exportPipelines.json",
    "resourceType": "Microsoft.ContainerRegistry/registries/exportPipelines",
    "isChild": true,
    "parentType": "Microsoft.ContainerRegistry/registries"
  },
  {
    "file": "Azure::ServiceNetworking::TrafficControllers_associations.json",
    "resourceType": "Microsoft.ServiceNetworking/trafficControllers/associations",
    "isChild": true,
    "parentType": "Microsoft.ServiceNetworking/trafficControllers"
  },
  {
    "file": "Azure::Relay::Namespaces_wcfRelays.json",
    "resourceType": "Microsoft.Relay/namespaces/WcfRelays",
    "isChild": true,
    "parentType": "Microsoft.Relay/namespaces"
  },
  {
    "file": "Azure::SecretSyncController::SecretSyncs.json",
    "resourceType": "Microsoft.SecretSyncController/secretSyncs",
    "isChild": false
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_apis_keyspaces_tables.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/apis/keyspaces/tables",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts/apis/keyspaces"
  },
  {
    "file": "Azure::Devices::ProvisioningServices_privateEndpointConnections.json",
    "resourceType": "Microsoft.Devices/provisioningServices/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.Devices/provisioningServices"
  },
  {
    "file": "Azure::MachineLearningServices::Workspaces_featurestoreEntities_versions.json",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/featurestoreEntities/versions",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/workspaces/featurestoreEntities"
  },
  {
    "file": "Azure::Batch::BatchAccounts_certificates.json",
    "resourceType": "Microsoft.Batch/batchAccounts/certificates",
    "isChild": true,
    "parentType": "Microsoft.Batch/batchAccounts"
  },
  {
    "file": "Azure::Compute::RestorePointCollections_restorePoints.json",
    "resourceType": "Microsoft.Compute/restorePointCollections/restorePoints",
    "isChild": true,
    "parentType": "Microsoft.Compute/restorePointCollections"
  },
  {
    "file": "Azure::Insights::Webtests.json",
    "resourceType": "Microsoft.Insights/webtests",
    "isChild": false
  },
  {
    "file": "Azure::AppPlatform::Spring_jobs.json",
    "resourceType": "Microsoft.AppPlatform/Spring/jobs",
    "isChild": true,
    "parentType": "Microsoft.AppPlatform/Spring"
  },
  {
    "file": "Azure::ContainerRegistry::Registries_privateEndpointConnections.json",
    "resourceType": "Microsoft.ContainerRegistry/registries/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.ContainerRegistry/registries"
  },
  {
    "file": "Azure::Network::DnsForwardingRulesets_virtualNetworkLinks.json",
    "resourceType": "Microsoft.Network/dnsForwardingRulesets/virtualNetworkLinks",
    "isChild": true,
    "parentType": "Microsoft.Network/dnsForwardingRulesets"
  },
  {
    "file": "Azure::ApiManagement::Service_products_tags.json",
    "resourceType": "Microsoft.ApiManagement/service/products/tags",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/products"
  },
  {
    "file": "Azure::RecoveryServices::Vaults_backupFabrics_protectionContainers_protectedItems.json",
    "resourceType": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems",
    "isChild": true,
    "parentType": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers"
  },
  {
    "file": "Azure::CognitiveServices::CommitmentPlans_accountAssociations.json",
    "resourceType": "Microsoft.CognitiveServices/commitmentPlans/accountAssociations",
    "isChild": true,
    "parentType": "Microsoft.CognitiveServices/commitmentPlans"
  },
  {
    "file": "Azure::ApiManagement::Service_documentations.json",
    "resourceType": "Microsoft.ApiManagement/service/documentations",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service"
  },
  {
    "file": "Azure::Dashboard::Grafana_privateEndpointConnections.json",
    "resourceType": "Microsoft.Dashboard/grafana/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.Dashboard/grafana"
  },
  {
    "file": "Azure::DeviceRegistry::SchemaRegistries.json",
    "resourceType": "Microsoft.DeviceRegistry/schemaRegistries",
    "isChild": false
  },
  {
    "file": "Azure::Migrate::AssessmentProjects_groups_sqlAssessments.json",
    "resourceType": "Microsoft.Migrate/assessmentProjects/groups/sqlAssessments",
    "isChild": true,
    "parentType": "Microsoft.Migrate/assessmentProjects/groups"
  },
  {
    "file": "Azure::ConnectedVMwarevSphere::Hosts.json",
    "resourceType": "Microsoft.ConnectedVMwarevSphere/hosts",
    "isChild": false
  },
  {
    "file": "Azure::ManagedNetworkFabric::InternetGateways.json",
    "resourceType": "Microsoft.ManagedNetworkFabric/internetGateways",
    "isChild": false
  },
  {
    "file": "Azure::Network::DnsResolverPolicies_virtualNetworkLinks.json",
    "resourceType": "Microsoft.Network/dnsResolverPolicies/virtualNetworkLinks",
    "isChild": true,
    "parentType": "Microsoft.Network/dnsResolverPolicies"
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_apis_keyspaces_settings.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/apis/keyspaces/settings",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts/apis/keyspaces"
  },
  {
    "file": "Azure::Synapse::Workspaces_kustoPools_attachedDatabaseConfigurations.json",
    "resourceType": "Microsoft.Synapse/workspaces/kustoPools/attachedDatabaseConfigurations",
    "isChild": true,
    "parentType": "Microsoft.Synapse/workspaces/kustoPools"
  },
  {
    "file": "Azure::Devices::IotHubs_certificates.json",
    "resourceType": "Microsoft.Devices/IotHubs/certificates",
    "isChild": true,
    "parentType": "Microsoft.Devices/IotHubs"
  },
  {
    "file": "Azure::ApiManagement::Service_identityProviders.json",
    "resourceType": "Microsoft.ApiManagement/service/identityProviders",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service"
  },
  {
    "file": "Azure::AwsConnector::LambdaFunctionCodeLocations.json",
    "resourceType": "Microsoft.AwsConnector/lambdaFunctionCodeLocations",
    "isChild": false
  },
  {
    "file": "Azure::ApiManagement::Service_openidConnectProviders.json",
    "resourceType": "Microsoft.ApiManagement/service/openidConnectProviders",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service"
  },
  {
    "file": "Azure::NotificationHubs::Namespaces_privateEndpointConnections.json",
    "resourceType": "Microsoft.NotificationHubs/namespaces/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.NotificationHubs/namespaces"
  },
  {
    "file": "Azure::DomainRegistration::Domains.json",
    "resourceType": "Microsoft.DomainRegistration/domains",
    "isChild": false
  },
  {
    "file": "Azure::TestBase::TestBaseAccounts_actionRequests.json",
    "resourceType": "Microsoft.TestBase/testBaseAccounts/actionRequests",
    "isChild": true,
    "parentType": "Microsoft.TestBase/testBaseAccounts"
  },
  {
    "file": "Azure::RecoveryServices::Vaults_replicationFabrics_replicationStorageClassifications_replicationStorageClassificationMappings.json",
    "resourceType": "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationStorageClassifications/replicationStorageClassificationMappings",
    "isChild": true,
    "parentType": "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationStorageClassifications"
  },
  {
    "file": "Azure::Sql::ManagedInstances_serverTrustCertificates.json",
    "resourceType": "Microsoft.Sql/managedInstances/serverTrustCertificates",
    "isChild": true,
    "parentType": "Microsoft.Sql/managedInstances"
  },
  {
    "file": "Azure::Network::NetworkManagers_securityUserConfigurations_ruleCollections.json",
    "resourceType": "Microsoft.Network/networkManagers/securityUserConfigurations/ruleCollections",
    "isChild": true,
    "parentType": "Microsoft.Network/networkManagers/securityUserConfigurations"
  },
  {
    "file": "Azure::ApiCenter::Services_metadataSchemas.json",
    "resourceType": "Microsoft.ApiCenter/services/metadataSchemas",
    "isChild": true,
    "parentType": "Microsoft.ApiCenter/services"
  },
  {
    "file": "Azure::ApiManagement::Service_workspaces_notifications_recipientEmails.json",
    "resourceType": "Microsoft.ApiManagement/service/workspaces/notifications/recipientEmails",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/workspaces/notifications"
  },
  {
    "file": "Azure::Sql::ManagedInstances_databases_vulnerabilityAssessments_rules_baselines.json",
    "resourceType": "Microsoft.Sql/managedInstances/databases/vulnerabilityAssessments/rules/baselines",
    "isChild": true,
    "parentType": "Microsoft.Sql/managedInstances/databases/vulnerabilityAssessments/rules"
  },
  {
    "file": "Azure::AVS::PrivateClouds_clusters_datastores.json",
    "resourceType": "Microsoft.AVS/privateClouds/clusters/datastores",
    "isChild": true,
    "parentType": "Microsoft.AVS/privateClouds/clusters"
  },
  {
    "file": "Azure::Sql::ManagedInstances_sqlAgent.json",
    "resourceType": "Microsoft.Sql/managedInstances/sqlAgent",
    "isChild": true,
    "parentType": "Microsoft.Sql/managedInstances"
  },
  {
    "file": "Azure::StreamAnalytics::Clusters_privateEndpoints.json",
    "resourceType": "Microsoft.StreamAnalytics/clusters/privateEndpoints",
    "isChild": true,
    "parentType": "Microsoft.StreamAnalytics/clusters"
  },
  {
    "file": "Azure::ApiCenter::Services_workspaces_apis_versions_definitions.json",
    "resourceType": "Microsoft.ApiCenter/services/workspaces/apis/versions/definitions",
    "isChild": true,
    "parentType": "Microsoft.ApiCenter/services/workspaces/apis/versions"
  },
  {
    "file": "Azure::Sql::ManagedInstances_databases_schemas_tables_columns_sensitivityLabels.json",
    "resourceType": "Microsoft.Sql/managedInstances/databases/schemas/tables/columns/sensitivityLabels",
    "isChild": true,
    "parentType": "Microsoft.Sql/managedInstances/databases/schemas/tables/columns"
  },
  {
    "file": "Azure::SecurityDevOps::GitHubConnectors_owners_repos.json",
    "resourceType": "Microsoft.SecurityDevOps/gitHubConnectors/owners/repos",
    "isChild": true,
    "parentType": "Microsoft.SecurityDevOps/gitHubConnectors/owners"
  },
  {
    "file": "Azure::Sovereign::LandingZoneAccounts_landingZoneRegistrations.json",
    "resourceType": "Microsoft.Sovereign/landingZoneAccounts/landingZoneRegistrations",
    "isChild": true,
    "parentType": "Microsoft.Sovereign/landingZoneAccounts"
  },
  {
    "file": "Azure::RecoveryServices::Vaults_backupPolicies.json",
    "resourceType": "Microsoft.RecoveryServices/vaults/backupPolicies",
    "isChild": true,
    "parentType": "Microsoft.RecoveryServices/vaults"
  },
  {
    "file": "Azure::MachineLearningServices::Workspaces_codes.json",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/codes",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/workspaces"
  },
  {
    "file": "Azure::Migrate::AssessmentProjects.json",
    "resourceType": "Microsoft.Migrate/assessmentProjects",
    "isChild": false
  },
  {
    "file": "Azure::ApiManagement::Service_policyFragments.json",
    "resourceType": "Microsoft.ApiManagement/service/policyFragments",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service"
  },
  {
    "file": "Azure::DBforPostgreSQL::ServerGroupsv2_firewallRules.json",
    "resourceType": "Microsoft.DBforPostgreSQL/serverGroupsv2/firewallRules",
    "isChild": true,
    "parentType": "Microsoft.DBforPostgreSQL/serverGroupsv2"
  },
  {
    "file": "Azure::AwsConnector::AppSyncGraphqlApis.json",
    "resourceType": "Microsoft.AwsConnector/appSyncGraphqlApis",
    "isChild": false
  },
  {
    "file": "Azure::IoTOperations::Instances.json",
    "resourceType": "Microsoft.IoTOperations/instances",
    "isChild": false
  },
  {
    "file": "Azure::DatabaseWatcher::Watchers_alertRuleResources.json",
    "resourceType": "Microsoft.DatabaseWatcher/watchers/alertRuleResources",
    "isChild": true,
    "parentType": "Microsoft.DatabaseWatcher/watchers"
  },
  {
    "file": "Azure::Synapse::Workspaces_sqlDatabases.json",
    "resourceType": "Microsoft.Synapse/workspaces/sqlDatabases",
    "isChild": true,
    "parentType": "Microsoft.Synapse/workspaces"
  },
  {
    "file": "Azure::DevCenter::Devcenters_attachednetworks.json",
    "resourceType": "Microsoft.DevCenter/devcenters/attachednetworks",
    "isChild": true,
    "parentType": "Microsoft.DevCenter/devcenters"
  },
  {
    "file": "Azure::Postgres::Organizations_projects.json",
    "resourceType": "Neon.Postgres/organizations/projects",
    "isChild": true,
    "parentType": "Neon.Postgres/organizations"
  },
  {
    "file": "Azure::NetworkCloud::Volumes.json",
    "resourceType": "Microsoft.NetworkCloud/volumes",
    "isChild": false
  },
  {
    "file": "Azure::MachineLearningServices::Workspaces_linkedWorkspaces.json",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/linkedWorkspaces",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/workspaces"
  },
  {
    "file": "Azure::Synapse::Workspaces_sqlPools_securityAlertPolicies.json",
    "resourceType": "Microsoft.Synapse/workspaces/sqlPools/securityAlertPolicies",
    "isChild": true,
    "parentType": "Microsoft.Synapse/workspaces/sqlPools"
  },
  {
    "file": "Azure::LoadTestService::LoadTests.json",
    "resourceType": "Microsoft.LoadTestService/loadTests",
    "isChild": false
  },
  {
    "file": "Azure::AppPlatform::Spring_configurationServices.json",
    "resourceType": "Microsoft.AppPlatform/Spring/configurationServices",
    "isChild": true,
    "parentType": "Microsoft.AppPlatform/Spring"
  },
  {
    "file": "Azure::MachineLearningServices::Workspaces_data.json",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/data",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/workspaces"
  },
  {
    "file": "Azure::ContainerRegistry::Registries_cacheRules.json",
    "resourceType": "Microsoft.ContainerRegistry/registries/cacheRules",
    "isChild": true,
    "parentType": "Microsoft.ContainerRegistry/registries"
  },
  {
    "file": "Azure::Sql::ManagedInstances_startStopSchedules.json",
    "resourceType": "Microsoft.Sql/managedInstances/startStopSchedules",
    "isChild": true,
    "parentType": "Microsoft.Sql/managedInstances"
  },
  {
    "file": "Azure::NetworkCloud::KubernetesClusters_features.json",
    "resourceType": "Microsoft.NetworkCloud/kubernetesClusters/features",
    "isChild": true,
    "parentType": "Microsoft.NetworkCloud/kubernetesClusters"
  },
  {
    "file": "Azure::Synapse::Workspaces_sqlPools_vulnerabilityAssessments.json",
    "resourceType": "Microsoft.Synapse/workspaces/sqlPools/vulnerabilityAssessments",
    "isChild": true,
    "parentType": "Microsoft.Synapse/workspaces/sqlPools"
  },
  {
    "file": "Azure::DevCenter::Projects_pools.json",
    "resourceType": "Microsoft.DevCenter/projects/pools",
    "isChild": true,
    "parentType": "Microsoft.DevCenter/projects"
  },
  {
    "file": "Azure::Web::Sites_privateAccess.json",
    "resourceType": "Microsoft.Web/sites/privateAccess",
    "isChild": true,
    "parentType": "Microsoft.Web/sites"
  },
  {
    "file": "Azure::OffAzure::VMwareSites_vCenters.json",
    "resourceType": "Microsoft.OffAzure/vmwareSites/vcenters",
    "isChild": true,
    "parentType": "Microsoft.OffAzure/vmwareSites"
  },
  {
    "file": "Azure::DBforMySQL::Servers_administrators.json",
    "resourceType": "Microsoft.DBforMySQL/servers/administrators",
    "isChild": true,
    "parentType": "Microsoft.DBforMySQL/servers"
  },
  {
    "file": "Azure::MobileNetwork::MobileNetworks_slices.json",
    "resourceType": "Microsoft.MobileNetwork/mobileNetworks/slices",
    "isChild": true,
    "parentType": "Microsoft.MobileNetwork/mobileNetworks"
  },
  {
    "file": "Azure::ApiManagement::Service_apis_wikis.json",
    "resourceType": "Microsoft.ApiManagement/service/apis/wikis",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/apis"
  },
  {
    "file": "Azure::DataShare::Accounts.json",
    "resourceType": "Microsoft.DataShare/accounts",
    "isChild": false
  },
  {
    "file": "Azure::PowerPlatform::EnterprisePolicies_privateEndpointConnections.json",
    "resourceType": "Microsoft.PowerPlatform/enterprisePolicies/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.PowerPlatform/enterprisePolicies"
  },
  {
    "file": "Azure::Storage::StorageAccounts_inventoryPolicies.json",
    "resourceType": "Microsoft.Storage/storageAccounts/inventoryPolicies",
    "isChild": true,
    "parentType": "Microsoft.Storage/storageAccounts"
  },
  {
    "file": "Azure::Web::StaticSites_basicAuth.json",
    "resourceType": "Microsoft.Web/staticSites/basicAuth",
    "isChild": true,
    "parentType": "Microsoft.Web/staticSites"
  },
  {
    "file": "Azure::AzureStackHCI::Clusters_updates.json",
    "resourceType": "Microsoft.AzureStackHCI/clusters/updates",
    "isChild": true,
    "parentType": "Microsoft.AzureStackHCI/clusters"
  },
  {
    "file": "Azure::HybridCompute::Gateways.json",
    "resourceType": "Microsoft.HybridCompute/gateways",
    "isChild": false
  },
  {
    "file": "Azure::Workloads::SapVirtualInstances_applicationInstances.json",
    "resourceType": "Microsoft.Workloads/sapVirtualInstances/applicationInstances",
    "isChild": true,
    "parentType": "Microsoft.Workloads/sapVirtualInstances"
  },
  {
    "file": "Azure::Web::Sites_slots_hybridconnection.json",
    "resourceType": "Microsoft.Web/sites/slots/hybridconnection",
    "isChild": true,
    "parentType": "Microsoft.Web/sites/slots"
  },
  {
    "file": "Azure::AwsConnector::RedshiftClusters.json",
    "resourceType": "Microsoft.AwsConnector/redshiftClusters",
    "isChild": false
  },
  {
    "file": "Azure::Sql::Servers_auditingPolicies.json",
    "resourceType": "Microsoft.Sql/servers/auditingPolicies",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers"
  },
  {
    "file": "Azure::AppPlatform::Spring_apms.json",
    "resourceType": "Microsoft.AppPlatform/Spring/apms",
    "isChild": true,
    "parentType": "Microsoft.AppPlatform/Spring"
  },
  {
    "file": "Azure::Solutions::JitRequests.json",
    "resourceType": "Microsoft.Solutions/jitRequests",
    "isChild": false
  },
  {
    "file": "Azure::ManagedNetworkFabric::IpPrefixes.json",
    "resourceType": "Microsoft.ManagedNetworkFabric/ipPrefixes",
    "isChild": false
  },
  {
    "file": "Azure::AzureStackHCI::GalleryImages.json",
    "resourceType": "Microsoft.AzureStackHCI/galleryimages",
    "isChild": false
  },
  {
    "file": "Azure::Cdn::Profiles_securityPolicies.json",
    "resourceType": "Microsoft.Cdn/profiles/securityPolicies",
    "isChild": true,
    "parentType": "Microsoft.Cdn/profiles"
  },
  {
    "file": "Azure::AppConfiguration::ConfigurationStores_replicas.json",
    "resourceType": "Microsoft.AppConfiguration/configurationStores/replicas",
    "isChild": true,
    "parentType": "Microsoft.AppConfiguration/configurationStores"
  },
  {
    "file": "Azure::Peering::Peerings.json",
    "resourceType": "Microsoft.Peering/peerings",
    "isChild": false
  },
  {
    "file": "Azure::Attestation::AttestationProviders_privateEndpointConnections.json",
    "resourceType": "Microsoft.Attestation/attestationProviders/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.Attestation/attestationProviders"
  },
  {
    "file": "Azure::Consumption::Budgets.json",
    "resourceType": "Microsoft.Consumption/budgets",
    "isChild": false
  },
  {
    "file": "Azure::SignalRService::WebPubSub_customCertificates.json",
    "resourceType": "Microsoft.SignalRService/webPubSub/customCertificates",
    "isChild": true,
    "parentType": "Microsoft.SignalRService/webPubSub"
  },
  {
    "file": "Azure::DevTestLab::Labs_users_disks.json",
    "resourceType": "Microsoft.DevTestLab/labs/users/disks",
    "isChild": true,
    "parentType": "Microsoft.DevTestLab/labs/users"
  },
  {
    "file": "Azure::Sql::ManagedInstances_restorableDroppedDatabases_backupShortTermRetentionPolicies.json",
    "resourceType": "Microsoft.Sql/managedInstances/restorableDroppedDatabases/backupShortTermRetentionPolicies",
    "isChild": true,
    "parentType": "Microsoft.Sql/managedInstances/restorableDroppedDatabases"
  },
  {
    "file": "Azure::SignalRService::SignalR.json",
    "resourceType": "Microsoft.SignalRService/SignalR",
    "isChild": false
  },
  {
    "file": "Azure::Media::MediaServices_transforms_jobs.json",
    "resourceType": "Microsoft.Media/mediaServices/transforms/jobs",
    "isChild": true,
    "parentType": "Microsoft.Media/mediaServices/transforms"
  },
  {
    "file": "Azure::DependencyMap::Maps_discoverySources.json",
    "resourceType": "Microsoft.DependencyMap/maps/discoverySources",
    "isChild": true,
    "parentType": "Microsoft.DependencyMap/maps"
  },
  {
    "file": "Azure::HybridCompute::Machines_runCommands.json",
    "resourceType": "Microsoft.HybridCompute/machines/runCommands",
    "isChild": true,
    "parentType": "Microsoft.HybridCompute/machines"
  },
  {
    "file": "Azure::DBforPostgreSQL::Servers_virtualNetworkRules.json",
    "resourceType": "Microsoft.DBforPostgreSQL/servers/virtualNetworkRules",
    "isChild": true,
    "parentType": "Microsoft.DBforPostgreSQL/servers"
  },
  {
    "file": "Azure::Batch::BatchAccounts.json",
    "resourceType": "Microsoft.Batch/batchAccounts",
    "isChild": false
  },
  {
    "file": "Azure::HDInsight::Clusters.json",
    "resourceType": "Microsoft.HDInsight/clusters",
    "isChild": false
  },
  {
    "file": "Azure::IoTOperations::Instances_brokers_listeners.json",
    "resourceType": "Microsoft.IoTOperations/instances/brokers/listeners",
    "isChild": true,
    "parentType": "Microsoft.IoTOperations/instances/brokers"
  },
  {
    "file": "Azure::Kusto::Clusters_databases_eventhubconnections.json",
    "resourceType": "Microsoft.Kusto/clusters/databases/eventhubconnections",
    "isChild": true,
    "parentType": "Microsoft.Kusto/clusters/databases"
  },
  {
    "file": "Azure::AzureSphere::Catalogs_images.json",
    "resourceType": "Microsoft.AzureSphere/catalogs/images",
    "isChild": true,
    "parentType": "Microsoft.AzureSphere/catalogs"
  },
  {
    "file": "Azure::ApiManagement::Service_apis_operations_policies.json",
    "resourceType": "Microsoft.ApiManagement/service/apis/operations/policies",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/apis/operations"
  },
  {
    "file": "Azure::NetworkCloud::CloudServicesNetworks.json",
    "resourceType": "Microsoft.NetworkCloud/cloudServicesNetworks",
    "isChild": false
  },
  {
    "file": "Azure::DataProtection::BackupVaults_backupInstances.json",
    "resourceType": "Microsoft.DataProtection/backupVaults/backupInstances",
    "isChild": true,
    "parentType": "Microsoft.DataProtection/backupVaults"
  },
  {
    "file": "Azure::Automation::AutomationAccounts_python3Packages.json",
    "resourceType": "Microsoft.Automation/automationAccounts/python3Packages",
    "isChild": true,
    "parentType": "Microsoft.Automation/automationAccounts"
  },
  {
    "file": "Azure::Network::RouteFilters.json",
    "resourceType": "Microsoft.Network/routeFilters",
    "isChild": false
  },
  {
    "file": "Azure::Media::MediaServices_streamingPolicies.json",
    "resourceType": "Microsoft.Media/mediaServices/streamingPolicies",
    "isChild": true,
    "parentType": "Microsoft.Media/mediaServices"
  },
  {
    "file": "Azure::AwsConnector::Ec2AccountAttributes.json",
    "resourceType": "Microsoft.AwsConnector/ec2AccountAttributes",
    "isChild": false
  },
  {
    "file": "Azure::Web::Sites_slots_hybridConnectionNamespaces_relays.json",
    "resourceType": "Microsoft.Web/sites/slots/hybridConnectionNamespaces/relays",
    "isChild": true,
    "parentType": "Microsoft.Web/sites/slots/hybridConnectionNamespaces"
  },
  {
    "file": "Azure::StorSimple::Managers_devices_iscsiservers.json",
    "resourceType": "Microsoft.StorSimple/managers/devices/iscsiservers",
    "isChild": true,
    "parentType": "Microsoft.StorSimple/managers/devices"
  },
  {
    "file": "Azure::MachineLearningServices::Workspaces_onlineEndpoints_deployments.json",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/onlineEndpoints/deployments",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/workspaces/onlineEndpoints"
  },
  {
    "file": "Azure::Network::IpAllocations.json",
    "resourceType": "Microsoft.Network/IpAllocations",
    "isChild": false
  },
  {
    "file": "Azure::App::SessionPools.json",
    "resourceType": "Microsoft.App/sessionPools",
    "isChild": false
  },
  {
    "file": "Azure::CloudHealth::Healthmodels_authenticationsettings.json",
    "resourceType": "Microsoft.CloudHealth/healthmodels/authenticationsettings",
    "isChild": true,
    "parentType": "Microsoft.CloudHealth/healthmodels"
  },
  {
    "file": "Azure::Network::NetworkManagers_ipamPools.json",
    "resourceType": "Microsoft.Network/networkManagers/ipamPools",
    "isChild": true,
    "parentType": "Microsoft.Network/networkManagers"
  },
  {
    "file": "Azure::HDInsight::Clusters_privateEndpointConnections.json",
    "resourceType": "Microsoft.HDInsight/clusters/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.HDInsight/clusters"
  },
  {
    "file": "Azure::ServiceNetworking::TrafficControllers_securityPolicies.json",
    "resourceType": "Microsoft.ServiceNetworking/trafficControllers/securityPolicies",
    "isChild": true,
    "parentType": "Microsoft.ServiceNetworking/trafficControllers"
  },
  {
    "file": "Azure::AwsConnector::IamServerCertificates.json",
    "resourceType": "Microsoft.AwsConnector/iamServerCertificates",
    "isChild": false
  },
  {
    "file": "Azure::Automation::AutomationAccounts_runtimeEnvironments.json",
    "resourceType": "Microsoft.Automation/automationAccounts/runtimeEnvironments",
    "isChild": true,
    "parentType": "Microsoft.Automation/automationAccounts"
  },
  {
    "file": "Azure::Storage::StorageAccounts_localUsers.json",
    "resourceType": "Microsoft.Storage/storageAccounts/localUsers",
    "isChild": true,
    "parentType": "Microsoft.Storage/storageAccounts"
  },
  {
    "file": "Azure::Orbital::Spacecrafts_contacts.json",
    "resourceType": "Microsoft.Orbital/spacecrafts/contacts",
    "isChild": true,
    "parentType": "Microsoft.Orbital/spacecrafts"
  },
  {
    "file": "Azure::Logic::IntegrationAccounts_maps.json",
    "resourceType": "Microsoft.Logic/integrationAccounts/maps",
    "isChild": true,
    "parentType": "Microsoft.Logic/integrationAccounts"
  },
  {
    "file": "Azure::Logz::Monitors_accounts_tagRules.json",
    "resourceType": "Microsoft.Logz/monitors/accounts/tagRules",
    "isChild": true,
    "parentType": "Microsoft.Logz/monitors/accounts"
  },
  {
    "file": "Azure::ApiManagement::Service_products_groups.json",
    "resourceType": "Microsoft.ApiManagement/service/products/groups",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/products"
  },
  {
    "file": "Azure::ContainerService::ManagedClusters_agentPools.json",
    "resourceType": "Microsoft.ContainerService/managedClusters/agentPools",
    "isChild": true,
    "parentType": "Microsoft.ContainerService/managedClusters"
  },
  {
    "file": "Azure::Network::VirtualHubs_hubRouteTables.json",
    "resourceType": "Microsoft.Network/virtualHubs/hubRouteTables",
    "isChild": true,
    "parentType": "Microsoft.Network/virtualHubs"
  },
  {
    "file": "Azure::Maps::Accounts_privateEndpointConnections.json",
    "resourceType": "Microsoft.Maps/accounts/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.Maps/accounts"
  },
  {
    "file": "Azure::Network::DnsForwardingRulesets_forwardingRules.json",
    "resourceType": "Microsoft.Network/dnsForwardingRulesets/forwardingRules",
    "isChild": true,
    "parentType": "Microsoft.Network/dnsForwardingRulesets"
  },
  {
    "file": "Azure::AwsConnector::CloudFormationStacks.json",
    "resourceType": "Microsoft.AwsConnector/cloudFormationStacks",
    "isChild": false
  },
  {
    "file": "Azure::Web::Sites_config.json",
    "resourceType": "Microsoft.Web/sites/config",
    "isChild": true,
    "parentType": "Microsoft.Web/sites"
  },
  {
    "file": "Azure::Security::Assignments.json",
    "resourceType": "Microsoft.Security/assignments",
    "isChild": false
  },
  {
    "file": "Azure::AzureData::SqlServerRegistrations_sqlServers.json",
    "resourceType": "Microsoft.AzureData/sqlServerRegistrations/sqlServers",
    "isChild": true,
    "parentType": "Microsoft.AzureData/sqlServerRegistrations"
  },
  {
    "file": "Azure::App::Builders_builds.json",
    "resourceType": "Microsoft.App/builders/builds",
    "isChild": true,
    "parentType": "Microsoft.App/builders"
  },
  {
    "file": "Azure::Network::VirtualHubs_routingIntent.json",
    "resourceType": "Microsoft.Network/virtualHubs/routingIntent",
    "isChild": true,
    "parentType": "Microsoft.Network/virtualHubs"
  },
  {
    "file": "Azure::Sql::ManagedInstances.json",
    "resourceType": "Microsoft.Sql/managedInstances",
    "isChild": false
  },
  {
    "file": "Azure::CostManagement::Connectors.json",
    "resourceType": "Microsoft.CostManagement/connectors",
    "isChild": false
  },
  {
    "file": "Azure::Network::NetworkWatchers_packetCaptures.json",
    "resourceType": "Microsoft.Network/networkWatchers/packetCaptures",
    "isChild": true,
    "parentType": "Microsoft.Network/networkWatchers"
  },
  {
    "file": "Azure::DevCenter::Projects.json",
    "resourceType": "Microsoft.DevCenter/projects",
    "isChild": false
  },
  {
    "file": "Azure::Network::VpnServerConfigurations.json",
    "resourceType": "Microsoft.Network/vpnServerConfigurations",
    "isChild": false
  },
  {
    "file": "Azure::AwsConnector::EfsMountTargets.json",
    "resourceType": "Microsoft.AwsConnector/efsMountTargets",
    "isChild": false
  },
  {
    "file": "Azure::EventGrid::Namespaces_clients.json",
    "resourceType": "Microsoft.EventGrid/namespaces/clients",
    "isChild": true,
    "parentType": "Microsoft.EventGrid/namespaces"
  },
  {
    "file": "Azure::HybridData::DataManagers_dataServices_jobDefinitions.json",
    "resourceType": "Microsoft.HybridData/dataManagers/dataServices/jobDefinitions",
    "isChild": true,
    "parentType": "Microsoft.HybridData/dataManagers/dataServices"
  },
  {
    "file": "Azure::Migrate::ModernizeProjects_workloadDeployments.json",
    "resourceType": "Microsoft.Migrate/modernizeProjects/workloadDeployments",
    "isChild": true,
    "parentType": "Microsoft.Migrate/modernizeProjects"
  },
  {
    "file": "Azure::ManagedNetworkFabric::NetworkFabrics.json",
    "resourceType": "Microsoft.ManagedNetworkFabric/networkFabrics",
    "isChild": false
  },
  {
    "file": "Azure::Sql::InstancePools.json",
    "resourceType": "Microsoft.Sql/instancePools",
    "isChild": false
  },
  {
    "file": "Azure::Sql::Servers_auditingSettings.json",
    "resourceType": "Microsoft.Sql/servers/auditingSettings",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers"
  },
  {
    "file": "Azure::Network::VirtualRouters.json",
    "resourceType": "Microsoft.Network/virtualRouters",
    "isChild": false
  },
  {
    "file": "Azure::MobilePacketCore::NrfDeployments.json",
    "resourceType": "Microsoft.MobilePacketCore/nrfDeployments",
    "isChild": false
  },
  {
    "file": "Azure::OperationalInsights::Workspaces_savedSearches.json",
    "resourceType": "Microsoft.OperationalInsights/workspaces/savedSearches",
    "isChild": true,
    "parentType": "Microsoft.OperationalInsights/workspaces"
  },
  {
    "file": "Azure::Sql::ManagedInstances_databases_vulnerabilityAssessments.json",
    "resourceType": "Microsoft.Sql/managedInstances/databases/vulnerabilityAssessments",
    "isChild": true,
    "parentType": "Microsoft.Sql/managedInstances/databases"
  },
  {
    "file": "Azure::Synapse::Workspaces_encryptionProtector.json",
    "resourceType": "Microsoft.Synapse/workspaces/encryptionProtector",
    "isChild": true,
    "parentType": "Microsoft.Synapse/workspaces"
  },
  {
    "file": "Azure::MachineLearningServices::CapacityReserverationGroups.json",
    "resourceType": "Microsoft.MachineLearningServices/capacityReserverationGroups",
    "isChild": false
  },
  {
    "file": "Azure::ApiCenter::Services_workspaces_environments.json",
    "resourceType": "Microsoft.ApiCenter/services/workspaces/environments",
    "isChild": true,
    "parentType": "Microsoft.ApiCenter/services/workspaces"
  },
  {
    "file": "Azure::App::ManagedEnvironments_storages.json",
    "resourceType": "Microsoft.App/managedEnvironments/storages",
    "isChild": true,
    "parentType": "Microsoft.App/managedEnvironments"
  },
  {
    "file": "Azure::Sql::Servers_databases_connectionPolicies.json",
    "resourceType": "Microsoft.Sql/servers/databases/connectionPolicies",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers/databases"
  },
  {
    "file": "Azure::DevTestLab::Labs_customimages.json",
    "resourceType": "Microsoft.DevTestLab/labs/customimages",
    "isChild": true,
    "parentType": "Microsoft.DevTestLab/labs"
  },
  {
    "file": "Azure::DesktopVirtualization::HostPools_msixPackages.json",
    "resourceType": "Microsoft.DesktopVirtualization/hostPools/msixPackages",
    "isChild": true,
    "parentType": "Microsoft.DesktopVirtualization/hostPools"
  },
  {
    "file": "Azure::DBforPostgreSQL::FlexibleServers_advancedThreatProtectionSettings.json",
    "resourceType": "Microsoft.DBforPostgreSQL/flexibleServers/advancedThreatProtectionSettings",
    "isChild": true,
    "parentType": "Microsoft.DBforPostgreSQL/flexibleServers"
  },
  {
    "file": "Azure::AwsConnector::Ec2Images.json",
    "resourceType": "Microsoft.AwsConnector/ec2Images",
    "isChild": false
  },
  {
    "file": "Azure::Web::Serverfarms_virtualNetworkConnections_routes.json",
    "resourceType": "Microsoft.Web/serverfarms/virtualNetworkConnections/routes",
    "isChild": true,
    "parentType": "Microsoft.Web/serverfarms/virtualNetworkConnections"
  },
  {
    "file": "Azure::IoTOperationsMQ::Mq_kafkaConnector.json",
    "resourceType": "Microsoft.IoTOperationsMQ/mq/kafkaConnector",
    "isChild": true,
    "parentType": "Microsoft.IoTOperationsMQ/mq"
  },
  {
    "file": "Azure::Network::IpGroups.json",
    "resourceType": "Microsoft.Network/ipGroups",
    "isChild": false
  },
  {
    "file": "Azure::DeviceRegistry::DiscoveredAssets.json",
    "resourceType": "Microsoft.DeviceRegistry/discoveredAssets",
    "isChild": false
  },
  {
    "file": "Azure::Migrate::AssessmentProjects_privateEndpointConnections.json",
    "resourceType": "Microsoft.Migrate/assessmentprojects/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.Migrate/assessmentprojects"
  },
  {
    "file": "Azure::Network::NetworkManagers_securityAdminConfigurations.json",
    "resourceType": "Microsoft.Network/networkManagers/securityAdminConfigurations",
    "isChild": true,
    "parentType": "Microsoft.Network/networkManagers"
  },
  {
    "file": "Azure::Cloudngfw::LocalRulestacks_localRules.json",
    "resourceType": "PaloAltoNetworks.Cloudngfw/localRulestacks/localRules",
    "isChild": true,
    "parentType": "PaloAltoNetworks.Cloudngfw/localRulestacks"
  },
  {
    "file": "Azure::HybridNetwork::NetworkFunctions.json",
    "resourceType": "Microsoft.HybridNetwork/networkFunctions",
    "isChild": false
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_gremlinDatabases_graphs_throughputSettings.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/graphs/throughputSettings",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/graphs"
  },
  {
    "file": "Azure::Network::NetworkManagers_routingConfigurations_ruleCollections_rules.json",
    "resourceType": "Microsoft.Network/networkManagers/routingConfigurations/ruleCollections/rules",
    "isChild": true,
    "parentType": "Microsoft.Network/networkManagers/routingConfigurations/ruleCollections"
  },
  {
    "file": "Azure::Sql::ManagedInstances_databases_transparentDataEncryption.json",
    "resourceType": "Microsoft.Sql/managedInstances/databases/transparentDataEncryption",
    "isChild": true,
    "parentType": "Microsoft.Sql/managedInstances/databases"
  },
  {
    "file": "Azure::M365SecurityAndCompliance::PrivateLinkServicesForM365ComplianceCenter.json",
    "resourceType": "Microsoft.M365SecurityAndCompliance/privateLinkServicesForM365ComplianceCenter",
    "isChild": false
  },
  {
    "file": "Azure::Network::NetworkVirtualAppliances.json",
    "resourceType": "Microsoft.Network/networkVirtualAppliances",
    "isChild": false
  },
  {
    "file": "Azure::MachineLearningServices::Workspaces_connections_deployments.json",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/connections/deployments",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/workspaces/connections"
  },
  {
    "file": "Azure::StorSimple::Managers_extendedInformation.json",
    "resourceType": "Microsoft.StorSimple/managers/extendedInformation",
    "isChild": true,
    "parentType": "Microsoft.StorSimple/managers"
  },
  {
    "file": "Azure::Network::NetworkManagers_networkGroups_staticMembers.json",
    "resourceType": "Microsoft.Network/networkManagers/networkGroups/staticMembers",
    "isChild": true,
    "parentType": "Microsoft.Network/networkManagers/networkGroups"
  },
  {
    "file": "Azure::AwsConnector::SnsTopics.json",
    "resourceType": "Microsoft.AwsConnector/snsTopics",
    "isChild": false
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_cassandraRoleAssignments.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/cassandraRoleAssignments",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts"
  },
  {
    "file": "Azure::Workloads::PhpWorkloads_wordpressInstances.json",
    "resourceType": "Microsoft.Workloads/phpWorkloads/wordpressInstances",
    "isChild": true,
    "parentType": "Microsoft.Workloads/phpWorkloads"
  },
  {
    "file": "Azure::DataFactory::Factories_dataflows.json",
    "resourceType": "Microsoft.DataFactory/factories/dataflows",
    "isChild": true,
    "parentType": "Microsoft.DataFactory/factories"
  },
  {
    "file": "Azure::SecurityAndCompliance::PrivateLinkServicesForO365ManagementActivityAPI_privateEndpointConnections.json",
    "resourceType": "Microsoft.SecurityAndCompliance/privateLinkServicesForO365ManagementActivityAPI/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.SecurityAndCompliance/privateLinkServicesForO365ManagementActivityAPI"
  },
  {
    "file": "Azure::AwsConnector::AccessAnalyzerAnalyzers.json",
    "resourceType": "Microsoft.AwsConnector/accessAnalyzerAnalyzers",
    "isChild": false
  },
  {
    "file": "Azure::Sql::ManagedInstances_databases.json",
    "resourceType": "Microsoft.Sql/managedInstances/databases",
    "isChild": true,
    "parentType": "Microsoft.Sql/managedInstances"
  },
  {
    "file": "Azure::ServiceBus::Namespaces_topics_authorizationRules.json",
    "resourceType": "Microsoft.ServiceBus/namespaces/topics/authorizationRules",
    "isChild": true,
    "parentType": "Microsoft.ServiceBus/namespaces/topics"
  },
  {
    "file": "Azure::Network::NetworkWatchers_connectionMonitors.json",
    "resourceType": "Microsoft.Network/networkWatchers/connectionMonitors",
    "isChild": true,
    "parentType": "Microsoft.Network/networkWatchers"
  },
  {
    "file": "Azure::Workloads::SapVirtualInstances.json",
    "resourceType": "Microsoft.Workloads/sapVirtualInstances",
    "isChild": false
  },
  {
    "file": "Azure::DevHub::Workflows.json",
    "resourceType": "Microsoft.DevHub/workflows",
    "isChild": false
  },
  {
    "file": "Azure::Web::Sites_virtualNetworkConnections.json",
    "resourceType": "Microsoft.Web/sites/virtualNetworkConnections",
    "isChild": true,
    "parentType": "Microsoft.Web/sites"
  },
  {
    "file": "Azure::Authorization::RoleAssignments.json",
    "resourceType": "Microsoft.Authorization/roleAssignments",
    "isChild": false
  },
  {
    "file": "Azure::ContainerService::Fleets_updateRuns.json",
    "resourceType": "Microsoft.ContainerService/fleets/updateRuns",
    "isChild": true,
    "parentType": "Microsoft.ContainerService/fleets"
  },
  {
    "file": "Azure::DataReplication::ReplicationVaults_replicationExtensions.json",
    "resourceType": "Microsoft.DataReplication/replicationVaults/replicationExtensions",
    "isChild": true,
    "parentType": "Microsoft.DataReplication/replicationVaults"
  },
  {
    "file": "Azure::Compute::Disks.json",
    "resourceType": "Microsoft.Compute/disks",
    "isChild": false
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_services.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/services",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts"
  },
  {
    "file": "Azure::ApiManagement::Gateways.json",
    "resourceType": "Microsoft.ApiManagement/gateways",
    "isChild": false
  },
  {
    "file": "Azure::VirtualMachineImages::ImageTemplates.json",
    "resourceType": "Microsoft.VirtualMachineImages/imageTemplates",
    "isChild": false
  },
  {
    "file": "Azure::Network::DnsZones_TXT.json",
    "resourceType": "Microsoft.Network/dnszones/TXT",
    "isChild": true,
    "parentType": "Microsoft.Network/dnszones"
  },
  {
    "file": "Azure::Cache::Redis_privateEndpointConnections.json",
    "resourceType": "Microsoft.Cache/redis/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.Cache/redis"
  },
  {
    "file": "Azure::HanaOnAzure::SapMonitors_providerInstances.json",
    "resourceType": "Microsoft.HanaOnAzure/sapMonitors/providerInstances",
    "isChild": true,
    "parentType": "Microsoft.HanaOnAzure/sapMonitors"
  },
  {
    "file": "Azure::AwsConnector::S3BucketPolicies.json",
    "resourceType": "Microsoft.AwsConnector/s3BucketPolicies",
    "isChild": false
  },
  {
    "file": "Azure::Devices::IotHubs_eventHubEndpoints_ConsumerGroups.json",
    "resourceType": "Microsoft.Devices/IotHubs/eventHubEndpoints/ConsumerGroups",
    "isChild": true,
    "parentType": "Microsoft.Devices/IotHubs/eventHubEndpoints"
  },
  {
    "file": "Azure::OnlineExperimentation::Workspaces_privateEndpointConnections.json",
    "resourceType": "Microsoft.OnlineExperimentation/workspaces/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.OnlineExperimentation/workspaces"
  },
  {
    "file": "Azure::Insights::Workbooks.json",
    "resourceType": "Microsoft.Insights/workbooks",
    "isChild": false
  },
  {
    "file": "Azure::Network::NetworkSecurityPerimeters_profiles.json",
    "resourceType": "Microsoft.Network/networkSecurityPerimeters/profiles",
    "isChild": true,
    "parentType": "Microsoft.Network/networkSecurityPerimeters"
  },
  {
    "file": "Azure::ApiManagement::Service_products_apis.json",
    "resourceType": "Microsoft.ApiManagement/service/products/apis",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/products"
  },
  {
    "file": "Azure::HealthcareApis::Services_privateEndpointConnections.json",
    "resourceType": "Microsoft.HealthcareApis/services/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.HealthcareApis/services"
  },
  {
    "file": "Azure::Network::NetworkManagers_connectivityConfigurations.json",
    "resourceType": "Microsoft.Network/networkManagers/connectivityConfigurations",
    "isChild": true,
    "parentType": "Microsoft.Network/networkManagers"
  },
  {
    "file": "Azure::Sql::Servers_privateEndpointConnections.json",
    "resourceType": "Microsoft.Sql/servers/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers"
  },
  {
    "file": "Azure::Storage::StorageAccounts_tableServices_tables.json",
    "resourceType": "Microsoft.Storage/storageAccounts/tableServices/tables",
    "isChild": true,
    "parentType": "Microsoft.Storage/storageAccounts/tableServices"
  },
  {
    "file": "Azure::Synapse::Workspaces_vulnerabilityAssessments.json",
    "resourceType": "Microsoft.Synapse/workspaces/vulnerabilityAssessments",
    "isChild": true,
    "parentType": "Microsoft.Synapse/workspaces"
  },
  {
    "file": "Azure::Monitor::PipelineGroups.json",
    "resourceType": "Microsoft.Monitor/pipelineGroups",
    "isChild": false
  },
  {
    "file": "Azure::Security::SecurityConnectors_devops_azureDevOpsOrgs.json",
    "resourceType": "Microsoft.Security/securityConnectors/devops/azureDevOpsOrgs",
    "isChild": true,
    "parentType": "Microsoft.Security/securityConnectors/devops"
  },
  {
    "file": "Azure::DBforPostgreSQL::Servers_databases.json",
    "resourceType": "Microsoft.DBforPostgreSQL/servers/databases",
    "isChild": true,
    "parentType": "Microsoft.DBforPostgreSQL/servers"
  },
  {
    "file": "Azure::DBforMySQL::Servers_securityAlertPolicies.json",
    "resourceType": "Microsoft.DBforMySQL/servers/securityAlertPolicies",
    "isChild": true,
    "parentType": "Microsoft.DBforMySQL/servers"
  },
  {
    "file": "Azure::Network::NetworkSecurityPerimeters_links.json",
    "resourceType": "Microsoft.Network/networkSecurityPerimeters/links",
    "isChild": true,
    "parentType": "Microsoft.Network/networkSecurityPerimeters"
  },
  {
    "file": "Azure::ApiManagement::Service_authorizationProviders_authorizations_accessPolicies.json",
    "resourceType": "Microsoft.ApiManagement/service/authorizationProviders/authorizations/accessPolicies",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/authorizationProviders/authorizations"
  },
  {
    "file": "Azure::AzureStackHCI::StorageContainers.json",
    "resourceType": "Microsoft.AzureStackHCI/storagecontainers",
    "isChild": false
  },
  {
    "file": "Azure::Maps::Accounts_creators.json",
    "resourceType": "Microsoft.Maps/accounts/creators",
    "isChild": true,
    "parentType": "Microsoft.Maps/accounts"
  },
  {
    "file": "Azure::ApiManagement::Service_apis_issues.json",
    "resourceType": "Microsoft.ApiManagement/service/apis/issues",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/apis"
  },
  {
    "file": "Azure::IntegrationSpaces::Spaces_applications.json",
    "resourceType": "Microsoft.IntegrationSpaces/spaces/applications",
    "isChild": true,
    "parentType": "Microsoft.IntegrationSpaces/spaces"
  },
  {
    "file": "Azure::AppPlatform::Spring_DevToolPortals.json",
    "resourceType": "Microsoft.AppPlatform/Spring/DevToolPortals",
    "isChild": true,
    "parentType": "Microsoft.AppPlatform/Spring"
  },
  {
    "file": "Azure::Sql::ManagedInstances_distributedAvailabilityGroups.json",
    "resourceType": "Microsoft.Sql/managedInstances/distributedAvailabilityGroups",
    "isChild": true,
    "parentType": "Microsoft.Sql/managedInstances"
  },
  {
    "file": "Azure::AppPlatform::Spring_apiPortals_domains.json",
    "resourceType": "Microsoft.AppPlatform/Spring/apiPortals/domains",
    "isChild": true,
    "parentType": "Microsoft.AppPlatform/Spring/apiPortals"
  },
  {
    "file": "Azure::RecoveryServices::Vaults_backupconfig.json",
    "resourceType": "Microsoft.RecoveryServices/vaults/backupconfig",
    "isChild": true,
    "parentType": "Microsoft.RecoveryServices/vaults"
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_sqlDatabases_throughputSettings.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/throughputSettings",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases"
  },
  {
    "file": "Azure::Security::Automations.json",
    "resourceType": "Microsoft.Security/automations",
    "isChild": false
  },
  {
    "file": "Azure::App::ContainerApps.json",
    "resourceType": "Microsoft.App/containerApps",
    "isChild": false
  },
  {
    "file": "Azure::Network::NetworkManagers_ipamPools_staticCidrs.json",
    "resourceType": "Microsoft.Network/networkManagers/ipamPools/staticCidrs",
    "isChild": true,
    "parentType": "Microsoft.Network/networkManagers/ipamPools"
  },
  {
    "file": "Azure::ContainerService::ContainerServices.json",
    "resourceType": "Microsoft.ContainerService/containerServices",
    "isChild": false
  },
  {
    "file": "Azure::Network::NetworkManagers_verifierWorkspaces_reachabilityAnalysisRuns.json",
    "resourceType": "Microsoft.Network/networkManagers/verifierWorkspaces/reachabilityAnalysisRuns",
    "isChild": true,
    "parentType": "Microsoft.Network/networkManagers/verifierWorkspaces"
  },
  {
    "file": "Azure::M365SecurityAndCompliance::PrivateLinkServicesForM365SecurityCenter.json",
    "resourceType": "Microsoft.M365SecurityAndCompliance/privateLinkServicesForM365SecurityCenter",
    "isChild": false
  },
  {
    "file": "Azure::Easm::Workspaces_labels.json",
    "resourceType": "Microsoft.Easm/workspaces/labels",
    "isChild": true,
    "parentType": "Microsoft.Easm/workspaces"
  },
  {
    "file": "Azure::DatabaseWatcher::Watchers.json",
    "resourceType": "Microsoft.DatabaseWatcher/watchers",
    "isChild": false
  },
  {
    "file": "Azure::ApiManagement::Service_contentTypes.json",
    "resourceType": "Microsoft.ApiManagement/service/contentTypes",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service"
  },
  {
    "file": "Azure::AzureStackHCI::Clusters_arcSettings_extensions.json",
    "resourceType": "Microsoft.AzureStackHCI/clusters/arcSettings/extensions",
    "isChild": true,
    "parentType": "Microsoft.AzureStackHCI/clusters/arcSettings"
  },
  {
    "file": "Azure::Web::Sites_certificates.json",
    "resourceType": "Microsoft.Web/sites/certificates",
    "isChild": true,
    "parentType": "Microsoft.Web/sites"
  },
  {
    "file": "Azure::DeviceRegistry::AssetEndpointProfiles.json",
    "resourceType": "Microsoft.DeviceRegistry/assetEndpointProfiles",
    "isChild": false
  },
  {
    "file": "Azure::DeviceRegistry::Assets.json",
    "resourceType": "Microsoft.DeviceRegistry/assets",
    "isChild": false
  },
  {
    "file": "Azure::AwsConnector::ElasticBeanstalkEnvironments.json",
    "resourceType": "Microsoft.AwsConnector/elasticBeanstalkEnvironments",
    "isChild": false
  },
  {
    "file": "Azure::HybridNetwork::Publishers_artifactStores.json",
    "resourceType": "Microsoft.HybridNetwork/publishers/artifactStores",
    "isChild": true,
    "parentType": "Microsoft.HybridNetwork/publishers"
  },
  {
    "file": "Azure::AzureArcData::DataControllers_activeDirectoryConnectors.json",
    "resourceType": "Microsoft.AzureArcData/dataControllers/activeDirectoryConnectors",
    "isChild": true,
    "parentType": "Microsoft.AzureArcData/dataControllers"
  },
  {
    "file": "Azure::AutonomousDevelopmentPlatform::Accounts_dataPools.json",
    "resourceType": "Microsoft.AutonomousDevelopmentPlatform/accounts/dataPools",
    "isChild": true,
    "parentType": "Microsoft.AutonomousDevelopmentPlatform/accounts"
  },
  {
    "file": "Azure::AwsConnector::IamMFADevices.json",
    "resourceType": "Microsoft.AwsConnector/iamMFADevices",
    "isChild": false
  },
  {
    "file": "Azure::DevCenter::Devcenters_encryptionSets.json",
    "resourceType": "Microsoft.DevCenter/devcenters/encryptionSets",
    "isChild": true,
    "parentType": "Microsoft.DevCenter/devcenters"
  },
  {
    "file": "Azure::Media::VideoAnalyzers_livePipelines.json",
    "resourceType": "Microsoft.Media/videoAnalyzers/livePipelines",
    "isChild": true,
    "parentType": "Microsoft.Media/videoAnalyzers"
  },
  {
    "file": "Azure::AwsConnector::CloudTrailTrails.json",
    "resourceType": "Microsoft.AwsConnector/cloudTrailTrails",
    "isChild": false
  },
  {
    "file": "Azure::TestBase::TestBaseAccounts_credentials.json",
    "resourceType": "Microsoft.TestBase/testBaseAccounts/credentials",
    "isChild": true,
    "parentType": "Microsoft.TestBase/testBaseAccounts"
  },
  {
    "file": "Azure::BotService::BotServices_privateEndpointConnections.json",
    "resourceType": "Microsoft.BotService/botServices/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.BotService/botServices"
  },
  {
    "file": "Azure::Web::StaticSites_builds_config.json",
    "resourceType": "Microsoft.Web/staticSites/builds/config",
    "isChild": true,
    "parentType": "Microsoft.Web/staticSites/builds"
  },
  {
    "file": "Azure::AzureStackHCI::Clusters_securitySettings.json",
    "resourceType": "Microsoft.AzureStackHCI/clusters/securitySettings",
    "isChild": true,
    "parentType": "Microsoft.AzureStackHCI/clusters"
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_sqlDatabases_containers_userDefinedFunctions.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/userDefinedFunctions",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers"
  },
  {
    "file": "Azure::EventGrid::PartnerNamespaces_privateEndpointConnections.json",
    "resourceType": "Microsoft.EventGrid/partnerNamespaces/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.EventGrid/partnerNamespaces"
  },
  {
    "file": "Azure::Sql::Servers_encryptionProtector.json",
    "resourceType": "Microsoft.Sql/servers/encryptionProtector",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers"
  },
  {
    "file": "Azure::ServiceFabric::Clusters_applications.json",
    "resourceType": "Microsoft.ServiceFabric/clusters/applications",
    "isChild": true,
    "parentType": "Microsoft.ServiceFabric/clusters"
  },
  {
    "file": "Azure::PowerPlatform::Accounts.json",
    "resourceType": "Microsoft.PowerPlatform/accounts",
    "isChild": false
  },
  {
    "file": "Azure::ApiManagement::Service_products.json",
    "resourceType": "Microsoft.ApiManagement/service/products",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service"
  },
  {
    "file": "Azure::DevCenter::Projects_environmentTypes.json",
    "resourceType": "Microsoft.DevCenter/projects/environmentTypes",
    "isChild": true,
    "parentType": "Microsoft.DevCenter/projects"
  },
  {
    "file": "Azure::EventGrid::Namespaces_caCertificates.json",
    "resourceType": "Microsoft.EventGrid/namespaces/caCertificates",
    "isChild": true,
    "parentType": "Microsoft.EventGrid/namespaces"
  },
  {
    "file": "Azure::ObservabilityEval::Organizations.json",
    "resourceType": "ArizeAi.ObservabilityEval/organizations",
    "isChild": false
  },
  {
    "file": "Azure::OpenEnergyPlatform::EnergyServices.json",
    "resourceType": "Microsoft.OpenEnergyPlatform/energyServices",
    "isChild": false
  },
  {
    "file": "Azure::Contoso::Employees.json",
    "resourceType": "Microsoft.Contoso/employees",
    "isChild": false
  },
  {
    "file": "Azure::Sql::Servers_databases_schemas_tables_columns_sensitivityLabels.json",
    "resourceType": "Microsoft.Sql/servers/databases/schemas/tables/columns/sensitivityLabels",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers/databases/schemas/tables/columns"
  },
  {
    "file": "Azure::Cdn::Profiles_endpoints_originGroups.json",
    "resourceType": "Microsoft.Cdn/profiles/endpoints/originGroups",
    "isChild": true,
    "parentType": "Microsoft.Cdn/profiles/endpoints"
  },
  {
    "file": "Azure::Sql::Servers_advancedThreatProtectionSettings.json",
    "resourceType": "Microsoft.Sql/servers/advancedThreatProtectionSettings",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers"
  },
  {
    "file": "Azure::ServiceBus::Namespaces_queues_authorizationRules.json",
    "resourceType": "Microsoft.ServiceBus/namespaces/queues/authorizationRules",
    "isChild": true,
    "parentType": "Microsoft.ServiceBus/namespaces/queues"
  },
  {
    "file": "Azure::IntegrationSpaces::Spaces_applications_resources.json",
    "resourceType": "Microsoft.IntegrationSpaces/spaces/applications/resources",
    "isChild": true,
    "parentType": "Microsoft.IntegrationSpaces/spaces/applications"
  },
  {
    "file": "Azure::Synapse::Workspaces_sqlPools_dataMaskingPolicies.json",
    "resourceType": "Microsoft.Synapse/workspaces/sqlPools/dataMaskingPolicies",
    "isChild": true,
    "parentType": "Microsoft.Synapse/workspaces/sqlPools"
  },
  {
    "file": "Azure::DBforPostgreSQL::Servers.json",
    "resourceType": "Microsoft.DBforPostgreSQL/servers",
    "isChild": false
  },
  {
    "file": "Azure::EventGrid::PartnerTopics_eventSubscriptions.json",
    "resourceType": "Microsoft.EventGrid/partnerTopics/eventSubscriptions",
    "isChild": true,
    "parentType": "Microsoft.EventGrid/partnerTopics"
  },
  {
    "file": "Azure::Network::NetworkExperimentProfiles.json",
    "resourceType": "Microsoft.Network/NetworkExperimentProfiles",
    "isChild": false
  },
  {
    "file": "Azure::Web::Sites_instances_extensions.json",
    "resourceType": "Microsoft.Web/sites/instances/extensions",
    "isChild": true,
    "parentType": "Microsoft.Web/sites/instances"
  },
  {
    "file": "Azure::SecurityAndCompliance::PrivateLinkServicesForEDMUpload.json",
    "resourceType": "Microsoft.SecurityAndCompliance/privateLinkServicesForEDMUpload",
    "isChild": false
  },
  {
    "file": "Azure::AwsConnector::CloudFormationStackSets.json",
    "resourceType": "Microsoft.AwsConnector/cloudFormationStackSets",
    "isChild": false
  },
  {
    "file": "Azure::ManagedNetworkFabric::NetworkRacks.json",
    "resourceType": "Microsoft.ManagedNetworkFabric/networkRacks",
    "isChild": false
  },
  {
    "file": "Azure::ContainerService::ManagedClusters_agentPools_machines.json",
    "resourceType": "Microsoft.ContainerService/managedClusters/agentPools/machines",
    "isChild": true,
    "parentType": "Microsoft.ContainerService/managedClusters/agentPools"
  },
  {
    "file": "Azure::AwsConnector::RdsExportTasks.json",
    "resourceType": "Microsoft.AwsConnector/rdsExportTasks",
    "isChild": false
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_sqlDatabases_containers_throughputSettings.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/throughputSettings",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers"
  },
  {
    "file": "Azure::ManagedNetworkFabric::NetworkTapRules.json",
    "resourceType": "Microsoft.ManagedNetworkFabric/networkTapRules",
    "isChild": false
  },
  {
    "file": "Azure::CostManagement::Reports.json",
    "resourceType": "Microsoft.CostManagement/reports",
    "isChild": false
  },
  {
    "file": "Azure::M365SecurityAndCompliance::PrivateLinkServicesForSCCPowershell.json",
    "resourceType": "Microsoft.M365SecurityAndCompliance/privateLinkServicesForSCCPowershell",
    "isChild": false
  },
  {
    "file": "Azure::Sql::Servers_databases_vulnerabilityAssessments_rules_baselines.json",
    "resourceType": "Microsoft.Sql/servers/databases/vulnerabilityAssessments/rules/baselines",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers/databases/vulnerabilityAssessments/rules"
  },
  {
    "file": "Azure::EventGrid::PartnerNamespaces_channels.json",
    "resourceType": "Microsoft.EventGrid/partnerNamespaces/channels",
    "isChild": true,
    "parentType": "Microsoft.EventGrid/partnerNamespaces"
  },
  {
    "file": "Azure::DeviceUpdate::Accounts_privateEndpointConnectionProxies.json",
    "resourceType": "Microsoft.DeviceUpdate/accounts/privateEndpointConnectionProxies",
    "isChild": true,
    "parentType": "Microsoft.DeviceUpdate/accounts"
  },
  {
    "file": "Azure::WeightsAndBiases::Instances.json",
    "resourceType": "Microsoft.WeightsAndBiases/instances",
    "isChild": false
  },
  {
    "file": "Azure::EventHub::Namespaces_ipfilterrules.json",
    "resourceType": "Microsoft.EventHub/namespaces/ipfilterrules",
    "isChild": true,
    "parentType": "Microsoft.EventHub/namespaces"
  },
  {
    "file": "Azure::Network::FirewallPolicies_firewallPolicyDrafts.json",
    "resourceType": "Microsoft.Network/firewallPolicies/firewallPolicyDrafts",
    "isChild": true,
    "parentType": "Microsoft.Network/firewallPolicies"
  },
  {
    "file": "Azure::CognitiveServices::CommitmentPlans.json",
    "resourceType": "Microsoft.CognitiveServices/commitmentPlans",
    "isChild": false
  },
  {
    "file": "Azure::DevHub::IacProfiles.json",
    "resourceType": "Microsoft.DevHub/iacProfiles",
    "isChild": false
  },
  {
    "file": "Azure::ConnectedCache::CacheNodes.json",
    "resourceType": "Microsoft.ConnectedCache/cacheNodes",
    "isChild": false
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_cassandraKeyspaces.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts"
  },
  {
    "file": "Azure::Relay::Namespaces.json",
    "resourceType": "Microsoft.Relay/namespaces",
    "isChild": false
  },
  {
    "file": "Azure::AzureStackHCI::Clusters_updateSummaries.json",
    "resourceType": "Microsoft.AzureStackHCI/clusters/updateSummaries",
    "isChild": true,
    "parentType": "Microsoft.AzureStackHCI/clusters"
  },
  {
    "file": "Azure::AppPlatform::Spring_containerRegistries.json",
    "resourceType": "Microsoft.AppPlatform/Spring/containerRegistries",
    "isChild": true,
    "parentType": "Microsoft.AppPlatform/Spring"
  },
  {
    "file": "Azure::HybridNetwork::Devices.json",
    "resourceType": "Microsoft.HybridNetwork/devices",
    "isChild": false
  },
  {
    "file": "Azure::NotificationHubs::Namespaces_authorizationRules.json",
    "resourceType": "Microsoft.NotificationHubs/namespaces/AuthorizationRules",
    "isChild": true,
    "parentType": "Microsoft.NotificationHubs/namespaces"
  },
  {
    "file": "Azure::Synapse::Workspaces_kustoPools_databases_dataConnections.json",
    "resourceType": "Microsoft.Synapse/workspaces/kustoPools/databases/dataConnections",
    "isChild": true,
    "parentType": "Microsoft.Synapse/workspaces/kustoPools/databases"
  },
  {
    "file": "Azure::DeviceUpdate::Accounts_instances.json",
    "resourceType": "Microsoft.DeviceUpdate/accounts/instances",
    "isChild": true,
    "parentType": "Microsoft.DeviceUpdate/accounts"
  },
  {
    "file": "Azure::SecurityAndCompliance::PrivateLinkServicesForSCCPowershell.json",
    "resourceType": "Microsoft.SecurityAndCompliance/privateLinkServicesForSCCPowershell",
    "isChild": false
  },
  {
    "file": "Azure::Solutions::ApplianceDefinitions.json",
    "resourceType": "Microsoft.Solutions/applianceDefinitions",
    "isChild": false
  },
  {
    "file": "Azure::AwsConnector::ElasticBeanstalkApplications.json",
    "resourceType": "Microsoft.AwsConnector/elasticBeanstalkApplications",
    "isChild": false
  },
  {
    "file": "Azure::Migrate::AssessmentProjects_groups_avsAssessments.json",
    "resourceType": "Microsoft.Migrate/assessmentProjects/groups/avsAssessments",
    "isChild": true,
    "parentType": "Microsoft.Migrate/assessmentProjects/groups"
  },
  {
    "file": "Azure::StorSimple::Managers_devices_backupPolicies.json",
    "resourceType": "Microsoft.StorSimple/managers/devices/backupPolicies",
    "isChild": true,
    "parentType": "Microsoft.StorSimple/managers/devices"
  },
  {
    "file": "Azure::HybridNetwork::Publishers_configurationGroupSchemas.json",
    "resourceType": "Microsoft.HybridNetwork/publishers/configurationGroupSchemas",
    "isChild": true,
    "parentType": "Microsoft.HybridNetwork/publishers"
  },
  {
    "file": "Azure::ManagedNetworkFabric::RoutePolicies.json",
    "resourceType": "Microsoft.ManagedNetworkFabric/routePolicies",
    "isChild": false
  },
  {
    "file": "Azure::Network::DnsResolverPolicies.json",
    "resourceType": "Microsoft.Network/dnsResolverPolicies",
    "isChild": false
  },
  {
    "file": "Azure::NetApp::NetAppAccounts_volumeGroups.json",
    "resourceType": "Microsoft.NetApp/netAppAccounts/volumeGroups",
    "isChild": true,
    "parentType": "Microsoft.NetApp/netAppAccounts"
  },
  {
    "file": "Azure::Network::DnsZones_dnssecConfigs.json",
    "resourceType": "Microsoft.Network/dnsZones/dnssecConfigs",
    "isChild": true,
    "parentType": "Microsoft.Network/dnsZones"
  },
  {
    "file": "Azure::OffAzure::HyperVSites_clusters.json",
    "resourceType": "Microsoft.OffAzure/hypervSites/clusters",
    "isChild": true,
    "parentType": "Microsoft.OffAzure/hypervSites"
  },
  {
    "file": "Azure::Network::NetworkSettings.json",
    "resourceType": "GitHub.Network/networkSettings",
    "isChild": false
  },
  {
    "file": "Azure::ManagedNetworkFabric::IpCommunities.json",
    "resourceType": "Microsoft.ManagedNetworkFabric/ipCommunities",
    "isChild": false
  },
  {
    "file": "Azure::AwsConnector::Ec2Snapshots.json",
    "resourceType": "Microsoft.AwsConnector/ec2Snapshots",
    "isChild": false
  },
  {
    "file": "Azure::AzureDataTransfer::Pipelines.json",
    "resourceType": "Microsoft.AzureDataTransfer/pipelines",
    "isChild": false
  },
  {
    "file": "Azure::DevTestLab::Labs_users_secrets.json",
    "resourceType": "Microsoft.DevTestLab/labs/users/secrets",
    "isChild": true,
    "parentType": "Microsoft.DevTestLab/labs/users"
  },
  {
    "file": "Azure::Storage::StorageAccounts_fileServices.json",
    "resourceType": "Microsoft.Storage/storageAccounts/fileServices",
    "isChild": true,
    "parentType": "Microsoft.Storage/storageAccounts"
  },
  {
    "file": "Azure::ServiceLinker::Locations_connectors.json",
    "resourceType": "Microsoft.ServiceLinker/locations/connectors",
    "isChild": true,
    "parentType": "Microsoft.ServiceLinker/locations"
  },
  {
    "file": "Azure::NGINXPLUS::NginxDeployments.json",
    "resourceType": "Nginx.NginxPlus/nginxDeployments",
    "isChild": false
  },
  {
    "file": "Azure::Insights::GuestDiagnosticSettings.json",
    "resourceType": "microsoft.insights/guestDiagnosticSettings",
    "isChild": false
  },
  {
    "file": "Azure::Cache::Redis_patchSchedules.json",
    "resourceType": "Microsoft.Cache/Redis/patchSchedules",
    "isChild": true,
    "parentType": "Microsoft.Cache/Redis"
  },
  {
    "file": "Azure::Network::DnsZones_A.json",
    "resourceType": "Microsoft.Network/dnszones/A",
    "isChild": true,
    "parentType": "Microsoft.Network/dnszones"
  },
  {
    "file": "Azure::RecommendationsService::Accounts_modeling.json",
    "resourceType": "Microsoft.RecommendationsService/accounts/modeling",
    "isChild": true,
    "parentType": "Microsoft.RecommendationsService/accounts"
  },
  {
    "file": "Azure::Web::Sites_extensions.json",
    "resourceType": "Microsoft.Web/sites/extensions",
    "isChild": true,
    "parentType": "Microsoft.Web/sites"
  },
  {
    "file": "Azure::AppPlatform::Spring_certificates.json",
    "resourceType": "Microsoft.AppPlatform/Spring/certificates",
    "isChild": true,
    "parentType": "Microsoft.AppPlatform/Spring"
  },
  {
    "file": "Azure::Network::DnsResolvers.json",
    "resourceType": "Microsoft.Network/dnsResolvers",
    "isChild": false
  },
  {
    "file": "Azure::ApiManagement::Service_certificates.json",
    "resourceType": "Microsoft.ApiManagement/service/certificates",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service"
  },
  {
    "file": "Azure::HealthBot::HealthBots.json",
    "resourceType": "Microsoft.HealthBot/healthBots",
    "isChild": false
  },
  {
    "file": "Azure::DBforPostgreSQL::Servers_firewallRules.json",
    "resourceType": "Microsoft.DBforPostgreSQL/servers/firewallRules",
    "isChild": true,
    "parentType": "Microsoft.DBforPostgreSQL/servers"
  },
  {
    "file": "Azure::NetworkAnalytics::DataProducts.json",
    "resourceType": "Microsoft.NetworkAnalytics/dataProducts",
    "isChild": false
  },
  {
    "file": "Azure::AVS::PrivateClouds_workloadNetworks_dhcpConfigurations.json",
    "resourceType": "Microsoft.AVS/privateClouds/workloadNetworks/dhcpConfigurations",
    "isChild": true,
    "parentType": "Microsoft.AVS/privateClouds/workloadNetworks"
  },
  {
    "file": "Azure::WindowsIoT::DeviceServices.json",
    "resourceType": "Microsoft.WindowsIoT/deviceServices",
    "isChild": false
  },
  {
    "file": "Azure::Compute::VirtualMachineScaleSets_extensions.json",
    "resourceType": "Microsoft.Compute/virtualMachineScaleSets/extensions",
    "isChild": true,
    "parentType": "Microsoft.Compute/virtualMachineScaleSets"
  },
  {
    "file": "Azure::ContainerRegistry::Registries_buildTasks_steps.json",
    "resourceType": "Microsoft.ContainerRegistry/registries/buildTasks/steps",
    "isChild": true,
    "parentType": "Microsoft.ContainerRegistry/registries/buildTasks"
  },
  {
    "file": "Azure::Cdn::Profiles_endpoints_origins.json",
    "resourceType": "Microsoft.Cdn/profiles/endpoints/origins",
    "isChild": true,
    "parentType": "Microsoft.Cdn/profiles/endpoints"
  },
  {
    "file": "Azure::DatabaseFleetManager::Fleets_fleetspaces.json",
    "resourceType": "Microsoft.DatabaseFleetManager/fleets/fleetspaces",
    "isChild": true,
    "parentType": "Microsoft.DatabaseFleetManager/fleets"
  },
  {
    "file": "Azure::Resources::TemplateSpecs_versions.json",
    "resourceType": "Microsoft.Resources/templateSpecs/versions",
    "isChild": true,
    "parentType": "Microsoft.Resources/templateSpecs"
  },
  {
    "file": "Azure::ApiManagement::Service_users.json",
    "resourceType": "Microsoft.ApiManagement/service/users",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service"
  },
  {
    "file": "Azure::NGINXPLUS::NginxDeployments_configurations.json",
    "resourceType": "Nginx.NginxPlus/nginxDeployments/configurations",
    "isChild": true,
    "parentType": "Nginx.NginxPlus/nginxDeployments"
  },
  {
    "file": "Azure::AgFoodPlatform::FarmBeats_solutions.json",
    "resourceType": "Microsoft.AgFoodPlatform/farmBeats/solutions",
    "isChild": true,
    "parentType": "Microsoft.AgFoodPlatform/farmBeats"
  },
  {
    "file": "Azure::Synapse::Workspaces.json",
    "resourceType": "Microsoft.Synapse/workspaces",
    "isChild": false
  },
  {
    "file": "Azure::Compute::VirtualMachines.json",
    "resourceType": "Microsoft.Compute/virtualMachines",
    "isChild": false
  },
  {
    "file": "Azure::AppConfiguration::ConfigurationStores_keyValues.json",
    "resourceType": "Microsoft.AppConfiguration/configurationStores/keyValues",
    "isChild": true,
    "parentType": "Microsoft.AppConfiguration/configurationStores"
  },
  {
    "file": "Azure::DocumentDB::MongoClusters_users.json",
    "resourceType": "Microsoft.DocumentDB/mongoClusters/users",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/mongoClusters"
  },
  {
    "file": "Azure::Kusto::Clusters_databases.json",
    "resourceType": "Microsoft.Kusto/clusters/databases",
    "isChild": true,
    "parentType": "Microsoft.Kusto/clusters"
  },
  {
    "file": "Azure::SignalRService::SignalR_customCertificates.json",
    "resourceType": "Microsoft.SignalRService/signalR/customCertificates",
    "isChild": true,
    "parentType": "Microsoft.SignalRService/signalR"
  },
  {
    "file": "Azure::Solutions::Applications.json",
    "resourceType": "Microsoft.Solutions/applications",
    "isChild": false
  },
  {
    "file": "Azure::Web::Sites_hostNameBindings.json",
    "resourceType": "Microsoft.Web/sites/hostNameBindings",
    "isChild": true,
    "parentType": "Microsoft.Web/sites"
  },
  {
    "file": "Azure::VerifiedId::Authorities.json",
    "resourceType": "Microsoft.VerifiedId/authorities",
    "isChild": false
  },
  {
    "file": "Azure::Kusto::Clusters_attachedDatabaseConfigurations.json",
    "resourceType": "Microsoft.Kusto/clusters/attachedDatabaseConfigurations",
    "isChild": true,
    "parentType": "Microsoft.Kusto/clusters"
  },
  {
    "file": "Azure::CloudHealth::Healthmodels_discoveryrules.json",
    "resourceType": "Microsoft.CloudHealth/healthmodels/discoveryrules",
    "isChild": true,
    "parentType": "Microsoft.CloudHealth/healthmodels"
  },
  {
    "file": "Azure::Network::P2svpnGateways.json",
    "resourceType": "Microsoft.Network/p2svpnGateways",
    "isChild": false
  },
  {
    "file": "Azure::StorSimple::Managers.json",
    "resourceType": "Microsoft.StorSimple/managers",
    "isChild": false
  },
  {
    "file": "Azure::DigitalTwins::DigitalTwinsInstances_endpoints.json",
    "resourceType": "Microsoft.DigitalTwins/digitalTwinsInstances/endpoints",
    "isChild": true,
    "parentType": "Microsoft.DigitalTwins/digitalTwinsInstances"
  },
  {
    "file": "Azure::Synapse::Workspaces_administrators.json",
    "resourceType": "Microsoft.Synapse/workspaces/administrators",
    "isChild": true,
    "parentType": "Microsoft.Synapse/workspaces"
  },
  {
    "file": "Azure::DevTestLab::Labs_costs.json",
    "resourceType": "Microsoft.DevTestLab/labs/costs",
    "isChild": true,
    "parentType": "Microsoft.DevTestLab/labs"
  },
  {
    "file": "Azure::OffAzure::MasterSites_webAppSites_discoverySiteDataSources.json",
    "resourceType": "Microsoft.OffAzure/masterSites/webAppSites/discoverySiteDataSources",
    "isChild": true,
    "parentType": "Microsoft.OffAzure/masterSites/webAppSites"
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_privateEndpointConnections.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts"
  },
  {
    "file": "Azure::Compute::HostGroups_hosts.json",
    "resourceType": "Microsoft.Compute/hostGroups/hosts",
    "isChild": true,
    "parentType": "Microsoft.Compute/hostGroups"
  },
  {
    "file": "Azure::Web::Sites_slots_instances_deployments.json",
    "resourceType": "Microsoft.Web/sites/slots/instances/deployments",
    "isChild": true,
    "parentType": "Microsoft.Web/sites/slots/instances"
  },
  {
    "file": "Azure::ConnectedVMwarevSphere::Vcenters_inventoryItems.json",
    "resourceType": "Microsoft.ConnectedVMwarevSphere/vcenters/inventoryItems",
    "isChild": true,
    "parentType": "Microsoft.ConnectedVMwarevSphere/vcenters"
  },
  {
    "file": "Azure::Logic::IntegrationAccounts_certificates.json",
    "resourceType": "Microsoft.Logic/integrationAccounts/certificates",
    "isChild": true,
    "parentType": "Microsoft.Logic/integrationAccounts"
  },
  {
    "file": "Azure::ContainerService::Snapshots.json",
    "resourceType": "Microsoft.ContainerService/snapshots",
    "isChild": false
  },
  {
    "file": "Azure::Sql::Servers_databases_ledgerDigestUploads.json",
    "resourceType": "Microsoft.Sql/servers/databases/ledgerDigestUploads",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers/databases"
  },
  {
    "file": "Azure::DBforMariaDB::Servers_privateEndpointConnections.json",
    "resourceType": "Microsoft.DBforMariaDB/servers/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.DBforMariaDB/servers"
  },
  {
    "file": "Azure::ManagedNetworkFabric::NetworkFabrics_networkToNetworkInterconnects.json",
    "resourceType": "Microsoft.ManagedNetworkFabric/networkFabrics/networkToNetworkInterconnects",
    "isChild": true,
    "parentType": "Microsoft.ManagedNetworkFabric/networkFabrics"
  },
  {
    "file": "Azure::DevTestLab::Schedules.json",
    "resourceType": "Microsoft.DevTestLab/schedules",
    "isChild": false
  },
  {
    "file": "Azure::Web::Sites_slots_premieraddons.json",
    "resourceType": "Microsoft.Web/sites/slots/premieraddons",
    "isChild": true,
    "parentType": "Microsoft.Web/sites/slots"
  },
  {
    "file": "Azure::AwsConnector::NetworkFirewallFirewalls.json",
    "resourceType": "Microsoft.AwsConnector/networkFirewallFirewalls",
    "isChild": false
  },
  {
    "file": "Azure::Insights::Components_myanalyticsItems.json",
    "resourceType": "microsoft.insights/components/myanalyticsItems",
    "isChild": true,
    "parentType": "microsoft.insights/components"
  },
  {
    "file": "Azure::ApiManagement::Service_backends.json",
    "resourceType": "Microsoft.ApiManagement/service/backends",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service"
  },
  {
    "file": "Azure::OffAzure::HyperVSites_hosts.json",
    "resourceType": "Microsoft.OffAzure/hypervSites/hosts",
    "isChild": true,
    "parentType": "Microsoft.OffAzure/hypervSites"
  },
  {
    "file": "Azure::Network::DdosCustomPolicies.json",
    "resourceType": "Microsoft.Network/ddosCustomPolicies",
    "isChild": false
  },
  {
    "file": "Azure::Cache::Redis_linkedServers.json",
    "resourceType": "Microsoft.Cache/Redis/linkedServers",
    "isChild": true,
    "parentType": "Microsoft.Cache/Redis"
  },
  {
    "file": "Azure::Web::Sites_slots.json",
    "resourceType": "Microsoft.Web/sites/slots",
    "isChild": true,
    "parentType": "Microsoft.Web/sites"
  },
  {
    "file": "Azure::Web::StaticSites_customDomains.json",
    "resourceType": "Microsoft.Web/staticSites/customDomains",
    "isChild": true,
    "parentType": "Microsoft.Web/staticSites"
  },
  {
    "file": "Azure::DataBoxEdge::DataBoxEdgeDevices_roles.json",
    "resourceType": "Microsoft.DataBoxEdge/dataBoxEdgeDevices/roles",
    "isChild": true,
    "parentType": "Microsoft.DataBoxEdge/dataBoxEdgeDevices"
  },
  {
    "file": "Azure::AppPlatform::Spring_buildServices_builders.json",
    "resourceType": "Microsoft.AppPlatform/Spring/buildServices/builders",
    "isChild": true,
    "parentType": "Microsoft.AppPlatform/Spring/buildServices"
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_apis_databases_graphs_settings.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/apis/databases/graphs/settings",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts/apis/databases/graphs"
  },
  {
    "file": "Azure::Sql::Servers_communicationLinks.json",
    "resourceType": "Microsoft.Sql/servers/communicationLinks",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers"
  },
  {
    "file": "Azure::HybridCompute::PrivateLinkScopes_privateEndpointConnections.json",
    "resourceType": "Microsoft.HybridCompute/privateLinkScopes/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.HybridCompute/privateLinkScopes"
  },
  {
    "file": "Azure::Synapse::Workspaces_keys.json",
    "resourceType": "Microsoft.Synapse/workspaces/keys",
    "isChild": true,
    "parentType": "Microsoft.Synapse/workspaces"
  },
  {
    "file": "Azure::Compute::RestorePointCollections.json",
    "resourceType": "Microsoft.Compute/restorePointCollections",
    "isChild": false
  },
  {
    "file": "Azure::AwsConnector::IamAccessKeyLastUseds.json",
    "resourceType": "Microsoft.AwsConnector/iamAccessKeyLastUseds",
    "isChild": false
  },
  {
    "file": "Azure::AwsConnector::S3AccessPoints.json",
    "resourceType": "Microsoft.AwsConnector/s3AccessPoints",
    "isChild": false
  },
  {
    "file": "Azure::VMwareVirtustream::PrivateClouds.json",
    "resourceType": "Microsoft.VMwareVirtustream/privateClouds",
    "isChild": false
  },
  {
    "file": "Azure::Web::Certificates.json",
    "resourceType": "Microsoft.Web/certificates",
    "isChild": false
  },
  {
    "file": "Azure::MachineLearningServices::Workspaces_featuresets.json",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/featuresets",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/workspaces"
  },
  {
    "file": "Azure::HealthcareApis::Workspaces_dicomservices.json",
    "resourceType": "Microsoft.HealthcareApis/workspaces/dicomservices",
    "isChild": true,
    "parentType": "Microsoft.HealthcareApis/workspaces"
  },
  {
    "file": "Azure::HybridCompute::PrivateLinkScopes_scopedResources.json",
    "resourceType": "Microsoft.HybridCompute/privateLinkScopes/scopedResources",
    "isChild": true,
    "parentType": "Microsoft.HybridCompute/privateLinkScopes"
  },
  {
    "file": "Azure::AAD::DomainServices.json",
    "resourceType": "Microsoft.AAD/domainServices",
    "isChild": false
  },
  {
    "file": "Azure::AwsConnector::DatabaseMigrationServiceReplicationInstances.json",
    "resourceType": "Microsoft.AwsConnector/databaseMigrationServiceReplicationInstances",
    "isChild": false
  },
  {
    "file": "Azure::AzureStackHCI::Clusters_updates_updateRuns.json",
    "resourceType": "Microsoft.AzureStackHCI/clusters/updates/updateRuns",
    "isChild": true,
    "parentType": "Microsoft.AzureStackHCI/clusters/updates"
  },
  {
    "file": "Azure::MachineLearningServices::Registries_models.json",
    "resourceType": "Microsoft.MachineLearningServices/registries/models",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/registries"
  },
  {
    "file": "Azure::ScVmm::Clouds.json",
    "resourceType": "Microsoft.ScVmm/clouds",
    "isChild": false
  },
  {
    "file": "Azure::SignalRService::WebPubSub_replicas_sharedPrivateLinkResources.json",
    "resourceType": "Microsoft.SignalRService/webPubSub/replicas/sharedPrivateLinkResources",
    "isChild": true,
    "parentType": "Microsoft.SignalRService/webPubSub/replicas"
  },
  {
    "file": "Azure::AwsConnector::Ec2Subnets.json",
    "resourceType": "Microsoft.AwsConnector/ec2Subnets",
    "isChild": false
  },
  {
    "file": "Azure::AzureArcData::SqlManagedInstances_failoverGroups.json",
    "resourceType": "Microsoft.AzureArcData/sqlManagedInstances/failoverGroups",
    "isChild": true,
    "parentType": "Microsoft.AzureArcData/sqlManagedInstances"
  },
  {
    "file": "Azure::AppPlatform::Spring_gateways.json",
    "resourceType": "Microsoft.AppPlatform/Spring/gateways",
    "isChild": true,
    "parentType": "Microsoft.AppPlatform/Spring"
  },
  {
    "file": "Azure::Communication::EmailServices_domains_senderUsernames.json",
    "resourceType": "Microsoft.Communication/emailServices/domains/senderUsernames",
    "isChild": true,
    "parentType": "Microsoft.Communication/emailServices/domains"
  },
  {
    "file": "Azure::Insights::MetricAlerts.json",
    "resourceType": "Microsoft.Insights/metricAlerts",
    "isChild": false
  },
  {
    "file": "Azure::SignalRService::WebPubSub_hubs.json",
    "resourceType": "Microsoft.SignalRService/webPubSub/hubs",
    "isChild": true,
    "parentType": "Microsoft.SignalRService/webPubSub"
  },
  {
    "file": "Azure::Migrate::MigrateProjects.json",
    "resourceType": "Microsoft.Migrate/migrateProjects",
    "isChild": false
  },
  {
    "file": "Azure::ManagedNetworkFabric::InternetGatewayRules.json",
    "resourceType": "Microsoft.ManagedNetworkFabric/internetGatewayRules",
    "isChild": false
  },
  {
    "file": "Azure::DataBoxEdge::DataBoxEdgeDevices_bandwidthSchedules.json",
    "resourceType": "Microsoft.DataBoxEdge/dataBoxEdgeDevices/bandwidthSchedules",
    "isChild": true,
    "parentType": "Microsoft.DataBoxEdge/dataBoxEdgeDevices"
  },
  {
    "file": "Azure::Web::Sites_slots_networkConfig.json",
    "resourceType": "Microsoft.Web/sites/slots/networkConfig",
    "isChild": true,
    "parentType": "Microsoft.Web/sites/slots"
  },
  {
    "file": "Azure::HybridCompute::PrivateLinkScopes.json",
    "resourceType": "Microsoft.HybridCompute/privateLinkScopes",
    "isChild": false
  },
  {
    "file": "Azure::DocumentDB::Fleets.json",
    "resourceType": "Microsoft.DocumentDB/fleets",
    "isChild": false
  },
  {
    "file": "Azure::AzureData::SqlServerRegistrations.json",
    "resourceType": "Microsoft.AzureData/sqlServerRegistrations",
    "isChild": false
  },
  {
    "file": "Azure::MachineLearningServices::Workspaces_batchEndpoints_deployments.json",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/batchEndpoints/deployments",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/workspaces/batchEndpoints"
  },
  {
    "file": "Azure::DataLakeStore::Accounts_trustedIdProviders.json",
    "resourceType": "Microsoft.DataLakeStore/accounts/trustedIdProviders",
    "isChild": true,
    "parentType": "Microsoft.DataLakeStore/accounts"
  },
  {
    "file": "Azure::Web::ConnectionGateways.json",
    "resourceType": "Microsoft.Web/connectionGateways",
    "isChild": false
  },
  {
    "file": "Azure::DurableTask::Schedulers.json",
    "resourceType": "Microsoft.DurableTask/schedulers",
    "isChild": false
  },
  {
    "file": "Azure::NetApp::NetAppAccounts_backupVaults_backups.json",
    "resourceType": "Microsoft.NetApp/netAppAccounts/backupVaults/backups",
    "isChild": true,
    "parentType": "Microsoft.NetApp/netAppAccounts/backupVaults"
  },
  {
    "file": "Azure::DigitalTwins::DigitalTwinsInstances_privateEndpointConnections.json",
    "resourceType": "Microsoft.DigitalTwins/digitalTwinsInstances/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.DigitalTwins/digitalTwinsInstances"
  },
  {
    "file": "Azure::ContainerService::ManagedClusters_maintenanceConfigurations.json",
    "resourceType": "Microsoft.ContainerService/managedClusters/maintenanceConfigurations",
    "isChild": true,
    "parentType": "Microsoft.ContainerService/managedClusters"
  },
  {
    "file": "Azure::Elastic::Monitors_tagRules.json",
    "resourceType": "Microsoft.Elastic/monitors/tagRules",
    "isChild": true,
    "parentType": "Microsoft.Elastic/monitors"
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_tableRoleAssignments.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/tableRoleAssignments",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts"
  },
  {
    "file": "Azure::HDInsight::Clusters_applications.json",
    "resourceType": "Microsoft.HDInsight/clusters/applications",
    "isChild": true,
    "parentType": "Microsoft.HDInsight/clusters"
  },
  {
    "file": "Azure::Sql::Servers_failoverGroups.json",
    "resourceType": "Microsoft.Sql/servers/failoverGroups",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers"
  },
  {
    "file": "Azure::ManagedNetwork::ManagedNetworks.json",
    "resourceType": "Microsoft.ManagedNetwork/managedNetworks",
    "isChild": false
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_apis_databases_containers_settings.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/apis/databases/containers/settings",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts/apis/databases/containers"
  },
  {
    "file": "Azure::ServiceLinker::Locations_dryruns.json",
    "resourceType": "Microsoft.ServiceLinker/locations/dryruns",
    "isChild": true,
    "parentType": "Microsoft.ServiceLinker/locations"
  },
  {
    "file": "Azure::Web::Sites_slots_instances_extensions.json",
    "resourceType": "Microsoft.Web/sites/slots/instances/extensions",
    "isChild": true,
    "parentType": "Microsoft.Web/sites/slots/instances"
  },
  {
    "file": "Azure::AzureArcData::SqlServerLicenses.json",
    "resourceType": "Microsoft.AzureArcData/sqlServerLicenses",
    "isChild": false
  },
  {
    "file": "Azure::ExtendedLocation::CustomLocations.json",
    "resourceType": "Microsoft.ExtendedLocation/customLocations",
    "isChild": false
  },
  {
    "file": "Azure::ContainerStorage::Pools.json",
    "resourceType": "Microsoft.ContainerStorage/pools",
    "isChild": false
  },
  {
    "file": "Azure::Network::PrivateLinkServices_privateEndpointConnections.json",
    "resourceType": "Microsoft.Network/privateLinkServices/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.Network/privateLinkServices"
  },
  {
    "file": "Azure::SignalRService::WebPubSub_customDomains.json",
    "resourceType": "Microsoft.SignalRService/webPubSub/customDomains",
    "isChild": true,
    "parentType": "Microsoft.SignalRService/webPubSub"
  },
  {
    "file": "Azure::App::ContainerApps_authConfigs.json",
    "resourceType": "Microsoft.App/containerApps/authConfigs",
    "isChild": true,
    "parentType": "Microsoft.App/containerApps"
  },
  {
    "file": "Azure::Sql::Servers_extendedAuditingSettings.json",
    "resourceType": "Microsoft.Sql/servers/extendedAuditingSettings",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers"
  },
  {
    "file": "Azure::Insights::Components.json",
    "resourceType": "Microsoft.Insights/components",
    "isChild": false
  },
  {
    "file": "Azure::LabServices::LabPlans.json",
    "resourceType": "Microsoft.LabServices/labPlans",
    "isChild": false
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_sqlDatabases_containers_triggers.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/triggers",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers"
  },
  {
    "file": "Azure::AwsConnector::Ec2Addresses.json",
    "resourceType": "Microsoft.AwsConnector/ec2Addresses",
    "isChild": false
  },
  {
    "file": "Azure::Kusto::Clusters.json",
    "resourceType": "Microsoft.Kusto/clusters",
    "isChild": false
  },
  {
    "file": "Azure::Media::VideoAnalyzers_videos.json",
    "resourceType": "Microsoft.Media/videoAnalyzers/videos",
    "isChild": true,
    "parentType": "Microsoft.Media/videoAnalyzers"
  },
  {
    "file": "Azure::Dashboard::Grafana.json",
    "resourceType": "Microsoft.Dashboard/grafana",
    "isChild": false
  },
  {
    "file": "Azure::DBforMySQL::Servers_databases.json",
    "resourceType": "Microsoft.DBforMySQL/servers/databases",
    "isChild": true,
    "parentType": "Microsoft.DBforMySQL/servers"
  },
  {
    "file": "Azure::Sql::Servers_administrators.json",
    "resourceType": "Microsoft.Sql/servers/administrators",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers"
  },
  {
    "file": "Azure::ContainerRegistry::Registries_agentPools.json",
    "resourceType": "Microsoft.ContainerRegistry/registries/agentPools",
    "isChild": true,
    "parentType": "Microsoft.ContainerRegistry/registries"
  },
  {
    "file": "Azure::ApiManagement::Service_tenant.json",
    "resourceType": "Microsoft.ApiManagement/service/tenant",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service"
  },
  {
    "file": "Azure::Web::Sites_functions_keys.json",
    "resourceType": "Microsoft.Web/sites/functions/keys",
    "isChild": true,
    "parentType": "Microsoft.Web/sites/functions"
  },
  {
    "file": "Azure::DeviceRegistry::DiscoveredAssetEndpointProfiles.json",
    "resourceType": "Microsoft.DeviceRegistry/discoveredAssetEndpointProfiles",
    "isChild": false
  },
  {
    "file": "Azure::AppPlatform::Spring_applicationLiveViews.json",
    "resourceType": "Microsoft.AppPlatform/Spring/applicationLiveViews",
    "isChild": true,
    "parentType": "Microsoft.AppPlatform/Spring"
  },
  {
    "file": "Azure::DeploymentManager::ServiceTopologies_services.json",
    "resourceType": "Microsoft.DeploymentManager/serviceTopologies/services",
    "isChild": true,
    "parentType": "Microsoft.DeploymentManager/serviceTopologies"
  },
  {
    "file": "Azure::Automation::AutomationAccounts_connections.json",
    "resourceType": "Microsoft.Automation/automationAccounts/connections",
    "isChild": true,
    "parentType": "Microsoft.Automation/automationAccounts"
  },
  {
    "file": "Azure::MachineLearningServices::Workspaces_labelingJobs.json",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/labelingJobs",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/workspaces"
  },
  {
    "file": "Azure::DevTestLab::Labs_virtualnetworks.json",
    "resourceType": "Microsoft.DevTestLab/labs/virtualnetworks",
    "isChild": true,
    "parentType": "Microsoft.DevTestLab/labs"
  },
  {
    "file": "Azure::Web::StaticSites_userProvidedFunctionApps.json",
    "resourceType": "Microsoft.Web/staticSites/userProvidedFunctionApps",
    "isChild": true,
    "parentType": "Microsoft.Web/staticSites"
  },
  {
    "file": "Azure::Web::Sites_publicCertificates.json",
    "resourceType": "Microsoft.Web/sites/publicCertificates",
    "isChild": true,
    "parentType": "Microsoft.Web/sites"
  },
  {
    "file": "Azure::ServiceFabricMesh::Volumes.json",
    "resourceType": "Microsoft.ServiceFabricMesh/volumes",
    "isChild": false
  },
  {
    "file": "Azure::Purview::Accounts_privateEndpointConnections.json",
    "resourceType": "Microsoft.Purview/accounts/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.Purview/accounts"
  },
  {
    "file": "Azure::Insights::DataCollectionRules.json",
    "resourceType": "Microsoft.Insights/dataCollectionRules",
    "isChild": false
  },
  {
    "file": "Azure::Automation::AutomationAccounts_jobSchedules.json",
    "resourceType": "Microsoft.Automation/automationAccounts/jobSchedules",
    "isChild": true,
    "parentType": "Microsoft.Automation/automationAccounts"
  },
  {
    "file": "Azure::Maps::Accounts.json",
    "resourceType": "Microsoft.Maps/accounts",
    "isChild": false
  },
  {
    "file": "Azure::Web::CustomApis.json",
    "resourceType": "Microsoft.Web/customApis",
    "isChild": false
  },
  {
    "file": "Azure::MachineLearningServices::Workspaces_components.json",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/components",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/workspaces"
  },
  {
    "file": "Azure::RecoveryServices::Vaults.json",
    "resourceType": "Microsoft.RecoveryServices/vaults",
    "isChild": false
  },
  {
    "file": "Azure::ConnectedVMwarevSphere::ResourcePools.json",
    "resourceType": "Microsoft.ConnectedVMwarevSphere/resourcePools",
    "isChild": false
  },
  {
    "file": "Azure::DBforMySQL::FlexibleServers_backupsV2.json",
    "resourceType": "Microsoft.DBforMySQL/flexibleServers/backupsV2",
    "isChild": true,
    "parentType": "Microsoft.DBforMySQL/flexibleServers"
  },
  {
    "file": "Azure::Cdn::Profiles_ruleSets.json",
    "resourceType": "Microsoft.Cdn/profiles/ruleSets",
    "isChild": true,
    "parentType": "Microsoft.Cdn/profiles"
  },
  {
    "file": "Azure::DatabaseWatcher::Watchers_targets.json",
    "resourceType": "Microsoft.DatabaseWatcher/watchers/targets",
    "isChild": true,
    "parentType": "Microsoft.DatabaseWatcher/watchers"
  },
  {
    "file": "Azure::Insights::PrivateLinkScopes.json",
    "resourceType": "microsoft.insights/privateLinkScopes",
    "isChild": false
  },
  {
    "file": "Azure::M365SecurityAndCompliance::PrivateLinkServicesForEDMUpload_privateEndpointConnections.json",
    "resourceType": "Microsoft.M365SecurityAndCompliance/privateLinkServicesForEDMUpload/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.M365SecurityAndCompliance/privateLinkServicesForEDMUpload"
  },
  {
    "file": "Azure::AwsConnector::GuardDutyDetectors.json",
    "resourceType": "Microsoft.AwsConnector/guardDutyDetectors",
    "isChild": false
  },
  {
    "file": "Azure::HybridCompute::Machines_extensions.json",
    "resourceType": "Microsoft.HybridCompute/machines/extensions",
    "isChild": true,
    "parentType": "Microsoft.HybridCompute/machines"
  },
  {
    "file": "Azure::ApiManagement::Service_apis_operations.json",
    "resourceType": "Microsoft.ApiManagement/service/apis/operations",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/apis"
  },
  {
    "file": "Azure::Migrate::AssessmentProjects_aksAssessments.json",
    "resourceType": "Microsoft.Migrate/assessmentProjects/aksAssessments",
    "isChild": true,
    "parentType": "Microsoft.Migrate/assessmentProjects"
  },
  {
    "file": "Azure::Web::Sites.json",
    "resourceType": "Microsoft.Web/sites",
    "isChild": false
  },
  {
    "file": "Azure::AwsConnector::CodeBuildProjects.json",
    "resourceType": "Microsoft.AwsConnector/codeBuildProjects",
    "isChild": false
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_apis_databases_containers.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/apis/databases/containers",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts/apis/databases"
  },
  {
    "file": "Azure::MachineLearningServices::Workspaces_environments.json",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/environments",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/workspaces"
  },
  {
    "file": "Azure::ApiManagement::Service_workspaces_policies.json",
    "resourceType": "Microsoft.ApiManagement/service/workspaces/policies",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/workspaces"
  },
  {
    "file": "Azure::AzureStack::LinkedSubscriptions.json",
    "resourceType": "Microsoft.AzureStack/linkedSubscriptions",
    "isChild": false
  },
  {
    "file": "Azure::ApiManagement::Service_apis_schemas.json",
    "resourceType": "Microsoft.ApiManagement/service/apis/schemas",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/apis"
  },
  {
    "file": "Azure::Cdn::Profiles_afdEndpoints.json",
    "resourceType": "Microsoft.Cdn/profiles/afdEndpoints",
    "isChild": true,
    "parentType": "Microsoft.Cdn/profiles"
  },
  {
    "file": "Azure::AwsConnector::IamGroups.json",
    "resourceType": "Microsoft.AwsConnector/iamGroups",
    "isChild": false
  },
  {
    "file": "Azure::KeyVault::Vaults_accessPolicies.json",
    "resourceType": "Microsoft.KeyVault/vaults/accessPolicies",
    "isChild": true,
    "parentType": "Microsoft.KeyVault/vaults"
  },
  {
    "file": "Azure::Network::PrivateDnsZones_TXT.json",
    "resourceType": "Microsoft.Network/privateDnsZones/TXT",
    "isChild": true,
    "parentType": "Microsoft.Network/privateDnsZones"
  },
  {
    "file": "Azure::Web::StaticSites_builds_userProvidedFunctionApps.json",
    "resourceType": "Microsoft.Web/staticSites/builds/userProvidedFunctionApps",
    "isChild": true,
    "parentType": "Microsoft.Web/staticSites/builds"
  },
  {
    "file": "Azure::AVS::PrivateClouds_hcxEnterpriseSites.json",
    "resourceType": "Microsoft.AVS/privateClouds/hcxEnterpriseSites",
    "isChild": true,
    "parentType": "Microsoft.AVS/privateClouds"
  },
  {
    "file": "Azure::ServiceBus::Namespaces_migrationConfigurations.json",
    "resourceType": "Microsoft.ServiceBus/namespaces/migrationConfigurations",
    "isChild": true,
    "parentType": "Microsoft.ServiceBus/namespaces"
  },
  {
    "file": "Azure::EventGrid::Namespaces.json",
    "resourceType": "Microsoft.EventGrid/namespaces",
    "isChild": false
  },
  {
    "file": "Azure::KubernetesConfiguration::PrivateLinkScopes_privateEndpointConnections.json",
    "resourceType": "Microsoft.KubernetesConfiguration/privateLinkScopes/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.KubernetesConfiguration/privateLinkScopes"
  },
  {
    "file": "Azure::Batch::BatchAccounts_applications_versions.json",
    "resourceType": "Microsoft.Batch/batchAccounts/applications/versions",
    "isChild": true,
    "parentType": "Microsoft.Batch/batchAccounts/applications"
  },
  {
    "file": "Azure::DataFactory::Factories_datasets.json",
    "resourceType": "Microsoft.DataFactory/factories/datasets",
    "isChild": true,
    "parentType": "Microsoft.DataFactory/factories"
  },
  {
    "file": "Azure::AzureFleet::Fleets.json",
    "resourceType": "Microsoft.AzureFleet/fleets",
    "isChild": false
  },
  {
    "file": "Azure::MachineLearningServices::Registries_components.json",
    "resourceType": "Microsoft.MachineLearningServices/registries/components",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/registries"
  },
  {
    "file": "Azure::AzureActiveDirectory::B2cDirectories.json",
    "resourceType": "Microsoft.AzureActiveDirectory/b2cDirectories",
    "isChild": false
  },
  {
    "file": "Azure::Web::Sites_slots_functions_keys.json",
    "resourceType": "Microsoft.Web/sites/slots/functions/keys",
    "isChild": true,
    "parentType": "Microsoft.Web/sites/slots/functions"
  },
  {
    "file": "Azure::ApiManagement::Service_subscriptions.json",
    "resourceType": "Microsoft.ApiManagement/service/subscriptions",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service"
  },
  {
    "file": "Azure::Insights::ActivityLogAlerts.json",
    "resourceType": "Microsoft.Insights/activityLogAlerts",
    "isChild": false
  },
  {
    "file": "Azure::ApiManagement::Service_tags_operationLinks.json",
    "resourceType": "Microsoft.ApiManagement/service/tags/operationLinks",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/tags"
  },
  {
    "file": "Azure::AwsConnector::IamRoles.json",
    "resourceType": "Microsoft.AwsConnector/iamRoles",
    "isChild": false
  },
  {
    "file": "Azure::WindowsESU::MultipleActivationKeys.json",
    "resourceType": "Microsoft.WindowsESU/multipleActivationKeys",
    "isChild": false
  },
  {
    "file": "Azure::HealthDataAIServices::DeidServices.json",
    "resourceType": "Microsoft.HealthDataAIServices/deidServices",
    "isChild": false
  },
  {
    "file": "Azure::DevCenter::Devcenters.json",
    "resourceType": "Microsoft.DevCenter/devcenters",
    "isChild": false
  },
  {
    "file": "Azure::Synapse::Workspaces_firewallRules.json",
    "resourceType": "Microsoft.Synapse/workspaces/firewallRules",
    "isChild": true,
    "parentType": "Microsoft.Synapse/workspaces"
  },
  {
    "file": "Azure::PowerBI::PrivateLinkServicesForPowerBI_privateEndpointConnections.json",
    "resourceType": "Microsoft.PowerBI/privateLinkServicesForPowerBI/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.PowerBI/privateLinkServicesForPowerBI"
  },
  {
    "file": "Azure::HardwareSecurityModules::DedicatedHSMs.json",
    "resourceType": "Microsoft.HardwareSecurityModules/dedicatedHSMs",
    "isChild": false
  },
  {
    "file": "Azure::DBforPostgreSQL::ServerGroupsv2_privateEndpointConnections.json",
    "resourceType": "Microsoft.DBforPostgreSQL/serverGroupsv2/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.DBforPostgreSQL/serverGroupsv2"
  },
  {
    "file": "Azure::MachineLearningServices::Workspaces_computes.json",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/computes",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/workspaces"
  },
  {
    "file": "Azure::ServiceFabric::ManagedClusters.json",
    "resourceType": "Microsoft.ServiceFabric/managedClusters",
    "isChild": false
  },
  {
    "file": "Azure::ScVmm::VmmServers.json",
    "resourceType": "Microsoft.ScVmm/vmmServers",
    "isChild": false
  },
  {
    "file": "Azure::Automation::AutomationAccounts_variables.json",
    "resourceType": "Microsoft.Automation/automationAccounts/variables",
    "isChild": true,
    "parentType": "Microsoft.Automation/automationAccounts"
  },
  {
    "file": "Azure::StorSimple::Managers_storageAccountCredentials.json",
    "resourceType": "Microsoft.StorSimple/managers/storageAccountCredentials",
    "isChild": true,
    "parentType": "Microsoft.StorSimple/managers"
  },
  {
    "file": "Azure::AwsConnector::ApiGatewayStages.json",
    "resourceType": "Microsoft.AwsConnector/apiGatewayStages",
    "isChild": false
  },
  {
    "file": "Azure::Compute::Galleries_images.json",
    "resourceType": "Microsoft.Compute/galleries/images",
    "isChild": true,
    "parentType": "Microsoft.Compute/galleries"
  },
  {
    "file": "Azure::Network::DnsResolvers_inboundEndpoints.json",
    "resourceType": "Microsoft.Network/dnsResolvers/inboundEndpoints",
    "isChild": true,
    "parentType": "Microsoft.Network/dnsResolvers"
  },
  {
    "file": "Azure::Network::FirewallPolicies_ruleGroups.json",
    "resourceType": "Microsoft.Network/firewallPolicies/ruleGroups",
    "isChild": true,
    "parentType": "Microsoft.Network/firewallPolicies"
  },
  {
    "file": "Azure::Sql::Servers_elasticPools.json",
    "resourceType": "Microsoft.Sql/servers/elasticPools",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers"
  },
  {
    "file": "Azure::EventHub::Namespaces_schemagroups.json",
    "resourceType": "Microsoft.EventHub/namespaces/schemagroups",
    "isChild": true,
    "parentType": "Microsoft.EventHub/namespaces"
  },
  {
    "file": "Azure::DesktopVirtualization::HostPools_sessionHostManagements.json",
    "resourceType": "Microsoft.DesktopVirtualization/hostPools/sessionHostManagements",
    "isChild": true,
    "parentType": "Microsoft.DesktopVirtualization/hostPools"
  },
  {
    "file": "Azure::Network::PrivateEndpoints_privateDnsZoneGroups.json",
    "resourceType": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
    "isChild": true,
    "parentType": "Microsoft.Network/privateEndpoints"
  },
  {
    "file": "Azure::ApiManagement::Service_apis_diagnostics_loggers.json",
    "resourceType": "Microsoft.ApiManagement/service/apis/diagnostics/loggers",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/apis/diagnostics"
  },
  {
    "file": "Azure::StorSimple::Managers_devices_backupScheduleGroups.json",
    "resourceType": "Microsoft.StorSimple/managers/devices/backupScheduleGroups",
    "isChild": true,
    "parentType": "Microsoft.StorSimple/managers/devices"
  },
  {
    "file": "Azure::DataFactory::Factories_credentials.json",
    "resourceType": "Microsoft.DataFactory/factories/credentials",
    "isChild": true,
    "parentType": "Microsoft.DataFactory/factories"
  },
  {
    "file": "Azure::Network::NatGateways.json",
    "resourceType": "Microsoft.Network/natGateways",
    "isChild": false
  },
  {
    "file": "Azure::Network::DnsResolvers_outboundEndpoints.json",
    "resourceType": "Microsoft.Network/dnsResolvers/outboundEndpoints",
    "isChild": true,
    "parentType": "Microsoft.Network/dnsResolvers"
  },
  {
    "file": "Azure::OffAzure::MasterSites_privateEndpointConnections.json",
    "resourceType": "Microsoft.OffAzure/masterSites/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.OffAzure/masterSites"
  },
  {
    "file": "Azure::ConnectedVMwarevSphere::VirtualMachineTemplates.json",
    "resourceType": "Microsoft.ConnectedVMwarevSphere/virtualMachineTemplates",
    "isChild": false
  },
  {
    "file": "Azure::StorageMover::StorageMovers.json",
    "resourceType": "Microsoft.StorageMover/storageMovers",
    "isChild": false
  },
  {
    "file": "Azure::StorSimple::Managers_devices_fileservers_shares.json",
    "resourceType": "Microsoft.StorSimple/managers/devices/fileservers/shares",
    "isChild": true,
    "parentType": "Microsoft.StorSimple/managers/devices/fileservers"
  },
  {
    "file": "Azure::DBforMariaDB::Servers_securityAlertPolicies.json",
    "resourceType": "Microsoft.DBforMariaDB/servers/securityAlertPolicies",
    "isChild": true,
    "parentType": "Microsoft.DBforMariaDB/servers"
  },
  {
    "file": "Azure::Network::ExpressRouteCircuits.json",
    "resourceType": "Microsoft.Network/expressRouteCircuits",
    "isChild": false
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_gremlinDatabases_graphs.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/graphs",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases"
  },
  {
    "file": "Azure::DevCenter::Devcenters_catalogs.json",
    "resourceType": "Microsoft.DevCenter/devcenters/catalogs",
    "isChild": true,
    "parentType": "Microsoft.DevCenter/devcenters"
  },
  {
    "file": "Azure::CognitiveServices::Accounts_raiPolicies.json",
    "resourceType": "Microsoft.CognitiveServices/accounts/raiPolicies",
    "isChild": true,
    "parentType": "Microsoft.CognitiveServices/accounts"
  },
  {
    "file": "Azure::StreamAnalytics::Streamingjobs_functions.json",
    "resourceType": "Microsoft.StreamAnalytics/streamingjobs/functions",
    "isChild": true,
    "parentType": "Microsoft.StreamAnalytics/streamingjobs"
  },
  {
    "file": "Azure::Network::NetworkInterfaces.json",
    "resourceType": "Microsoft.Network/networkInterfaces",
    "isChild": false
  },
  {
    "file": "Azure::Automation::AutomationAccounts_nodeConfigurations.json",
    "resourceType": "Microsoft.Automation/automationAccounts/nodeConfigurations",
    "isChild": true,
    "parentType": "Microsoft.Automation/automationAccounts"
  },
  {
    "file": "Azure::Storage::StorageAccounts_storageTaskAssignments.json",
    "resourceType": "Microsoft.Storage/storageAccounts/storageTaskAssignments",
    "isChild": true,
    "parentType": "Microsoft.Storage/storageAccounts"
  },
  {
    "file": "Azure::Cloudngfw::LocalRulestacks.json",
    "resourceType": "PaloAltoNetworks.Cloudngfw/localRulestacks",
    "isChild": false
  },
  {
    "file": "Azure::ApiManagement::Service_notifications.json",
    "resourceType": "Microsoft.ApiManagement/service/notifications",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service"
  },
  {
    "file": "Azure::AwsConnector::KmsKeys.json",
    "resourceType": "Microsoft.AwsConnector/kmsKeys",
    "isChild": false
  },
  {
    "file": "Azure::MachineLearningServices::Workspaces.json",
    "resourceType": "Microsoft.MachineLearningServices/workspaces",
    "isChild": false
  },
  {
    "file": "Azure::Synapse::Workspaces_privateEndpointConnections.json",
    "resourceType": "Microsoft.Synapse/workspaces/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.Synapse/workspaces"
  },
  {
    "file": "Azure::Communication::CommunicationServices.json",
    "resourceType": "Microsoft.Communication/communicationServices",
    "isChild": false
  },
  {
    "file": "Azure::Network::DnsZones_SRV.json",
    "resourceType": "Microsoft.Network/dnszones/SRV",
    "isChild": true,
    "parentType": "Microsoft.Network/dnszones"
  },
  {
    "file": "Azure::TestBase::TestBaseAccounts_customerEvents.json",
    "resourceType": "Microsoft.TestBase/testBaseAccounts/customerEvents",
    "isChild": true,
    "parentType": "Microsoft.TestBase/testBaseAccounts"
  },
  {
    "file": "Azure::MachineLearningServices::Registries_data_versions.json",
    "resourceType": "Microsoft.MachineLearningServices/registries/data/versions",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/registries/data"
  },
  {
    "file": "Azure::MachineLearningServices::Workspaces_datastores.json",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/datastores",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/workspaces"
  },
  {
    "file": "Azure::Web::StaticSites_privateEndpointConnections.json",
    "resourceType": "Microsoft.Web/staticSites/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.Web/staticSites"
  },
  {
    "file": "Azure::CloudHealth::Healthmodels_relationships.json",
    "resourceType": "Microsoft.CloudHealth/healthmodels/relationships",
    "isChild": true,
    "parentType": "Microsoft.CloudHealth/healthmodels"
  },
  {
    "file": "Azure::Compute::VirtualMachines_runCommands.json",
    "resourceType": "Microsoft.Compute/virtualMachines/runCommands",
    "isChild": true,
    "parentType": "Microsoft.Compute/virtualMachines"
  },
  {
    "file": "Azure::AwsConnector::OrganizationsOrganizations.json",
    "resourceType": "Microsoft.AwsConnector/organizationsOrganizations",
    "isChild": false
  },
  {
    "file": "Azure::Security::IotSecuritySolutions.json",
    "resourceType": "Microsoft.Security/iotSecuritySolutions",
    "isChild": false
  },
  {
    "file": "Azure::Cdn::Profiles_secrets.json",
    "resourceType": "Microsoft.Cdn/profiles/secrets",
    "isChild": true,
    "parentType": "Microsoft.Cdn/profiles"
  },
  {
    "file": "Azure::ContainerRegistry::Registries_scopeMaps.json",
    "resourceType": "Microsoft.ContainerRegistry/registries/scopeMaps",
    "isChild": true,
    "parentType": "Microsoft.ContainerRegistry/registries"
  },
  {
    "file": "Azure::Kusto::Clusters_privateEndpointConnections.json",
    "resourceType": "Microsoft.Kusto/clusters/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.Kusto/clusters"
  },
  {
    "file": "Azure::Web::Sites_slots_basicPublishingCredentialsPolicies.json",
    "resourceType": "Microsoft.Web/sites/slots/basicPublishingCredentialsPolicies",
    "isChild": true,
    "parentType": "Microsoft.Web/sites/slots"
  },
  {
    "file": "Azure::AzureDataTransfer::Connections.json",
    "resourceType": "Microsoft.AzureDataTransfer/connections",
    "isChild": false
  },
  {
    "file": "Azure::Automation::AutomationAccounts_configurations.json",
    "resourceType": "Microsoft.Automation/automationAccounts/configurations",
    "isChild": true,
    "parentType": "Microsoft.Automation/automationAccounts"
  },
  {
    "file": "Azure::Web::Sites_slots_backups.json",
    "resourceType": "Microsoft.Web/sites/slots/backups",
    "isChild": true,
    "parentType": "Microsoft.Web/sites/slots"
  },
  {
    "file": "Azure::MobileNetwork::MobileNetworks_simPolicies.json",
    "resourceType": "Microsoft.MobileNetwork/mobileNetworks/simPolicies",
    "isChild": true,
    "parentType": "Microsoft.MobileNetwork/mobileNetworks"
  },
  {
    "file": "Azure::Advisor::Configurations.json",
    "resourceType": "Microsoft.Advisor/configurations",
    "isChild": false
  },
  {
    "file": "Azure::DatabaseFleetManager::Fleets_fleetspaces_firewallRules.json",
    "resourceType": "Microsoft.DatabaseFleetManager/fleets/fleetspaces/firewallRules",
    "isChild": true,
    "parentType": "Microsoft.DatabaseFleetManager/fleets/fleetspaces"
  },
  {
    "file": "Azure::BareMetalInfrastructure::BareMetalInstances.json",
    "resourceType": "Microsoft.BareMetalInfrastructure/bareMetalInstances",
    "isChild": false
  },
  {
    "file": "Azure::ConfidentialLedger::Ledgers.json",
    "resourceType": "Microsoft.ConfidentialLedger/ledgers",
    "isChild": false
  },
  {
    "file": "Azure::EdgeOrder::OrderItems.json",
    "resourceType": "Microsoft.EdgeOrder/orderItems",
    "isChild": false
  },
  {
    "file": "Azure::ApiManagement::Service_groups_users.json",
    "resourceType": "Microsoft.ApiManagement/service/groups/users",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/groups"
  },
  {
    "file": "Azure::ContainerRegistry::Registries.json",
    "resourceType": "Microsoft.ContainerRegistry/registries",
    "isChild": false
  },
  {
    "file": "Azure::EventGrid::Topics_privateEndpointConnections.json",
    "resourceType": "Microsoft.EventGrid/topics/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.EventGrid/topics"
  },
  {
    "file": "Azure::Network::FrontDoors.json",
    "resourceType": "Microsoft.Network/frontDoors",
    "isChild": false
  },
  {
    "file": "Azure::Synapse::Workspaces_sqlPools_workloadGroups_workloadClassifiers.json",
    "resourceType": "Microsoft.Synapse/workspaces/sqlPools/workloadGroups/workloadClassifiers",
    "isChild": true,
    "parentType": "Microsoft.Synapse/workspaces/sqlPools/workloadGroups"
  },
  {
    "file": "Azure::Resources::TemplateSpecs.json",
    "resourceType": "Microsoft.Resources/templateSpecs",
    "isChild": false
  },
  {
    "file": "Azure::Network::VpnGateways_natRules.json",
    "resourceType": "Microsoft.Network/vpnGateways/natRules",
    "isChild": true,
    "parentType": "Microsoft.Network/vpnGateways"
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_graphs.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/graphs",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts"
  },
  {
    "file": "Azure::AwsConnector::LambdaFunctions.json",
    "resourceType": "Microsoft.AwsConnector/lambdaFunctions",
    "isChild": false
  },
  {
    "file": "Azure::NetApp::NetAppAccounts_backupVaults.json",
    "resourceType": "Microsoft.NetApp/netAppAccounts/backupVaults",
    "isChild": true,
    "parentType": "Microsoft.NetApp/netAppAccounts"
  },
  {
    "file": "Azure::Web::HostingEnvironments_configurations.json",
    "resourceType": "Microsoft.Web/hostingEnvironments/configurations",
    "isChild": true,
    "parentType": "Microsoft.Web/hostingEnvironments"
  },
  {
    "file": "Azure::IntegrationSpaces::Spaces_infrastructureResources.json",
    "resourceType": "Microsoft.IntegrationSpaces/spaces/infrastructureResources",
    "isChild": true,
    "parentType": "Microsoft.IntegrationSpaces/spaces"
  },
  {
    "file": "Azure::DevCenter::Devcenters_galleries.json",
    "resourceType": "Microsoft.DevCenter/devcenters/galleries",
    "isChild": true,
    "parentType": "Microsoft.DevCenter/devcenters"
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_mongodbDatabases_throughputSettings.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/throughputSettings",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases"
  },
  {
    "file": "Azure::EventGrid::PartnerNamespaces.json",
    "resourceType": "Microsoft.EventGrid/partnerNamespaces",
    "isChild": false
  },
  {
    "file": "Azure::MachineLearningServices::Workspaces_managedNetworks_outboundRules.json",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/managedNetworks/outboundRules",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/workspaces/managedNetworks"
  },
  {
    "file": "Azure::ApiManagement::Service_api-version-sets.json",
    "resourceType": "Microsoft.ApiManagement/service/api-version-sets",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service"
  },
  {
    "file": "Azure::Workloads::Monitors_sapLandscapeMonitor.json",
    "resourceType": "Microsoft.Workloads/monitors/sapLandscapeMonitor",
    "isChild": true,
    "parentType": "Microsoft.Workloads/monitors"
  },
  {
    "file": "Azure::Network::NetworkSecurityPerimeters.json",
    "resourceType": "Microsoft.Network/networkSecurityPerimeters",
    "isChild": false
  },
  {
    "file": "Azure::SecurityDevOps::AzureDevOpsConnectors_orgs_projects_repos.json",
    "resourceType": "Microsoft.SecurityDevOps/azureDevOpsConnectors/orgs/projects/repos",
    "isChild": true,
    "parentType": "Microsoft.SecurityDevOps/azureDevOpsConnectors/orgs/projects"
  },
  {
    "file": "Azure::MachineLearningExperimentation::Accounts.json",
    "resourceType": "Microsoft.MachineLearningExperimentation/accounts",
    "isChild": false
  },
  {
    "file": "Azure::AzurePlaywrightService::Accounts.json",
    "resourceType": "Microsoft.AzurePlaywrightService/accounts",
    "isChild": false
  },
  {
    "file": "Azure::ApiManagement::Service_workspaces_tags_productLinks.json",
    "resourceType": "Microsoft.ApiManagement/service/workspaces/tags/productLinks",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/workspaces/tags"
  },
  {
    "file": "Azure::StorageSync::StorageSyncServices.json",
    "resourceType": "Microsoft.StorageSync/storageSyncServices",
    "isChild": false
  },
  {
    "file": "Azure::AwsConnector::ElasticLoadBalancingV2Listeners.json",
    "resourceType": "Microsoft.AwsConnector/elasticLoadBalancingV2Listeners",
    "isChild": false
  },
  {
    "file": "Azure::Aadiam::PrivateLinkForAzureAd_privateEndpointConnections.json",
    "resourceType": "microsoft.aadiam/privateLinkForAzureAd/privateEndpointConnections",
    "isChild": true,
    "parentType": "microsoft.aadiam/privateLinkForAzureAd"
  },
  {
    "file": "Azure::ApiManagement::Service_tags_apiLinks.json",
    "resourceType": "Microsoft.ApiManagement/service/tags/apiLinks",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/tags"
  },
  {
    "file": "Azure::Compute::AvailabilitySets.json",
    "resourceType": "Microsoft.Compute/availabilitySets",
    "isChild": false
  },
  {
    "file": "Azure::DevTestLab::Labs_schedules.json",
    "resourceType": "Microsoft.DevTestLab/labs/schedules",
    "isChild": true,
    "parentType": "Microsoft.DevTestLab/labs"
  },
  {
    "file": "Azure::ApiManagement::Service_workspaces_diagnostics.json",
    "resourceType": "Microsoft.ApiManagement/service/workspaces/diagnostics",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/workspaces"
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_sqlDatabases_containers_storedProcedures.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/storedProcedures",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers"
  },
  {
    "file": "Azure::NetApp::NetAppAccounts_backupPolicies.json",
    "resourceType": "Microsoft.NetApp/netAppAccounts/backupPolicies",
    "isChild": true,
    "parentType": "Microsoft.NetApp/netAppAccounts"
  },
  {
    "file": "Azure::Network::Trafficmanagerprofiles_AzureEndpoints.json",
    "resourceType": "Microsoft.Network/trafficmanagerprofiles/AzureEndpoints",
    "isChild": true,
    "parentType": "Microsoft.Network/trafficmanagerprofiles"
  },
  {
    "file": "Azure::DataBoxEdge::DataBoxEdgeDevices_triggers.json",
    "resourceType": "Microsoft.DataBoxEdge/dataBoxEdgeDevices/triggers",
    "isChild": true,
    "parentType": "Microsoft.DataBoxEdge/dataBoxEdgeDevices"
  },
  {
    "file": "Azure::ImportExport::Jobs.json",
    "resourceType": "Microsoft.ImportExport/jobs",
    "isChild": false
  },
  {
    "file": "Azure::OperationalInsights::Workspaces_features_machineGroups.json",
    "resourceType": "Microsoft.OperationalInsights/workspaces/features/machineGroups",
    "isChild": true,
    "parentType": "Microsoft.OperationalInsights/workspaces/features"
  },
  {
    "file": "Azure::Network::VirtualWans.json",
    "resourceType": "Microsoft.Network/virtualWans",
    "isChild": false
  },
  {
    "file": "Azure::BareMetalInfrastructure::BareMetalStorageInstances.json",
    "resourceType": "Microsoft.BareMetalInfrastructure/bareMetalStorageInstances",
    "isChild": false
  },
  {
    "file": "Azure::Storage::StorageAccounts_blobServices_containers.json",
    "resourceType": "Microsoft.Storage/storageAccounts/blobServices/containers",
    "isChild": true,
    "parentType": "Microsoft.Storage/storageAccounts/blobServices"
  },
  {
    "file": "Azure::IoTOperationsMQ::Mq_broker_authentication.json",
    "resourceType": "Microsoft.IoTOperationsMQ/mq/broker/authentication",
    "isChild": true,
    "parentType": "Microsoft.IoTOperationsMQ/mq/broker"
  },
  {
    "file": "Azure::AzureArcData::SqlServerInstances_availabilityGroups.json",
    "resourceType": "Microsoft.AzureArcData/sqlServerInstances/availabilityGroups",
    "isChild": true,
    "parentType": "Microsoft.AzureArcData/sqlServerInstances"
  },
  {
    "file": "Azure::StorageSync::StorageSyncServices_registeredServers.json",
    "resourceType": "Microsoft.StorageSync/storageSyncServices/registeredServers",
    "isChild": true,
    "parentType": "Microsoft.StorageSync/storageSyncServices"
  },
  {
    "file": "Azure::Network::PrivateDnsZones_SOA.json",
    "resourceType": "Microsoft.Network/privateDnsZones/SOA",
    "isChild": true,
    "parentType": "Microsoft.Network/privateDnsZones"
  },
  {
    "file": "Azure::CloudHealth::Healthmodels_entities.json",
    "resourceType": "Microsoft.CloudHealth/healthmodels/entities",
    "isChild": true,
    "parentType": "Microsoft.CloudHealth/healthmodels"
  },
  {
    "file": "Azure::DocumentDB::Fleets_fleetspaces_fleetspaceAccounts.json",
    "resourceType": "Microsoft.DocumentDB/fleets/fleetspaces/fleetspaceAccounts",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/fleets/fleetspaces"
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_mongodbDatabases_collections_throughputSettings.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections/throughputSettings",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections"
  },
  {
    "file": "Azure::Insights::MyWorkbooks.json",
    "resourceType": "Microsoft.Insights/myWorkbooks",
    "isChild": false
  },
  {
    "file": "Azure::Logz::Monitors_singleSignOnConfigurations.json",
    "resourceType": "Microsoft.Logz/monitors/singleSignOnConfigurations",
    "isChild": true,
    "parentType": "Microsoft.Logz/monitors"
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_mongodbRoleDefinitions.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/mongodbRoleDefinitions",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts"
  },
  {
    "file": "Azure::AwsConnector::CloudWatchAlarms.json",
    "resourceType": "Microsoft.AwsConnector/cloudWatchAlarms",
    "isChild": false
  },
  {
    "file": "Azure::DBforMySQL::FlexibleServers_administrators.json",
    "resourceType": "Microsoft.DBforMySQL/flexibleServers/administrators",
    "isChild": true,
    "parentType": "Microsoft.DBforMySQL/flexibleServers"
  },
  {
    "file": "Azure::Media::Mediaservices.json",
    "resourceType": "Microsoft.Media/mediaservices",
    "isChild": false
  },
  {
    "file": "Azure::AwsConnector::Ec2VPCEndpoints.json",
    "resourceType": "Microsoft.AwsConnector/ec2VPCEndpoints",
    "isChild": false
  },
  {
    "file": "Azure::Scheduler::JobCollections.json",
    "resourceType": "Microsoft.Scheduler/jobCollections",
    "isChild": false
  },
  {
    "file": "Azure::ApiCenter::Services.json",
    "resourceType": "Microsoft.ApiCenter/services",
    "isChild": false
  },
  {
    "file": "Azure::App::ManagedEnvironments_javaComponents.json",
    "resourceType": "Microsoft.App/managedEnvironments/javaComponents",
    "isChild": true,
    "parentType": "Microsoft.App/managedEnvironments"
  },
  {
    "file": "Azure::StorageTasks::StorageTasks.json",
    "resourceType": "Microsoft.StorageTasks/storageTasks",
    "isChild": false
  },
  {
    "file": "Azure::AppPlatform::Spring_gateways_domains.json",
    "resourceType": "Microsoft.AppPlatform/Spring/gateways/domains",
    "isChild": true,
    "parentType": "Microsoft.AppPlatform/Spring/gateways"
  },
  {
    "file": "Azure::Automation::AutomationAccounts_watchers.json",
    "resourceType": "Microsoft.Automation/automationAccounts/watchers",
    "isChild": true,
    "parentType": "Microsoft.Automation/automationAccounts"
  },
  {
    "file": "Azure::EventHub::Namespaces_authorizationRules.json",
    "resourceType": "Microsoft.EventHub/namespaces/AuthorizationRules",
    "isChild": true,
    "parentType": "Microsoft.EventHub/namespaces"
  },
  {
    "file": "Azure::Observability::Monitors_singleSignOnConfigurations.json",
    "resourceType": "Dynatrace.Observability/monitors/singleSignOnConfigurations",
    "isChild": true,
    "parentType": "Dynatrace.Observability/monitors"
  },
  {
    "file": "Azure::AVS::PrivateClouds_iscsiPaths.json",
    "resourceType": "Microsoft.AVS/privateClouds/iscsiPaths",
    "isChild": true,
    "parentType": "Microsoft.AVS/privateClouds"
  },
  {
    "file": "Azure::Network::ExpressRoutePorts.json",
    "resourceType": "Microsoft.Network/ExpressRoutePorts",
    "isChild": false
  },
  {
    "file": "Azure::ApiManagement::Service_workspaces_apis_operations_policies.json",
    "resourceType": "Microsoft.ApiManagement/service/workspaces/apis/operations/policies",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/workspaces/apis/operations"
  },
  {
    "file": "Azure::Communication::EmailServices_domains_suppressionLists.json",
    "resourceType": "Microsoft.Communication/emailServices/domains/suppressionLists",
    "isChild": true,
    "parentType": "Microsoft.Communication/emailServices/domains"
  },
  {
    "file": "Azure::Media::MediaServices_mediaGraphs.json",
    "resourceType": "Microsoft.Media/mediaServices/mediaGraphs",
    "isChild": true,
    "parentType": "Microsoft.Media/mediaServices"
  },
  {
    "file": "Azure::Migrate::Projects_groups_assessments.json",
    "resourceType": "Microsoft.Migrate/projects/groups/assessments",
    "isChild": true,
    "parentType": "Microsoft.Migrate/projects/groups"
  },
  {
    "file": "Azure::DataProtection::BackupVaults_backupResourceGuardProxies.json",
    "resourceType": "Microsoft.DataProtection/backupVaults/backupResourceGuardProxies",
    "isChild": true,
    "parentType": "Microsoft.DataProtection/backupVaults"
  },
  {
    "file": "Azure::Sql::ManagedInstances_privateEndpointConnections.json",
    "resourceType": "Microsoft.Sql/managedInstances/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.Sql/managedInstances"
  },
  {
    "file": "Azure::OperationalInsights::Workspaces_linkedStorageAccounts.json",
    "resourceType": "Microsoft.OperationalInsights/workspaces/linkedStorageAccounts",
    "isChild": true,
    "parentType": "Microsoft.OperationalInsights/workspaces"
  },
  {
    "file": "Azure::MachineLearningServices::Workspaces_models_versions.json",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/models/versions",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/workspaces/models"
  },
  {
    "file": "Azure::DBforMySQL::Servers_firewallRules.json",
    "resourceType": "Microsoft.DBforMySQL/servers/firewallRules",
    "isChild": true,
    "parentType": "Microsoft.DBforMySQL/servers"
  },
  {
    "file": "Azure::ApiManagement::Service_workspaces_products_apiLinks.json",
    "resourceType": "Microsoft.ApiManagement/service/workspaces/products/apiLinks",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/workspaces/products"
  },
  {
    "file": "Azure::OffAzure::MasterSites_webAppSites.json",
    "resourceType": "Microsoft.OffAzure/masterSites/webAppSites",
    "isChild": true,
    "parentType": "Microsoft.OffAzure/masterSites"
  },
  {
    "file": "Azure::NetworkCloud::Clusters.json",
    "resourceType": "Microsoft.NetworkCloud/clusters",
    "isChild": false
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts",
    "isChild": false
  },
  {
    "file": "Azure::Network::NetworkWatchers_flowLogs.json",
    "resourceType": "Microsoft.Network/networkWatchers/flowLogs",
    "isChild": true,
    "parentType": "Microsoft.Network/networkWatchers"
  },
  {
    "file": "Azure::OperationalInsights::QueryPacks.json",
    "resourceType": "Microsoft.OperationalInsights/queryPacks",
    "isChild": false
  },
  {
    "file": "Azure::Network::NetworkManagers_networkGroups.json",
    "resourceType": "Microsoft.Network/networkManagers/networkGroups",
    "isChild": true,
    "parentType": "Microsoft.Network/networkManagers"
  },
  {
    "file": "Azure::ApiManagement::Service_workspaces_apiVersionSets.json",
    "resourceType": "Microsoft.ApiManagement/service/workspaces/apiVersionSets",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/workspaces"
  },
  {
    "file": "Azure::ScVmm::VirtualNetworks.json",
    "resourceType": "Microsoft.ScVmm/virtualNetworks",
    "isChild": false
  },
  {
    "file": "Azure::ContainerStorage::Pools_volumes.json",
    "resourceType": "Microsoft.ContainerStorage/pools/volumes",
    "isChild": true,
    "parentType": "Microsoft.ContainerStorage/pools"
  },
  {
    "file": "Azure::SecurityAndCompliance::PrivateLinkServicesForSCCPowershell_privateEndpointConnections.json",
    "resourceType": "Microsoft.SecurityAndCompliance/privateLinkServicesForSCCPowershell/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.SecurityAndCompliance/privateLinkServicesForSCCPowershell"
  },
  {
    "file": "Azure::Sql::Locations_instanceFailoverGroups.json",
    "resourceType": "Microsoft.Sql/locations/instanceFailoverGroups",
    "isChild": true,
    "parentType": "Microsoft.Sql/locations"
  },
  {
    "file": "Azure::Orbital::GeoCatalogs.json",
    "resourceType": "Microsoft.Orbital/geoCatalogs",
    "isChild": false
  },
  {
    "file": "Azure::ContainerRegistry::Registries_tasks.json",
    "resourceType": "Microsoft.ContainerRegistry/registries/tasks",
    "isChild": true,
    "parentType": "Microsoft.ContainerRegistry/registries"
  },
  {
    "file": "Azure::NetworkCloud::TrunkedNetworks.json",
    "resourceType": "Microsoft.NetworkCloud/trunkedNetworks",
    "isChild": false
  },
  {
    "file": "Azure::Network::RouteFilters_routeFilterRules.json",
    "resourceType": "Microsoft.Network/routeFilters/routeFilterRules",
    "isChild": true,
    "parentType": "Microsoft.Network/routeFilters"
  },
  {
    "file": "Azure::TimeSeriesInsights::Environments_eventSources.json",
    "resourceType": "Microsoft.TimeSeriesInsights/environments/eventSources",
    "isChild": true,
    "parentType": "Microsoft.TimeSeriesInsights/environments"
  },
  {
    "file": "Azure::RecoveryServices::Vaults_replicationFabrics_replicationProtectionContainers_replicationMigrationItems.json",
    "resourceType": "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers/replicationMigrationItems",
    "isChild": true,
    "parentType": "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers"
  },
  {
    "file": "Azure::LabServices::Labaccounts_labs_environmentsettings_environments.json",
    "resourceType": "Microsoft.LabServices/labaccounts/labs/environmentsettings/environments",
    "isChild": true,
    "parentType": "Microsoft.LabServices/labaccounts/labs/environmentsettings"
  },
  {
    "file": "Azure::Cdn::Profiles_customDomains.json",
    "resourceType": "Microsoft.Cdn/profiles/customDomains",
    "isChild": true,
    "parentType": "Microsoft.Cdn/profiles"
  },
  {
    "file": "Azure::LoadTestService::PlaywrightWorkspaces.json",
    "resourceType": "Microsoft.LoadTestService/playwrightWorkspaces",
    "isChild": false
  },
  {
    "file": "Azure::Web::Sites_instances_deployments.json",
    "resourceType": "Microsoft.Web/sites/instances/deployments",
    "isChild": true,
    "parentType": "Microsoft.Web/sites/instances"
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_sqlRoleAssignments.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/sqlRoleAssignments",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts"
  },
  {
    "file": "Azure::ApiManagement::Service_apis_resolvers.json",
    "resourceType": "Microsoft.ApiManagement/service/apis/resolvers",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/apis"
  },
  {
    "file": "Azure::ApiManagement::Service_workspaces_apis_diagnostics.json",
    "resourceType": "Microsoft.ApiManagement/service/workspaces/apis/diagnostics",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/workspaces/apis"
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_mongoMIRoleAssignments.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/mongoMIRoleAssignments",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts"
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_apis_keyspaces.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/apis/keyspaces",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts/apis"
  },
  {
    "file": "Azure::DBforPostgreSQL::FlexibleServers_backups.json",
    "resourceType": "Microsoft.DBforPostgreSQL/flexibleServers/backups",
    "isChild": true,
    "parentType": "Microsoft.DBforPostgreSQL/flexibleServers"
  },
  {
    "file": "Azure::Network::FirewallPolicies.json",
    "resourceType": "Microsoft.Network/firewallPolicies",
    "isChild": false
  },
  {
    "file": "Azure::ManagedNetworkFabric::NetworkTaps.json",
    "resourceType": "Microsoft.ManagedNetworkFabric/networkTaps",
    "isChild": false
  },
  {
    "file": "Azure::AwsConnector::SsmParameters.json",
    "resourceType": "Microsoft.AwsConnector/ssmParameters",
    "isChild": false
  },
  {
    "file": "Azure::DataBoxEdge::DataBoxEdgeDevices_orders.json",
    "resourceType": "Microsoft.DataBoxEdge/dataBoxEdgeDevices/orders",
    "isChild": true,
    "parentType": "Microsoft.DataBoxEdge/dataBoxEdgeDevices"
  },
  {
    "file": "Azure::Insights::Components_pricingPlans.json",
    "resourceType": "microsoft.insights/components/pricingPlans",
    "isChild": true,
    "parentType": "microsoft.insights/components"
  },
  {
    "file": "Azure::Sql::ManagedInstances_vulnerabilityAssessments.json",
    "resourceType": "Microsoft.Sql/managedInstances/vulnerabilityAssessments",
    "isChild": true,
    "parentType": "Microsoft.Sql/managedInstances"
  },
  {
    "file": "Azure::Automation::AutomationAccounts_hybridRunbookWorkerGroups.json",
    "resourceType": "Microsoft.Automation/automationAccounts/hybridRunbookWorkerGroups",
    "isChild": true,
    "parentType": "Microsoft.Automation/automationAccounts"
  },
  {
    "file": "Azure::Sql::Servers_databases_advancedThreatProtectionSettings.json",
    "resourceType": "Microsoft.Sql/servers/databases/advancedThreatProtectionSettings",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers/databases"
  },
  {
    "file": "Azure::ContainerService::ManagedClusters_privateEndpointConnections.json",
    "resourceType": "Microsoft.ContainerService/managedClusters/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.ContainerService/managedClusters"
  },
  {
    "file": "Azure::DBforMariaDB::Servers_firewallRules.json",
    "resourceType": "Microsoft.DBforMariaDB/servers/firewallRules",
    "isChild": true,
    "parentType": "Microsoft.DBforMariaDB/servers"
  },
  {
    "file": "Azure::Logz::Monitors_accounts.json",
    "resourceType": "Microsoft.Logz/monitors/accounts",
    "isChild": true,
    "parentType": "Microsoft.Logz/monitors"
  },
  {
    "file": "Azure::AzureArcData::DataControllers.json",
    "resourceType": "Microsoft.AzureArcData/dataControllers",
    "isChild": false
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_cassandraKeyspaces_views.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/views",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces"
  },
  {
    "file": "Azure::DBforMySQL::FlexibleServers_keys.json",
    "resourceType": "Microsoft.DBForMySql/flexibleServers/keys",
    "isChild": true,
    "parentType": "Microsoft.DBForMySql/flexibleServers"
  },
  {
    "file": "Azure::Migrate::Projects.json",
    "resourceType": "Microsoft.Migrate/projects",
    "isChild": false
  },
  {
    "file": "Azure::OffAzureSpringBoot::Springbootsites_springbootservers.json",
    "resourceType": "Microsoft.OffAzureSpringBoot/springbootsites/springbootservers",
    "isChild": true,
    "parentType": "Microsoft.OffAzureSpringBoot/springbootsites"
  },
  {
    "file": "Azure::Network::PublicIPAddresses.json",
    "resourceType": "Microsoft.Network/publicIPAddresses",
    "isChild": false
  },
  {
    "file": "Azure::Orbital::L2Connections.json",
    "resourceType": "Microsoft.Orbital/l2Connections",
    "isChild": false
  },
  {
    "file": "Azure::ApiManagement::Service_contentTypes_contentItems.json",
    "resourceType": "Microsoft.ApiManagement/service/contentTypes/contentItems",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/contentTypes"
  },
  {
    "file": "Azure::Sql::ManagedInstances_dtc.json",
    "resourceType": "Microsoft.Sql/managedInstances/dtc",
    "isChild": true,
    "parentType": "Microsoft.Sql/managedInstances"
  },
  {
    "file": "Azure::MachineLearningServices::Workspaces_onlineEndpoints.json",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/onlineEndpoints",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/workspaces"
  },
  {
    "file": "Azure::Automation::AutomationAccounts_modules.json",
    "resourceType": "Microsoft.Automation/automationAccounts/modules",
    "isChild": true,
    "parentType": "Microsoft.Automation/automationAccounts"
  },
  {
    "file": "Azure::Peering::Peerings_registeredAsns.json",
    "resourceType": "Microsoft.Peering/peerings/registeredAsns",
    "isChild": true,
    "parentType": "Microsoft.Peering/peerings"
  },
  {
    "file": "Azure::DataLakeAnalytics::Accounts_firewallRules.json",
    "resourceType": "Microsoft.DataLakeAnalytics/accounts/firewallRules",
    "isChild": true,
    "parentType": "Microsoft.DataLakeAnalytics/accounts"
  },
  {
    "file": "Azure::RecoveryServices::Vaults_replicationRecoveryPlans.json",
    "resourceType": "Microsoft.RecoveryServices/vaults/replicationRecoveryPlans",
    "isChild": true,
    "parentType": "Microsoft.RecoveryServices/vaults"
  },
  {
    "file": "Azure::LabServices::Labaccounts_labs_users.json",
    "resourceType": "Microsoft.LabServices/labaccounts/labs/users",
    "isChild": true,
    "parentType": "Microsoft.LabServices/labaccounts/labs"
  },
  {
    "file": "Azure::AppPlatform::Spring_configServers.json",
    "resourceType": "Microsoft.AppPlatform/Spring/configServers",
    "isChild": true,
    "parentType": "Microsoft.AppPlatform/Spring"
  },
  {
    "file": "Azure::Migrate::MoveCollections_moveResources.json",
    "resourceType": "Microsoft.Migrate/moveCollections/moveResources",
    "isChild": true,
    "parentType": "Microsoft.Migrate/moveCollections"
  },
  {
    "file": "Azure::DBforPostgreSQL::FlexibleServers_migrations.json",
    "resourceType": "Microsoft.DBforPostgreSQL/flexibleServers/migrations",
    "isChild": true,
    "parentType": "Microsoft.DBforPostgreSQL/flexibleServers"
  },
  {
    "file": "Azure::OperationalInsights::Clusters.json",
    "resourceType": "Microsoft.OperationalInsights/clusters",
    "isChild": false
  },
  {
    "file": "Azure::Databricks::AccessConnectors.json",
    "resourceType": "Microsoft.Databricks/accessConnectors",
    "isChild": false
  },
  {
    "file": "Azure::Network::NetworkSecurityGroups.json",
    "resourceType": "Microsoft.Network/networkSecurityGroups",
    "isChild": false
  },
  {
    "file": "Azure::ContainerInstance::Ngroups.json",
    "resourceType": "Microsoft.ContainerInstance/ngroups",
    "isChild": false
  },
  {
    "file": "Azure::Media::MediaServices_assets.json",
    "resourceType": "Microsoft.Media/mediaServices/assets",
    "isChild": true,
    "parentType": "Microsoft.Media/mediaServices"
  },
  {
    "file": "Azure::DevTestLab::Labs_policysets_policies.json",
    "resourceType": "Microsoft.DevTestLab/labs/policysets/policies",
    "isChild": true,
    "parentType": "Microsoft.DevTestLab/labs/policysets"
  },
  {
    "file": "Azure::DesktopVirtualization::Workspaces_privateEndpointConnections.json",
    "resourceType": "Microsoft.DesktopVirtualization/workspaces/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.DesktopVirtualization/workspaces"
  },
  {
    "file": "Azure::VideoIndexer::Accounts.json",
    "resourceType": "Microsoft.VideoIndexer/accounts",
    "isChild": false
  },
  {
    "file": "Azure::DBforPostgreSQL::FlexibleServers_administrators.json",
    "resourceType": "Microsoft.DBforPostgreSQL/flexibleServers/administrators",
    "isChild": true,
    "parentType": "Microsoft.DBforPostgreSQL/flexibleServers"
  },
  {
    "file": "Azure::EventGrid::PartnerRegistrations.json",
    "resourceType": "Microsoft.EventGrid/partnerRegistrations",
    "isChild": false
  },
  {
    "file": "Azure::Sql::ManagedInstances_databases_securityAlertPolicies.json",
    "resourceType": "Microsoft.Sql/managedInstances/databases/securityAlertPolicies",
    "isChild": true,
    "parentType": "Microsoft.Sql/managedInstances/databases"
  },
  {
    "file": "Azure::HybridContainerService::StorageSpaces.json",
    "resourceType": "Microsoft.HybridContainerService/storageSpaces",
    "isChild": false
  },
  {
    "file": "Azure::Maintenance::MaintenanceConfigurations.json",
    "resourceType": "Microsoft.Maintenance/maintenanceConfigurations",
    "isChild": false
  },
  {
    "file": "Azure::Sql::Servers_securityAlertPolicies.json",
    "resourceType": "Microsoft.Sql/servers/securityAlertPolicies",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers"
  },
  {
    "file": "Azure::AzureStackHCI::Clusters_arcSettings.json",
    "resourceType": "Microsoft.AzureStackHCI/clusters/arcSettings",
    "isChild": true,
    "parentType": "Microsoft.AzureStackHCI/clusters"
  },
  {
    "file": "Azure::ConnectedVMwarevSphere::VirtualNetworks.json",
    "resourceType": "Microsoft.ConnectedVMwarevSphere/virtualNetworks",
    "isChild": false
  },
  {
    "file": "Azure::DBforPostgreSQL::Servers_configurations.json",
    "resourceType": "Microsoft.DBforPostgreSQL/servers/configurations",
    "isChild": true,
    "parentType": "Microsoft.DBforPostgreSQL/servers"
  },
  {
    "file": "Azure::App::ManagedEnvironments_daprComponents.json",
    "resourceType": "Microsoft.App/managedEnvironments/daprComponents",
    "isChild": true,
    "parentType": "Microsoft.App/managedEnvironments"
  },
  {
    "file": "Azure::AwsConnector::EcrImageDetails.json",
    "resourceType": "Microsoft.AwsConnector/ecrImageDetails",
    "isChild": false
  },
  {
    "file": "Azure::NetworkCloud::KubernetesClusters_agentPools.json",
    "resourceType": "Microsoft.NetworkCloud/kubernetesClusters/agentPools",
    "isChild": true,
    "parentType": "Microsoft.NetworkCloud/kubernetesClusters"
  },
  {
    "file": "Azure::Storage::StorageAccounts_objectReplicationPolicies.json",
    "resourceType": "Microsoft.Storage/storageAccounts/objectReplicationPolicies",
    "isChild": true,
    "parentType": "Microsoft.Storage/storageAccounts"
  },
  {
    "file": "Azure::AwsConnector::KmsAliases.json",
    "resourceType": "Microsoft.AwsConnector/kmsAliases",
    "isChild": false
  },
  {
    "file": "Azure::DataBox::Jobs.json",
    "resourceType": "Microsoft.DataBox/jobs",
    "isChild": false
  },
  {
    "file": "Azure::Network::DnsZones_PTR.json",
    "resourceType": "Microsoft.Network/dnszones/PTR",
    "isChild": true,
    "parentType": "Microsoft.Network/dnszones"
  },
  {
    "file": "Azure::Network::VirtualNetworks_virtualNetworkPeerings.json",
    "resourceType": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
    "isChild": true,
    "parentType": "Microsoft.Network/virtualNetworks"
  },
  {
    "file": "Azure::AzureActiveDirectory::CiamDirectories.json",
    "resourceType": "Microsoft.AzureActiveDirectory/ciamDirectories",
    "isChild": false
  },
  {
    "file": "Azure::VideoIndexer::Accounts_privateEndpointConnections.json",
    "resourceType": "Microsoft.VideoIndexer/accounts/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.VideoIndexer/accounts"
  },
  {
    "file": "Azure::Automation::AutomationAccounts_runbooks.json",
    "resourceType": "Microsoft.Automation/automationAccounts/runbooks",
    "isChild": true,
    "parentType": "Microsoft.Automation/automationAccounts"
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_apis_tables_settings.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/apis/tables/settings",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts/apis/tables"
  },
  {
    "file": "Azure::MobilePacketCore::ObservabilityServices.json",
    "resourceType": "Microsoft.MobilePacketCore/observabilityServices",
    "isChild": false
  },
  {
    "file": "Azure::Network::NetworkManagers.json",
    "resourceType": "Microsoft.Network/networkManagers",
    "isChild": false
  },
  {
    "file": "Azure::AwsConnector::AutoScalingAutoScalingGroups.json",
    "resourceType": "Microsoft.AwsConnector/autoScalingAutoScalingGroups",
    "isChild": false
  },
  {
    "file": "Azure::AppPlatform::Spring_buildServices.json",
    "resourceType": "Microsoft.AppPlatform/Spring/buildServices",
    "isChild": true,
    "parentType": "Microsoft.AppPlatform/Spring"
  },
  {
    "file": "Azure::ApiManagement::Service_workspaces_products_policies.json",
    "resourceType": "Microsoft.ApiManagement/service/workspaces/products/policies",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/workspaces/products"
  },
  {
    "file": "Azure::HealthcareApis::Workspaces_privateEndpointConnections.json",
    "resourceType": "Microsoft.HealthcareApis/workspaces/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.HealthcareApis/workspaces"
  },
  {
    "file": "Azure::Database::ExascaleDbStorageVaults.json",
    "resourceType": "Oracle.Database/exascaleDbStorageVaults",
    "isChild": false
  },
  {
    "file": "Azure::DBforMySQL::Servers_virtualNetworkRules.json",
    "resourceType": "Microsoft.DBforMySQL/servers/virtualNetworkRules",
    "isChild": true,
    "parentType": "Microsoft.DBforMySQL/servers"
  },
  {
    "file": "Azure::DataLakeAnalytics::Accounts_StorageAccounts.json",
    "resourceType": "Microsoft.DataLakeAnalytics/accounts/storageAccounts",
    "isChild": true,
    "parentType": "Microsoft.DataLakeAnalytics/accounts"
  },
  {
    "file": "Azure::ApiManagement::Service_namedValues.json",
    "resourceType": "Microsoft.ApiManagement/service/namedValues",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service"
  },
  {
    "file": "Azure::RedHatOpenShift::Openshiftclusters_syncIdentityProvider.json",
    "resourceType": "Microsoft.RedHatOpenShift/openshiftclusters/syncIdentityProvider",
    "isChild": true,
    "parentType": "Microsoft.RedHatOpenShift/openshiftclusters"
  },
  {
    "file": "Azure::Compute::Galleries_inVMAccessControlProfiles.json",
    "resourceType": "Microsoft.Compute/galleries/inVMAccessControlProfiles",
    "isChild": true,
    "parentType": "Microsoft.Compute/galleries"
  },
  {
    "file": "Azure::StorageCache::AmlFilesystems.json",
    "resourceType": "Microsoft.StorageCache/amlFilesystems",
    "isChild": false
  },
  {
    "file": "Azure::RecoveryServices::Vaults_replicationPolicies.json",
    "resourceType": "Microsoft.RecoveryServices/vaults/replicationPolicies",
    "isChild": true,
    "parentType": "Microsoft.RecoveryServices/vaults"
  },
  {
    "file": "Azure::VMwareCloudSimple::DedicatedCloudServices.json",
    "resourceType": "Microsoft.VMwareCloudSimple/dedicatedCloudServices",
    "isChild": false
  },
  {
    "file": "Azure::ContainerRegistry::Registries_packages_archives.json",
    "resourceType": "Microsoft.ContainerRegistry/registries/packages/archives",
    "isChild": true,
    "parentType": "Microsoft.ContainerRegistry/registries/packages"
  },
  {
    "file": "Azure::StorageSync::StorageSyncServices_syncGroups.json",
    "resourceType": "Microsoft.StorageSync/storageSyncServices/syncGroups",
    "isChild": true,
    "parentType": "Microsoft.StorageSync/storageSyncServices"
  },
  {
    "file": "Azure::Media::MediaServices_contentKeyPolicies.json",
    "resourceType": "Microsoft.Media/mediaServices/contentKeyPolicies",
    "isChild": true,
    "parentType": "Microsoft.Media/mediaServices"
  },
  {
    "file": "Azure::M365SecurityAndCompliance::PrivateLinkServicesForSCCPowershell_privateEndpointConnections.json",
    "resourceType": "Microsoft.M365SecurityAndCompliance/privateLinkServicesForSCCPowershell/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.M365SecurityAndCompliance/privateLinkServicesForSCCPowershell"
  },
  {
    "file": "Azure::DesktopVirtualization::ApplicationGroups.json",
    "resourceType": "Microsoft.DesktopVirtualization/applicationGroups",
    "isChild": false
  },
  {
    "file": "Azure::DevTestLab::Labs_formulas.json",
    "resourceType": "Microsoft.DevTestLab/labs/formulas",
    "isChild": true,
    "parentType": "Microsoft.DevTestLab/labs"
  },
  {
    "file": "Azure::AzureSphere::Catalogs_products_deviceGroups_devices.json",
    "resourceType": "Microsoft.AzureSphere/catalogs/products/deviceGroups/devices",
    "isChild": true,
    "parentType": "Microsoft.AzureSphere/catalogs/products/deviceGroups"
  },
  {
    "file": "Azure::RecoveryServices::Vaults_backupFabrics_backupProtectionIntent.json",
    "resourceType": "Microsoft.RecoveryServices/vaults/backupFabrics/backupProtectionIntent",
    "isChild": true,
    "parentType": "Microsoft.RecoveryServices/vaults/backupFabrics"
  },
  {
    "file": "Azure::Sql::Servers_sqlVulnerabilityAssessments.json",
    "resourceType": "Microsoft.Sql/servers/sqlVulnerabilityAssessments",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers"
  },
  {
    "file": "Azure::EventGrid::PartnerDestinations.json",
    "resourceType": "Microsoft.EventGrid/partnerDestinations",
    "isChild": false
  },
  {
    "file": "Azure::Sql::Servers_advisors.json",
    "resourceType": "Microsoft.Sql/servers/advisors",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers"
  },
  {
    "file": "Azure::StreamAnalytics::Clusters.json",
    "resourceType": "Microsoft.StreamAnalytics/clusters",
    "isChild": false
  },
  {
    "file": "Azure::ServiceBus::Namespaces_queues.json",
    "resourceType": "Microsoft.ServiceBus/namespaces/queues",
    "isChild": true,
    "parentType": "Microsoft.ServiceBus/namespaces"
  },
  {
    "file": "Azure::Web::Sites_hybridconnection.json",
    "resourceType": "Microsoft.Web/sites/hybridconnection",
    "isChild": true,
    "parentType": "Microsoft.Web/sites"
  },
  {
    "file": "Azure::AppPlatform::Spring_storages.json",
    "resourceType": "Microsoft.AppPlatform/Spring/storages",
    "isChild": true,
    "parentType": "Microsoft.AppPlatform/Spring"
  },
  {
    "file": "Azure::ApiCenter::Services_workspaces_apis_deployments.json",
    "resourceType": "Microsoft.ApiCenter/services/workspaces/apis/deployments",
    "isChild": true,
    "parentType": "Microsoft.ApiCenter/services/workspaces/apis"
  },
  {
    "file": "Azure::ApiManagement::Service_workspaces_policyFragments.json",
    "resourceType": "Microsoft.ApiManagement/service/workspaces/policyFragments",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/workspaces"
  },
  {
    "file": "Azure::ApiManagement::Service_workspaces_apis_releases.json",
    "resourceType": "Microsoft.ApiManagement/service/workspaces/apis/releases",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/workspaces/apis"
  },
  {
    "file": "Azure::Web::StaticSites_builds_linkedBackends.json",
    "resourceType": "Microsoft.Web/staticSites/builds/linkedBackends",
    "isChild": true,
    "parentType": "Microsoft.Web/staticSites/builds"
  },
  {
    "file": "Azure::DataFactory::Factories.json",
    "resourceType": "Microsoft.DataFactory/factories",
    "isChild": false
  },
  {
    "file": "Azure::ConnectedVMwarevSphere::VirtualMachines_guestAgents.json",
    "resourceType": "Microsoft.ConnectedVMwarevSphere/virtualMachines/guestAgents",
    "isChild": true,
    "parentType": "Microsoft.ConnectedVMwarevSphere/virtualMachines"
  },
  {
    "file": "Azure::AppPlatform::Spring_applicationAccelerators_customizedAccelerators.json",
    "resourceType": "Microsoft.AppPlatform/Spring/applicationAccelerators/customizedAccelerators",
    "isChild": true,
    "parentType": "Microsoft.AppPlatform/Spring/applicationAccelerators"
  },
  {
    "file": "Azure::ConfidentialLedger::ManagedCCFs.json",
    "resourceType": "Microsoft.ConfidentialLedger/managedCCFs",
    "isChild": false
  },
  {
    "file": "Azure::DataReplication::ReplicationFabrics_fabricAgents.json",
    "resourceType": "Microsoft.DataReplication/replicationFabrics/fabricAgents",
    "isChild": true,
    "parentType": "Microsoft.DataReplication/replicationFabrics"
  },
  {
    "file": "Azure::Sql::ManagedInstances_securityAlertPolicies.json",
    "resourceType": "Microsoft.Sql/managedInstances/securityAlertPolicies",
    "isChild": true,
    "parentType": "Microsoft.Sql/managedInstances"
  },
  {
    "file": "Azure::ApiManagement::Service_workspaces_schemas.json",
    "resourceType": "Microsoft.ApiManagement/service/workspaces/schemas",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/workspaces"
  },
  {
    "file": "Azure::BotService::BotServices.json",
    "resourceType": "Microsoft.BotService/botServices",
    "isChild": false
  },
  {
    "file": "Azure::Cloudngfw::LocalRulestacks_prefixlists.json",
    "resourceType": "PaloAltoNetworks.Cloudngfw/localRulestacks/prefixlists",
    "isChild": true,
    "parentType": "PaloAltoNetworks.Cloudngfw/localRulestacks"
  },
  {
    "file": "Azure::AwsConnector::CloudFrontDistributions.json",
    "resourceType": "Microsoft.AwsConnector/cloudFrontDistributions",
    "isChild": false
  },
  {
    "file": "Azure::StorageCache::AmlFilesystems_importJobs.json",
    "resourceType": "Microsoft.StorageCache/amlFilesystems/importJobs",
    "isChild": true,
    "parentType": "Microsoft.StorageCache/amlFilesystems"
  },
  {
    "file": "Azure::Network::RouteTables.json",
    "resourceType": "Microsoft.Network/routeTables",
    "isChild": false
  },
  {
    "file": "Azure::EventGrid::Namespaces_topics_eventSubscriptions.json",
    "resourceType": "Microsoft.EventGrid/namespaces/topics/eventSubscriptions",
    "isChild": true,
    "parentType": "Microsoft.EventGrid/namespaces/topics"
  },
  {
    "file": "Azure::AwsConnector::DaxClusters.json",
    "resourceType": "Microsoft.AwsConnector/daxClusters",
    "isChild": false
  },
  {
    "file": "Azure::DataLakeAnalytics::Accounts_computePolicies.json",
    "resourceType": "Microsoft.DataLakeAnalytics/accounts/computePolicies",
    "isChild": true,
    "parentType": "Microsoft.DataLakeAnalytics/accounts"
  },
  {
    "file": "Azure::Devices::ProvisioningServices_certificates.json",
    "resourceType": "Microsoft.Devices/provisioningServices/certificates",
    "isChild": true,
    "parentType": "Microsoft.Devices/provisioningServices"
  },
  {
    "file": "Azure::Block::Reservations.json",
    "resourceType": "PureStorage.Block/reservations",
    "isChild": false
  },
  {
    "file": "Azure::MachineLearningServices::Workspaces_datasets.json",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/datasets",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/workspaces"
  },
  {
    "file": "Azure::App::ManagedEnvironments_certificates.json",
    "resourceType": "Microsoft.App/managedEnvironments/certificates",
    "isChild": true,
    "parentType": "Microsoft.App/managedEnvironments"
  },
  {
    "file": "Azure::Orbital::ContactProfiles.json",
    "resourceType": "Microsoft.Orbital/contactProfiles",
    "isChild": false
  },
  {
    "file": "Azure::ConnectedCache::EnterpriseMccCustomers.json",
    "resourceType": "Microsoft.ConnectedCache/enterpriseMccCustomers",
    "isChild": false
  },
  {
    "file": "Azure::Network::VirtualHubs_hubVirtualNetworkConnections.json",
    "resourceType": "Microsoft.Network/virtualHubs/hubVirtualNetworkConnections",
    "isChild": true,
    "parentType": "Microsoft.Network/virtualHubs"
  },
  {
    "file": "Azure::RecoveryServices::Vaults_replicationFabrics_replicationProtectionContainers_replicationProtectedItems.json",
    "resourceType": "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers/replicationProtectedItems",
    "isChild": true,
    "parentType": "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers"
  },
  {
    "file": "Azure::Blockchain::BlockchainMembers.json",
    "resourceType": "Microsoft.Blockchain/blockchainMembers",
    "isChild": false
  },
  {
    "file": "Azure::Sql::Servers_databases_backupLongTermRetentionPolicies.json",
    "resourceType": "Microsoft.Sql/servers/databases/backupLongTermRetentionPolicies",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers/databases"
  },
  {
    "file": "Azure::ApiManagement::Service_authorizationProviders_authorizations.json",
    "resourceType": "Microsoft.ApiManagement/service/authorizationProviders/authorizations",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/authorizationProviders"
  },
  {
    "file": "Azure::Web::Sites_hybridConnectionNamespaces_relays.json",
    "resourceType": "Microsoft.Web/sites/hybridConnectionNamespaces/relays",
    "isChild": true,
    "parentType": "Microsoft.Web/sites/hybridConnectionNamespaces"
  },
  {
    "file": "Azure::Scom::ManagedInstances.json",
    "resourceType": "Microsoft.Scom/managedInstances",
    "isChild": false
  },
  {
    "file": "Azure::EventGrid::Namespaces_privateEndpointConnections.json",
    "resourceType": "Microsoft.EventGrid/namespaces/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.EventGrid/namespaces"
  },
  {
    "file": "Azure::DataFactory::Factories_integrationRuntimes.json",
    "resourceType": "Microsoft.DataFactory/factories/integrationRuntimes",
    "isChild": true,
    "parentType": "Microsoft.DataFactory/factories"
  },
  {
    "file": "Azure::AzureArcData::SqlServerInstances_databases.json",
    "resourceType": "Microsoft.AzureArcData/sqlServerInstances/databases",
    "isChild": true,
    "parentType": "Microsoft.AzureArcData/sqlServerInstances"
  },
  {
    "file": "Azure::Compute::DiskAccesses_privateEndpointConnections.json",
    "resourceType": "Microsoft.Compute/diskAccesses/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.Compute/diskAccesses"
  },
  {
    "file": "Azure::DevCenter::Projects_catalogs.json",
    "resourceType": "Microsoft.DevCenter/projects/catalogs",
    "isChild": true,
    "parentType": "Microsoft.DevCenter/projects"
  },
  {
    "file": "Azure::DocumentDB::MongoClusters_privateEndpointConnections.json",
    "resourceType": "Microsoft.DocumentDB/mongoClusters/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/mongoClusters"
  },
  {
    "file": "Azure::Synapse::Workspaces_sqlPools_vulnerabilityAssessments_rules_baselines.json",
    "resourceType": "Microsoft.Synapse/workspaces/sqlPools/vulnerabilityAssessments/rules/baselines",
    "isChild": true,
    "parentType": "Microsoft.Synapse/workspaces/sqlPools/vulnerabilityAssessments/rules"
  },
  {
    "file": "Azure::MixedReality::SpatialAnchorsAccounts.json",
    "resourceType": "Microsoft.MixedReality/spatialAnchorsAccounts",
    "isChild": false
  },
  {
    "file": "Azure::HealthcareApis::Workspaces.json",
    "resourceType": "Microsoft.HealthcareApis/workspaces",
    "isChild": false
  },
  {
    "file": "Azure::NetworkFunction::AzureTrafficCollectors.json",
    "resourceType": "Microsoft.NetworkFunction/azureTrafficCollectors",
    "isChild": false
  },
  {
    "file": "Azure::Media::VideoAnalyzers_pipelineJobs.json",
    "resourceType": "Microsoft.Media/videoAnalyzers/pipelineJobs",
    "isChild": true,
    "parentType": "Microsoft.Media/videoAnalyzers"
  },
  {
    "file": "Azure::ProgrammableConnectivity::OperatorApiConnections.json",
    "resourceType": "Microsoft.ProgrammableConnectivity/operatorApiConnections",
    "isChild": false
  },
  {
    "file": "Azure::DocumentDB::Fleets_fleetspaces.json",
    "resourceType": "Microsoft.DocumentDB/fleets/fleetspaces",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/fleets"
  },
  {
    "file": "Azure::Synapse::Workspaces_sqlPools_schemas_tables_columns_sensitivityLabels.json",
    "resourceType": "Microsoft.Synapse/workspaces/sqlPools/schemas/tables/columns/sensitivityLabels",
    "isChild": true,
    "parentType": "Microsoft.Synapse/workspaces/sqlPools/schemas/tables/columns"
  },
  {
    "file": "Azure::TimeSeriesInsights::Environments_privateEndpointConnections.json",
    "resourceType": "Microsoft.TimeSeriesInsights/environments/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.TimeSeriesInsights/environments"
  },
  {
    "file": "Azure::ManagedIdentity::UserAssignedIdentities.json",
    "resourceType": "Microsoft.ManagedIdentity/userAssignedIdentities",
    "isChild": false
  },
  {
    "file": "Azure::StorageMover::StorageMovers_projects_jobDefinitions.json",
    "resourceType": "Microsoft.StorageMover/storageMovers/projects/jobDefinitions",
    "isChild": true,
    "parentType": "Microsoft.StorageMover/storageMovers/projects"
  },
  {
    "file": "Azure::Web::Sites_slots_virtualNetworkConnections_gateways.json",
    "resourceType": "Microsoft.Web/sites/slots/virtualNetworkConnections/gateways",
    "isChild": true,
    "parentType": "Microsoft.Web/sites/slots/virtualNetworkConnections"
  },
  {
    "file": "Azure::IoTOperations::Instances_brokers.json",
    "resourceType": "Microsoft.IoTOperations/instances/brokers",
    "isChild": true,
    "parentType": "Microsoft.IoTOperations/instances"
  },
  {
    "file": "Azure::Attestation::AttestationProviders.json",
    "resourceType": "Microsoft.Attestation/attestationProviders",
    "isChild": false
  },
  {
    "file": "Azure::DevTestLab::Labs.json",
    "resourceType": "Microsoft.DevTestLab/labs",
    "isChild": false
  },
  {
    "file": "Azure::Network::NetworkManagers_routingConfigurations.json",
    "resourceType": "Microsoft.Network/networkManagers/routingConfigurations",
    "isChild": true,
    "parentType": "Microsoft.Network/networkManagers"
  },
  {
    "file": "Azure::AwsConnector::LightsailBuckets.json",
    "resourceType": "Microsoft.AwsConnector/lightsailBuckets",
    "isChild": false
  },
  {
    "file": "Azure::Sql::Servers_databases_auditingSettings.json",
    "resourceType": "Microsoft.Sql/servers/databases/auditingSettings",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers/databases"
  },
  {
    "file": "Azure::DataLakeStore::Accounts_virtualNetworkRules.json",
    "resourceType": "Microsoft.DataLakeStore/accounts/virtualNetworkRules",
    "isChild": true,
    "parentType": "Microsoft.DataLakeStore/accounts"
  },
  {
    "file": "Azure::Network::DnsZones_NS.json",
    "resourceType": "Microsoft.Network/dnszones/NS",
    "isChild": true,
    "parentType": "Microsoft.Network/dnszones"
  },
  {
    "file": "Azure::IotCentral::IotApps_privateEndpointConnections.json",
    "resourceType": "Microsoft.IoTCentral/iotApps/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.IoTCentral/iotApps"
  },
  {
    "file": "Azure::ScVmm::AvailabilitySets.json",
    "resourceType": "Microsoft.ScVmm/availabilitySets",
    "isChild": false
  },
  {
    "file": "Azure::Network::DnsZones_CAA.json",
    "resourceType": "Microsoft.Network/dnsZones/CAA",
    "isChild": true,
    "parentType": "Microsoft.Network/dnsZones"
  },
  {
    "file": "Azure::Network::NetworkProfiles.json",
    "resourceType": "Microsoft.Network/networkProfiles",
    "isChild": false
  },
  {
    "file": "Azure::AppConfiguration::ConfigurationStores.json",
    "resourceType": "Microsoft.AppConfiguration/configurationStores",
    "isChild": false
  },
  {
    "file": "Azure::AwsConnector::Ec2FlowLogs.json",
    "resourceType": "Microsoft.AwsConnector/ec2FlowLogs",
    "isChild": false
  },
  {
    "file": "Azure::NetworkCloud::BareMetalMachines.json",
    "resourceType": "Microsoft.NetworkCloud/bareMetalMachines",
    "isChild": false
  },
  {
    "file": "Azure::Network::NetworkSecurityGroups_securityRules.json",
    "resourceType": "Microsoft.Network/networkSecurityGroups/securityRules",
    "isChild": true,
    "parentType": "Microsoft.Network/networkSecurityGroups"
  },
  {
    "file": "Azure::AzureStackHCI::NetworkInterfaces.json",
    "resourceType": "Microsoft.AzureStackHCI/networkinterfaces",
    "isChild": false
  },
  {
    "file": "Azure::AwsConnector::Wafv2LoggingConfigurations.json",
    "resourceType": "Microsoft.AwsConnector/wafv2LoggingConfigurations",
    "isChild": false
  },
  {
    "file": "Azure::Authorization::RoleDefinitions.json",
    "resourceType": "Microsoft.Authorization/roleDefinitions",
    "isChild": false
  },
  {
    "file": "Azure::AppConfiguration::ConfigurationStores_experimentation.json",
    "resourceType": "Microsoft.AppConfiguration/configurationStores/experimentation",
    "isChild": true,
    "parentType": "Microsoft.AppConfiguration/configurationStores"
  },
  {
    "file": "Azure::AwsConnector::Ec2Ipams.json",
    "resourceType": "Microsoft.AwsConnector/ec2Ipams",
    "isChild": false
  },
  {
    "file": "Azure::Automation::AutomationAccounts_schedules.json",
    "resourceType": "Microsoft.Automation/automationAccounts/schedules",
    "isChild": true,
    "parentType": "Microsoft.Automation/automationAccounts"
  },
  {
    "file": "Azure::Synapse::Workspaces_kustoPools.json",
    "resourceType": "Microsoft.Synapse/workspaces/kustoPools",
    "isChild": true,
    "parentType": "Microsoft.Synapse/workspaces"
  },
  {
    "file": "Azure::Authorization::Locks.json",
    "resourceType": "Microsoft.Authorization/locks",
    "isChild": false
  },
  {
    "file": "Azure::DBforMariaDB::Servers_virtualNetworkRules.json",
    "resourceType": "Microsoft.DBforMariaDB/servers/virtualNetworkRules",
    "isChild": true,
    "parentType": "Microsoft.DBforMariaDB/servers"
  },
  {
    "file": "Azure::OperationalInsights::Workspaces.json",
    "resourceType": "Microsoft.OperationalInsights/workspaces",
    "isChild": false
  },
  {
    "file": "Azure::Compute::HostGroups.json",
    "resourceType": "Microsoft.Compute/hostGroups",
    "isChild": false
  },
  {
    "file": "Azure::Sql::Servers_jobAgents_jobs_executions.json",
    "resourceType": "Microsoft.Sql/servers/jobAgents/jobs/executions",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers/jobAgents/jobs"
  },
  {
    "file": "Azure::ContainerStorage::Pools_volumeSnapshots.json",
    "resourceType": "Microsoft.ContainerStorage/pools/volumeSnapshots",
    "isChild": true,
    "parentType": "Microsoft.ContainerStorage/pools"
  },
  {
    "file": "Azure::ServiceBus::Namespaces.json",
    "resourceType": "Microsoft.ServiceBus/namespaces",
    "isChild": false
  },
  {
    "file": "Azure::RecoveryServices::Vaults_replicationFabrics_replicationProtectionContainers_replicationProtectionContainerMappings.json",
    "resourceType": "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers/replicationProtectionContainerMappings",
    "isChild": true,
    "parentType": "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers"
  },
  {
    "file": "Azure::AzureStackHCI::LogicalNetworks.json",
    "resourceType": "Microsoft.AzureStackHCI/logicalNetworks",
    "isChild": false
  },
  {
    "file": "Azure::DataReplication::ReplicationVaults_alertSettings.json",
    "resourceType": "Microsoft.DataReplication/replicationVaults/alertSettings",
    "isChild": true,
    "parentType": "Microsoft.DataReplication/replicationVaults"
  },
  {
    "file": "Azure::Cdn::CdnWebApplicationFirewallPolicies.json",
    "resourceType": "Microsoft.Cdn/cdnWebApplicationFirewallPolicies",
    "isChild": false
  },
  {
    "file": "Azure::NetworkCloud::L2Networks.json",
    "resourceType": "Microsoft.NetworkCloud/l2Networks",
    "isChild": false
  },
  {
    "file": "Azure::VirtualMachineImages::ImageTemplates_triggers.json",
    "resourceType": "Microsoft.VirtualMachineImages/imageTemplates/triggers",
    "isChild": true,
    "parentType": "Microsoft.VirtualMachineImages/imageTemplates"
  },
  {
    "file": "Azure::Synapse::Workspaces_dedicatedSQLminimalTlsSettings.json",
    "resourceType": "Microsoft.Synapse/workspaces/dedicatedSQLminimalTlsSettings",
    "isChild": true,
    "parentType": "Microsoft.Synapse/workspaces"
  },
  {
    "file": "Azure::Network::SecurityPartnerProviders.json",
    "resourceType": "Microsoft.Network/securityPartnerProviders",
    "isChild": false
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_cassandraRoleDefinitions.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/cassandraRoleDefinitions",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts"
  },
  {
    "file": "Azure::AwsConnector::EfsFileSystems.json",
    "resourceType": "Microsoft.AwsConnector/efsFileSystems",
    "isChild": false
  },
  {
    "file": "Azure::NGINXPLUS::NginxDeployments_certificates.json",
    "resourceType": "Nginx.NginxPlus/nginxDeployments/certificates",
    "isChild": true,
    "parentType": "Nginx.NginxPlus/nginxDeployments"
  },
  {
    "file": "Azure::StorSimple::Managers_devices_chapSettings.json",
    "resourceType": "Microsoft.StorSimple/managers/devices/chapSettings",
    "isChild": true,
    "parentType": "Microsoft.StorSimple/managers/devices"
  },
  {
    "file": "Azure::MachineLearningExperimentation::Accounts_workspaces.json",
    "resourceType": "Microsoft.MachineLearningExperimentation/accounts/workspaces",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningExperimentation/accounts"
  },
  {
    "file": "Azure::Network::ExpressRoutePorts_authorizations.json",
    "resourceType": "Microsoft.Network/expressRoutePorts/authorizations",
    "isChild": true,
    "parentType": "Microsoft.Network/expressRoutePorts"
  },
  {
    "file": "Azure::Kusto::Clusters_principalAssignments.json",
    "resourceType": "Microsoft.Kusto/clusters/principalAssignments",
    "isChild": true,
    "parentType": "Microsoft.Kusto/clusters"
  },
  {
    "file": "Azure::Aadiam::PrivateLinkForAzureAd.json",
    "resourceType": "microsoft.aadiam/privateLinkForAzureAd",
    "isChild": false
  },
  {
    "file": "Azure::IoTOperationsDataProcessor::Instances_datasets.json",
    "resourceType": "Microsoft.IoTOperationsDataProcessor/instances/datasets",
    "isChild": true,
    "parentType": "Microsoft.IoTOperationsDataProcessor/instances"
  },
  {
    "file": "Azure::OperationsManagement::Solutions.json",
    "resourceType": "Microsoft.OperationsManagement/solutions",
    "isChild": false
  },
  {
    "file": "Azure::Network::LoadBalancers_inboundNatRules.json",
    "resourceType": "Microsoft.Network/loadBalancers/inboundNatRules",
    "isChild": true,
    "parentType": "Microsoft.Network/loadBalancers"
  },
  {
    "file": "Azure::Sql::Servers_firewallRules.json",
    "resourceType": "Microsoft.Sql/servers/firewallRules",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers"
  },
  {
    "file": "Azure::EventGrid::SystemTopics.json",
    "resourceType": "Microsoft.EventGrid/systemTopics",
    "isChild": false
  },
  {
    "file": "Azure::ContainerRegistry::Registries_credentialSets.json",
    "resourceType": "Microsoft.ContainerRegistry/registries/credentialSets",
    "isChild": true,
    "parentType": "Microsoft.ContainerRegistry/registries"
  },
  {
    "file": "Azure::Web::HostingEnvironments.json",
    "resourceType": "Microsoft.Web/hostingEnvironments",
    "isChild": false
  },
  {
    "file": "Azure::MobilePacketCore::NssfDeployments.json",
    "resourceType": "Microsoft.MobilePacketCore/nssfDeployments",
    "isChild": false
  },
  {
    "file": "Azure::Peering::PeeringServices_connectionMonitorTests.json",
    "resourceType": "Microsoft.Peering/peeringServices/connectionMonitorTests",
    "isChild": true,
    "parentType": "Microsoft.Peering/peeringServices"
  },
  {
    "file": "Azure::Portal::Dashboards.json",
    "resourceType": "Microsoft.Portal/dashboards",
    "isChild": false
  },
  {
    "file": "Azure::Automation::AutomationAccounts_certificates.json",
    "resourceType": "Microsoft.Automation/automationAccounts/certificates",
    "isChild": true,
    "parentType": "Microsoft.Automation/automationAccounts"
  },
  {
    "file": "Azure::Relay::Namespaces_wcfRelays_authorizationRules.json",
    "resourceType": "Microsoft.Relay/namespaces/WcfRelays/authorizationRules",
    "isChild": true,
    "parentType": "Microsoft.Relay/namespaces/WcfRelays"
  },
  {
    "file": "Azure::MobileNetwork::SimGroups_sims.json",
    "resourceType": "Microsoft.MobileNetwork/simGroups/sims",
    "isChild": true,
    "parentType": "Microsoft.MobileNetwork/simGroups"
  },
  {
    "file": "Azure::Communication::EmailServices_domains.json",
    "resourceType": "Microsoft.Communication/emailServices/domains",
    "isChild": true,
    "parentType": "Microsoft.Communication/emailServices"
  },
  {
    "file": "Azure::Web::StaticSites.json",
    "resourceType": "Microsoft.Web/staticSites",
    "isChild": false
  },
  {
    "file": "Azure::ContainerService::Fleets_autoUpgradeProfiles.json",
    "resourceType": "Microsoft.ContainerService/fleets/autoUpgradeProfiles",
    "isChild": true,
    "parentType": "Microsoft.ContainerService/fleets"
  },
  {
    "file": "Azure::MobileNetwork::MobileNetworks_sites.json",
    "resourceType": "Microsoft.MobileNetwork/mobileNetworks/sites",
    "isChild": true,
    "parentType": "Microsoft.MobileNetwork/mobileNetworks"
  },
  {
    "file": "Azure::DBforPostgreSQL::FlexibleServers_privateEndpointConnections.json",
    "resourceType": "Microsoft.DBforPostgreSQL/flexibleServers/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.DBforPostgreSQL/flexibleServers"
  },
  {
    "file": "Azure::Migrate::AssessmentProjects_vmwarecollectors.json",
    "resourceType": "Microsoft.Migrate/assessmentProjects/vmwarecollectors",
    "isChild": true,
    "parentType": "Microsoft.Migrate/assessmentProjects"
  },
  {
    "file": "Azure::KubernetesConfiguration::PrivateLinkScopes.json",
    "resourceType": "Microsoft.KubernetesConfiguration/privateLinkScopes",
    "isChild": false
  },
  {
    "file": "Azure::AnalysisServices::Servers.json",
    "resourceType": "Microsoft.AnalysisServices/servers",
    "isChild": false
  },
  {
    "file": "Azure::ApiCenter::Services_workspaces_apis_versions.json",
    "resourceType": "Microsoft.ApiCenter/services/workspaces/apis/versions",
    "isChild": true,
    "parentType": "Microsoft.ApiCenter/services/workspaces/apis"
  },
  {
    "file": "Azure::ApiManagement::Service_apis_releases.json",
    "resourceType": "Microsoft.ApiManagement/service/apis/releases",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/apis"
  },
  {
    "file": "Azure::Synapse::Workspaces_kustoPools_databases_principalAssignments.json",
    "resourceType": "Microsoft.Synapse/workspaces/kustoPools/databases/principalAssignments",
    "isChild": true,
    "parentType": "Microsoft.Synapse/workspaces/kustoPools/databases"
  },
  {
    "file": "Azure::DevTestLab::Labs_users_servicefabrics_schedules.json",
    "resourceType": "Microsoft.DevTestLab/labs/users/servicefabrics/schedules",
    "isChild": true,
    "parentType": "Microsoft.DevTestLab/labs/users/servicefabrics"
  },
  {
    "file": "Azure::Automation::AutomationAccounts_privateEndpointConnections.json",
    "resourceType": "Microsoft.Automation/automationAccounts/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.Automation/automationAccounts"
  },
  {
    "file": "Azure::EventGrid::Topics_eventSubscriptions.json",
    "resourceType": "Microsoft.EventGrid/topics/eventSubscriptions",
    "isChild": true,
    "parentType": "Microsoft.EventGrid/topics"
  },
  {
    "file": "Azure::AwsConnector::SsmResourceComplianceSummaryItems.json",
    "resourceType": "Microsoft.AwsConnector/ssmResourceComplianceSummaryItems",
    "isChild": false
  },
  {
    "file": "Azure::AwsConnector::Ec2SecurityGroups.json",
    "resourceType": "Microsoft.AwsConnector/ec2SecurityGroups",
    "isChild": false
  },
  {
    "file": "Azure::DatabaseFleetManager::Fleets_fleetspaces_databases.json",
    "resourceType": "Microsoft.DatabaseFleetManager/fleets/fleetspaces/databases",
    "isChild": true,
    "parentType": "Microsoft.DatabaseFleetManager/fleets/fleetspaces"
  },
  {
    "file": "Azure::ServiceBus::Namespaces_AuthorizationRules.json",
    "resourceType": "Microsoft.ServiceBus/namespaces/AuthorizationRules",
    "isChild": true,
    "parentType": "Microsoft.ServiceBus/namespaces"
  },
  {
    "file": "Azure::ConnectedVMwarevSphere::VirtualMachines.json",
    "resourceType": "Microsoft.ConnectedVMwarevSphere/virtualMachines",
    "isChild": false
  },
  {
    "file": "Azure::DataReplication::ReplicationVaults_privateEndpointConnections.json",
    "resourceType": "Microsoft.DataReplication/replicationVaults/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.DataReplication/replicationVaults"
  },
  {
    "file": "Azure::Search::SearchServices_sharedPrivateLinkResources.json",
    "resourceType": "Microsoft.Search/searchServices/sharedPrivateLinkResources",
    "isChild": true,
    "parentType": "Microsoft.Search/searchServices"
  },
  {
    "file": "Azure::Sql::Servers_databases_sqlVulnerabilityAssessments_baselines_rules.json",
    "resourceType": "Microsoft.Sql/servers/databases/sqlVulnerabilityAssessments/baselines/rules",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers/databases/sqlVulnerabilityAssessments/baselines"
  },
  {
    "file": "Azure::AzureStackHCI::VirtualMachines_guestAgents.json",
    "resourceType": "Microsoft.AzureStackHCI/virtualMachines/guestAgents",
    "isChild": true,
    "parentType": "Microsoft.AzureStackHCI/virtualMachines"
  },
  {
    "file": "Azure::AwsConnector::Ec2Volumes.json",
    "resourceType": "Microsoft.AwsConnector/ec2Volumes",
    "isChild": false
  },
  {
    "file": "Azure::Devices::IotHubs_privateEndpointConnections.json",
    "resourceType": "Microsoft.Devices/iotHubs/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.Devices/iotHubs"
  },
  {
    "file": "Azure::DBforMySQL::Servers_configurations.json",
    "resourceType": "Microsoft.DBforMySQL/servers/configurations",
    "isChild": true,
    "parentType": "Microsoft.DBforMySQL/servers"
  },
  {
    "file": "Azure::EngagementFabric::Accounts.json",
    "resourceType": "Microsoft.EngagementFabric/Accounts",
    "isChild": false
  },
  {
    "file": "Azure::SecretSyncController::AzureKeyVaultSecretProviderClasses.json",
    "resourceType": "Microsoft.SecretSyncController/azureKeyVaultSecretProviderClasses",
    "isChild": false
  },
  {
    "file": "Azure::M365SecurityAndCompliance::PrivateLinkServicesForM365ComplianceCenter_privateEndpointConnections.json",
    "resourceType": "Microsoft.M365SecurityAndCompliance/privateLinkServicesForM365ComplianceCenter/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.M365SecurityAndCompliance/privateLinkServicesForM365ComplianceCenter"
  },
  {
    "file": "Azure::DocumentDB::MongoClusters.json",
    "resourceType": "Microsoft.DocumentDB/mongoClusters",
    "isChild": false
  },
  {
    "file": "Azure::Network::DnsZones_NAPTR.json",
    "resourceType": "Microsoft.Network/dnsZones/NAPTR",
    "isChild": true,
    "parentType": "Microsoft.Network/dnsZones"
  },
  {
    "file": "Azure::EventGrid::Domains.json",
    "resourceType": "Microsoft.EventGrid/domains",
    "isChild": false
  },
  {
    "file": "Azure::Web::Serverfarms_virtualNetworkConnections_gateways.json",
    "resourceType": "Microsoft.Web/serverfarms/virtualNetworkConnections/gateways",
    "isChild": true,
    "parentType": "Microsoft.Web/serverfarms/virtualNetworkConnections"
  },
  {
    "file": "Azure::Network::NetworkSecurityPerimeters_profiles_accessRules.json",
    "resourceType": "Microsoft.Network/networkSecurityPerimeters/profiles/accessRules",
    "isChild": true,
    "parentType": "Microsoft.Network/networkSecurityPerimeters/profiles"
  },
  {
    "file": "Azure::Migrate::AssessmentProjects_groups_webAppAssessments.json",
    "resourceType": "Microsoft.Migrate/assessmentProjects/groups/webAppAssessments",
    "isChild": true,
    "parentType": "Microsoft.Migrate/assessmentProjects/groups"
  },
  {
    "file": "Azure::DocumentDB::CassandraClusters_dataCenters.json",
    "resourceType": "Microsoft.DocumentDB/cassandraClusters/dataCenters",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/cassandraClusters"
  },
  {
    "file": "Azure::ContainerService::ManagedClusters_managedNamespaces.json",
    "resourceType": "Microsoft.ContainerService/managedClusters/managedNamespaces",
    "isChild": true,
    "parentType": "Microsoft.ContainerService/managedClusters"
  },
  {
    "file": "Azure::AzureLargeInstance::AzureLargeInstances.json",
    "resourceType": "Microsoft.AzureLargeInstance/azureLargeInstances",
    "isChild": false
  },
  {
    "file": "Azure::Logz::Monitors_metricsSource_tagRules.json",
    "resourceType": "Microsoft.Logz/monitors/metricsSource/tagRules",
    "isChild": true,
    "parentType": "Microsoft.Logz/monitors/metricsSource"
  },
  {
    "file": "Azure::Migrate::AssessmentProjects_sqlcollectors.json",
    "resourceType": "Microsoft.Migrate/assessmentProjects/sqlcollectors",
    "isChild": true,
    "parentType": "Microsoft.Migrate/assessmentProjects"
  },
  {
    "file": "Azure::Network::PrivateDnsZones_A.json",
    "resourceType": "Microsoft.Network/privateDnsZones/A",
    "isChild": true,
    "parentType": "Microsoft.Network/privateDnsZones"
  },
  {
    "file": "Azure::ContainerService::ManagedClusters_namespaces.json",
    "resourceType": "Microsoft.ContainerService/managedClusters/namespaces",
    "isChild": true,
    "parentType": "Microsoft.ContainerService/managedClusters"
  },
  {
    "file": "Azure::ScVmm::VirtualMachines_guestAgents.json",
    "resourceType": "Microsoft.ScVmm/virtualMachines/guestAgents",
    "isChild": true,
    "parentType": "Microsoft.ScVmm/virtualMachines"
  },
  {
    "file": "Azure::Automation::AutomationAccounts_sourceControls_sourceControlSyncJobs.json",
    "resourceType": "Microsoft.Automation/automationAccounts/sourceControls/sourceControlSyncJobs",
    "isChild": true,
    "parentType": "Microsoft.Automation/automationAccounts/sourceControls"
  },
  {
    "file": "Azure::Compute::VirtualMachines_extensions.json",
    "resourceType": "Microsoft.Compute/virtualMachines/extensions",
    "isChild": true,
    "parentType": "Microsoft.Compute/virtualMachines"
  },
  {
    "file": "Azure::AwsConnector::NetworkFirewallFirewallPolicies.json",
    "resourceType": "Microsoft.AwsConnector/networkFirewallFirewallPolicies",
    "isChild": false
  },
  {
    "file": "Azure::Web::Sites_slots_privateAccess.json",
    "resourceType": "Microsoft.Web/sites/slots/privateAccess",
    "isChild": true,
    "parentType": "Microsoft.Web/sites/slots"
  },
  {
    "file": "Azure::DataProtection::BackupVaults.json",
    "resourceType": "Microsoft.DataProtection/backupVaults",
    "isChild": false
  },
  {
    "file": "Azure::AzureStack::Registrations_customerSubscriptions.json",
    "resourceType": "Microsoft.AzureStack/registrations/customerSubscriptions",
    "isChild": true,
    "parentType": "Microsoft.AzureStack/registrations"
  },
  {
    "file": "Azure::ApiManagement::Service_gateways_apis.json",
    "resourceType": "Microsoft.ApiManagement/service/gateways/apis",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/gateways"
  },
  {
    "file": "Azure::NetApp::NetAppAccounts.json",
    "resourceType": "Microsoft.NetApp/netAppAccounts",
    "isChild": false
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_tables_throughputSettings.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/tables/throughputSettings",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts/tables"
  },
  {
    "file": "Azure::Network::LoadBalancers.json",
    "resourceType": "Microsoft.Network/loadBalancers",
    "isChild": false
  },
  {
    "file": "Azure::NetApp::NetAppAccounts_capacityPools.json",
    "resourceType": "Microsoft.NetApp/netAppAccounts/capacityPools",
    "isChild": true,
    "parentType": "Microsoft.NetApp/netAppAccounts"
  },
  {
    "file": "Azure::NotificationHubs::Namespaces_notificationHubs_authorizationRules.json",
    "resourceType": "Microsoft.NotificationHubs/namespaces/notificationHubs/AuthorizationRules",
    "isChild": true,
    "parentType": "Microsoft.NotificationHubs/namespaces/notificationHubs"
  },
  {
    "file": "Azure::CognitiveServices::Accounts_commitmentPlans.json",
    "resourceType": "Microsoft.CognitiveServices/accounts/commitmentPlans",
    "isChild": true,
    "parentType": "Microsoft.CognitiveServices/accounts"
  },
  {
    "file": "Azure::Migrate::MoveCollections.json",
    "resourceType": "Microsoft.Migrate/moveCollections",
    "isChild": false
  },
  {
    "file": "Azure::ContainerInstance::ContainerGroups.json",
    "resourceType": "Microsoft.ContainerInstance/containerGroups",
    "isChild": false
  },
  {
    "file": "Azure::Dynamics365Fraudprotection::Instances.json",
    "resourceType": "Microsoft.Dynamics365FraudProtection/instances",
    "isChild": false
  },
  {
    "file": "Azure::Synapse::Workspaces_sqlPools_metadataSync.json",
    "resourceType": "Microsoft.Synapse/workspaces/sqlPools/metadataSync",
    "isChild": true,
    "parentType": "Microsoft.Synapse/workspaces/sqlPools"
  },
  {
    "file": "Azure::Workloads::PhpWorkloads.json",
    "resourceType": "Microsoft.Workloads/phpWorkloads",
    "isChild": false
  },
  {
    "file": "Azure::Sql::ManagedInstances_databases_backupShortTermRetentionPolicies.json",
    "resourceType": "Microsoft.Sql/managedInstances/databases/backupShortTermRetentionPolicies",
    "isChild": true,
    "parentType": "Microsoft.Sql/managedInstances/databases"
  },
  {
    "file": "Azure::AwsConnector::ElasticLoadBalancingV2LoadBalancers.json",
    "resourceType": "Microsoft.AwsConnector/elasticLoadBalancingV2LoadBalancers",
    "isChild": false
  },
  {
    "file": "Azure::AwsConnector::LightsailInstances.json",
    "resourceType": "Microsoft.AwsConnector/lightsailInstances",
    "isChild": false
  },
  {
    "file": "Azure::StorageCache::AmlFilesystems_autoExportJobs.json",
    "resourceType": "Microsoft.StorageCache/amlFilesystems/autoExportJobs",
    "isChild": true,
    "parentType": "Microsoft.StorageCache/amlFilesystems"
  },
  {
    "file": "Azure::ManagedNetworkFabric::AccessControlLists.json",
    "resourceType": "Microsoft.ManagedNetworkFabric/accessControlLists",
    "isChild": false
  },
  {
    "file": "Azure::FluidRelay::FluidRelayServers.json",
    "resourceType": "Microsoft.FluidRelay/fluidRelayServers",
    "isChild": false
  },
  {
    "file": "Azure::AppConfiguration::ConfigurationStores_snapshots.json",
    "resourceType": "Microsoft.AppConfiguration/configurationStores/snapshots",
    "isChild": true,
    "parentType": "Microsoft.AppConfiguration/configurationStores"
  },
  {
    "file": "Azure::DataReplication::ReplicationVaults_replicationPolicies.json",
    "resourceType": "Microsoft.DataReplication/replicationVaults/replicationPolicies",
    "isChild": true,
    "parentType": "Microsoft.DataReplication/replicationVaults"
  },
  {
    "file": "Azure::StorSimple::Managers_devices_volumeContainers_volumes.json",
    "resourceType": "Microsoft.StorSimple/managers/devices/volumeContainers/volumes",
    "isChild": true,
    "parentType": "Microsoft.StorSimple/managers/devices/volumeContainers"
  },
  {
    "file": "Azure::Insights::Components_analyticsItems.json",
    "resourceType": "microsoft.insights/components/analyticsItems",
    "isChild": true,
    "parentType": "microsoft.insights/components"
  },
  {
    "file": "Azure::Search::SearchServices.json",
    "resourceType": "Microsoft.Search/searchServices",
    "isChild": false
  },
  {
    "file": "Azure::Peering::PeeringServices_prefixes.json",
    "resourceType": "Microsoft.Peering/peeringServices/prefixes",
    "isChild": true,
    "parentType": "Microsoft.Peering/peeringServices"
  },
  {
    "file": "Azure::LabServices::Labaccounts_galleryimages.json",
    "resourceType": "Microsoft.LabServices/labaccounts/galleryimages",
    "isChild": true,
    "parentType": "Microsoft.LabServices/labaccounts"
  },
  {
    "file": "Azure::Kusto::Clusters_databases_dataConnections.json",
    "resourceType": "Microsoft.Kusto/clusters/databases/dataConnections",
    "isChild": true,
    "parentType": "Microsoft.Kusto/clusters/databases"
  },
  {
    "file": "Azure::AzureStackHCI::Clusters_deploymentSettings.json",
    "resourceType": "Microsoft.AzureStackHCI/clusters/deploymentSettings",
    "isChild": true,
    "parentType": "Microsoft.AzureStackHCI/clusters"
  },
  {
    "file": "Azure::Network::NetworkManagers_securityAdminConfigurations_ruleCollections_rules.json",
    "resourceType": "Microsoft.Network/networkManagers/securityAdminConfigurations/ruleCollections/rules",
    "isChild": true,
    "parentType": "Microsoft.Network/networkManagers/securityAdminConfigurations/ruleCollections"
  },
  {
    "file": "Azure::HybridNetwork::Sites.json",
    "resourceType": "Microsoft.HybridNetwork/sites",
    "isChild": false
  },
  {
    "file": "Azure::AwsConnector::NetworkFirewallRuleGroups.json",
    "resourceType": "Microsoft.AwsConnector/networkFirewallRuleGroups",
    "isChild": false
  },
  {
    "file": "Azure::DependencyMap::Maps.json",
    "resourceType": "Microsoft.DependencyMap/maps",
    "isChild": false
  },
  {
    "file": "Azure::StreamAnalytics::Streamingjobs_outputs.json",
    "resourceType": "Microsoft.StreamAnalytics/streamingjobs/outputs",
    "isChild": true,
    "parentType": "Microsoft.StreamAnalytics/streamingjobs"
  },
  {
    "file": "Azure::Sql::ManagedInstances_dnsAliases.json",
    "resourceType": "Microsoft.Sql/managedInstances/dnsAliases",
    "isChild": true,
    "parentType": "Microsoft.Sql/managedInstances"
  },
  {
    "file": "Azure::Web::Sites_slots_sitecontainers.json",
    "resourceType": "Microsoft.Web/sites/slots/sitecontainers",
    "isChild": true,
    "parentType": "Microsoft.Web/sites/slots"
  },
  {
    "file": "Azure::HybridCompute::Licenses.json",
    "resourceType": "Microsoft.HybridCompute/licenses",
    "isChild": false
  },
  {
    "file": "Azure::CognitiveServices::Accounts_raiBlocklists.json",
    "resourceType": "Microsoft.CognitiveServices/accounts/raiBlocklists",
    "isChild": true,
    "parentType": "Microsoft.CognitiveServices/accounts"
  },
  {
    "file": "Azure::Databricks::Workspaces.json",
    "resourceType": "Microsoft.Databricks/workspaces",
    "isChild": false
  },
  {
    "file": "Azure::Syntex::DocumentProcessors.json",
    "resourceType": "Microsoft.Syntex/documentProcessors",
    "isChild": false
  },
  {
    "file": "Azure::MixedReality::RemoteRenderingAccounts.json",
    "resourceType": "Microsoft.MixedReality/remoteRenderingAccounts",
    "isChild": false
  },
  {
    "file": "Azure::Media::Mediaservices_liveEvents_liveOutputs.json",
    "resourceType": "Microsoft.Media/mediaservices/liveEvents/liveOutputs",
    "isChild": true,
    "parentType": "Microsoft.Media/mediaservices/liveEvents"
  },
  {
    "file": "Azure::Automanage::ConfigurationProfilePreferences.json",
    "resourceType": "Microsoft.Automanage/configurationProfilePreferences",
    "isChild": false
  },
  {
    "file": "Azure::Network::NetworkSecurityPerimeters_resourceAssociations.json",
    "resourceType": "Microsoft.Network/networkSecurityPerimeters/resourceAssociations",
    "isChild": true,
    "parentType": "Microsoft.Network/networkSecurityPerimeters"
  },
  {
    "file": "Azure::EventHub::Namespaces_eventhubs_consumergroups.json",
    "resourceType": "Microsoft.EventHub/namespaces/eventhubs/consumergroups",
    "isChild": true,
    "parentType": "Microsoft.EventHub/namespaces/eventhubs"
  },
  {
    "file": "Azure::Web::Serverfarms.json",
    "resourceType": "Microsoft.Web/serverfarms",
    "isChild": false
  },
  {
    "file": "Azure::ApiManagement::Service_policyRestrictions.json",
    "resourceType": "Microsoft.ApiManagement/service/policyRestrictions",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service"
  },
  {
    "file": "Azure::TestBase::TestBaseAccounts_imageDefinitions.json",
    "resourceType": "Microsoft.TestBase/testBaseAccounts/imageDefinitions",
    "isChild": true,
    "parentType": "Microsoft.TestBase/testBaseAccounts"
  },
  {
    "file": "Azure::CertificateRegistration::CertificateOrders_certificates.json",
    "resourceType": "Microsoft.CertificateRegistration/certificateOrders/certificates",
    "isChild": true,
    "parentType": "Microsoft.CertificateRegistration/certificateOrders"
  },
  {
    "file": "Azure::ApiManagement::Service_apis_operations_tags.json",
    "resourceType": "Microsoft.ApiManagement/service/apis/operations/tags",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/apis/operations"
  },
  {
    "file": "Azure::StorageSync::StorageSyncServices_privateEndpointConnections.json",
    "resourceType": "Microsoft.StorageSync/storageSyncServices/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.StorageSync/storageSyncServices"
  },
  {
    "file": "Azure::EventGrid::Domains_topics_eventSubscriptions.json",
    "resourceType": "Microsoft.EventGrid/domains/topics/eventSubscriptions",
    "isChild": true,
    "parentType": "Microsoft.EventGrid/domains/topics"
  },
  {
    "file": "Azure::Cache::RedisEnterprise.json",
    "resourceType": "Microsoft.Cache/redisEnterprise",
    "isChild": false
  },
  {
    "file": "Azure::ProgrammableConnectivity::Gateways.json",
    "resourceType": "Microsoft.ProgrammableConnectivity/gateways",
    "isChild": false
  },
  {
    "file": "Azure::ConnectedVMwarevSphere::Datastores.json",
    "resourceType": "Microsoft.ConnectedVMwarevSphere/datastores",
    "isChild": false
  },
  {
    "file": "Azure::Compute::DiskAccesses.json",
    "resourceType": "Microsoft.Compute/diskAccesses",
    "isChild": false
  },
  {
    "file": "Azure::CodeSigning::CodeSigningAccounts.json",
    "resourceType": "Microsoft.CodeSigning/codeSigningAccounts",
    "isChild": false
  },
  {
    "file": "Azure::BatchAI::Workspaces_clusters.json",
    "resourceType": "Microsoft.BatchAI/workspaces/clusters",
    "isChild": true,
    "parentType": "Microsoft.BatchAI/workspaces"
  },
  {
    "file": "Azure::Security::SecurityConnectors_devops.json",
    "resourceType": "Microsoft.Security/securityConnectors/devops",
    "isChild": true,
    "parentType": "Microsoft.Security/securityConnectors"
  },
  {
    "file": "Azure::ScVmm::VmmServers_inventoryItems.json",
    "resourceType": "Microsoft.ScVmm/vmmServers/inventoryItems",
    "isChild": true,
    "parentType": "Microsoft.ScVmm/vmmServers"
  },
  {
    "file": "Azure::VoiceServices::CommunicationsGateways_testLines.json",
    "resourceType": "Microsoft.VoiceServices/communicationsGateways/testLines",
    "isChild": true,
    "parentType": "Microsoft.VoiceServices/communicationsGateways"
  },
  {
    "file": "Azure::ScVmm::VirtualMachines.json",
    "resourceType": "Microsoft.ScVmm/virtualMachines",
    "isChild": false
  },
  {
    "file": "Azure::VectorDb::Organizations.json",
    "resourceType": "Pinecone.VectorDb/organizations",
    "isChild": false
  },
  {
    "file": "Azure::IoTOperationsMQ::Mq_mqttBridgeConnector_topicMap.json",
    "resourceType": "Microsoft.IoTOperationsMQ/mq/mqttBridgeConnector/topicMap",
    "isChild": true,
    "parentType": "Microsoft.IoTOperationsMQ/mq/mqttBridgeConnector"
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_cassandraKeyspaces_throughputSettings.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/throughputSettings",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces"
  },
  {
    "file": "Azure::Synapse::Workspaces_kustoPools_databases.json",
    "resourceType": "Microsoft.Synapse/workspaces/kustoPools/databases",
    "isChild": true,
    "parentType": "Microsoft.Synapse/workspaces/kustoPools"
  },
  {
    "file": "Azure::ApiManagement::Service_portalRevisions.json",
    "resourceType": "Microsoft.ApiManagement/service/portalRevisions",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service"
  },
  {
    "file": "Azure::NetworkCloud::HybridAksClusters.json",
    "resourceType": "Microsoft.NetworkCloud/hybridAksClusters",
    "isChild": false
  },
  {
    "file": "Azure::Web::Csrs.json",
    "resourceType": "Microsoft.Web/csrs",
    "isChild": false
  },
  {
    "file": "Azure::Network::PrivateDnsZones_virtualNetworkLinks.json",
    "resourceType": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
    "isChild": true,
    "parentType": "Microsoft.Network/privateDnsZones"
  },
  {
    "file": "Azure::ApiManagement::Service_workspaces_notifications.json",
    "resourceType": "Microsoft.ApiManagement/service/workspaces/notifications",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/workspaces"
  },
  {
    "file": "Azure::VMwareVirtustream::PrivateClouds_clusters.json",
    "resourceType": "Microsoft.VMwareVirtustream/privateClouds/clusters",
    "isChild": true,
    "parentType": "Microsoft.VMwareVirtustream/privateClouds"
  },
  {
    "file": "Azure::Network::Trafficmanagerprofiles_NestedEndpoints.json",
    "resourceType": "Microsoft.Network/trafficmanagerprofiles/NestedEndpoints",
    "isChild": true,
    "parentType": "Microsoft.Network/trafficmanagerprofiles"
  },
  {
    "file": "Azure::Media::VideoAnalyzers_edgeModules.json",
    "resourceType": "Microsoft.Media/videoAnalyzers/edgeModules",
    "isChild": true,
    "parentType": "Microsoft.Media/videoAnalyzers"
  },
  {
    "file": "Azure::DevCenter::Projects_pools_schedules.json",
    "resourceType": "Microsoft.DevCenter/projects/pools/schedules",
    "isChild": true,
    "parentType": "Microsoft.DevCenter/projects/pools"
  },
  {
    "file": "Azure::Synapse::Workspaces_auditingSettings.json",
    "resourceType": "Microsoft.Synapse/workspaces/auditingSettings",
    "isChild": true,
    "parentType": "Microsoft.Synapse/workspaces"
  },
  {
    "file": "Azure::OffAzureSpringBoot::Springbootsites_springbootapps.json",
    "resourceType": "Microsoft.OffAzureSpringBoot/springbootsites/springbootapps",
    "isChild": true,
    "parentType": "Microsoft.OffAzureSpringBoot/springbootsites"
  },
  {
    "file": "Azure::AwsConnector::S3ControlMultiRegionAccessPointPolicyDocuments.json",
    "resourceType": "Microsoft.AwsConnector/s3ControlMultiRegionAccessPointPolicyDocuments",
    "isChild": false
  },
  {
    "file": "Azure::RecoveryServices::Vaults_replicationVaultSettings.json",
    "resourceType": "Microsoft.RecoveryServices/vaults/replicationVaultSettings",
    "isChild": true,
    "parentType": "Microsoft.RecoveryServices/vaults"
  },
  {
    "file": "Azure::AppPlatform::Spring_monitoringSettings.json",
    "resourceType": "Microsoft.AppPlatform/Spring/monitoringSettings",
    "isChild": true,
    "parentType": "Microsoft.AppPlatform/Spring"
  },
  {
    "file": "Azure::Cdn::Profiles_originGroups_origins.json",
    "resourceType": "Microsoft.Cdn/profiles/originGroups/origins",
    "isChild": true,
    "parentType": "Microsoft.Cdn/profiles/originGroups"
  },
  {
    "file": "Azure::Sql::Servers_databases_workloadGroups_workloadClassifiers.json",
    "resourceType": "Microsoft.Sql/servers/databases/workloadGroups/workloadClassifiers",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers/databases/workloadGroups"
  },
  {
    "file": "Azure::Sql::ManagedInstances_encryptionProtector.json",
    "resourceType": "Microsoft.Sql/managedInstances/encryptionProtector",
    "isChild": true,
    "parentType": "Microsoft.Sql/managedInstances"
  },
  {
    "file": "Azure::MobileNetwork::PacketCoreControlPlanes_packetCoreDataPlanes_attachedDataNetworks.json",
    "resourceType": "Microsoft.MobileNetwork/packetCoreControlPlanes/packetCoreDataPlanes/attachedDataNetworks",
    "isChild": true,
    "parentType": "Microsoft.MobileNetwork/packetCoreControlPlanes/packetCoreDataPlanes"
  },
  {
    "file": "Azure::MachineLearningServices::Workspaces_linkedServices.json",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/linkedServices",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/workspaces"
  },
  {
    "file": "Azure::AVS::PrivateClouds_addons.json",
    "resourceType": "Microsoft.AVS/privateClouds/addons",
    "isChild": true,
    "parentType": "Microsoft.AVS/privateClouds"
  },
  {
    "file": "Azure::ApiManagement::Service_workspaces_notifications_recipientUsers.json",
    "resourceType": "Microsoft.ApiManagement/service/workspaces/notifications/recipientUsers",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/workspaces/notifications"
  },
  {
    "file": "Azure::Sql::Servers_databases_auditingPolicies.json",
    "resourceType": "Microsoft.Sql/servers/databases/auditingPolicies",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers/databases"
  },
  {
    "file": "Azure::AwsConnector::EksNodegroups.json",
    "resourceType": "Microsoft.AwsConnector/eksNodegroups",
    "isChild": false
  },
  {
    "file": "Azure::AwsConnector::DynamoDBTables.json",
    "resourceType": "Microsoft.AwsConnector/dynamoDBTables",
    "isChild": false
  },
  {
    "file": "Azure::EventGrid::Namespaces_permissionBindings.json",
    "resourceType": "Microsoft.EventGrid/namespaces/permissionBindings",
    "isChild": true,
    "parentType": "Microsoft.EventGrid/namespaces"
  },
  {
    "file": "Azure::DocumentDB::MongoClusters_firewallRules.json",
    "resourceType": "Microsoft.DocumentDB/mongoClusters/firewallRules",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/mongoClusters"
  },
  {
    "file": "Azure::Workloads::SapVirtualInstances_centralInstances.json",
    "resourceType": "Microsoft.Workloads/sapVirtualInstances/centralInstances",
    "isChild": true,
    "parentType": "Microsoft.Workloads/sapVirtualInstances"
  },
  {
    "file": "Azure::AppPlatform::Spring_apiPortals.json",
    "resourceType": "Microsoft.AppPlatform/Spring/apiPortals",
    "isChild": true,
    "parentType": "Microsoft.AppPlatform/Spring"
  },
  {
    "file": "Azure::ContainerRegistry::Registries_webhooks.json",
    "resourceType": "Microsoft.ContainerRegistry/registries/webhooks",
    "isChild": true,
    "parentType": "Microsoft.ContainerRegistry/registries"
  },
  {
    "file": "Azure::HybridNetwork::Publishers_networkServiceDesignGroups_networkServiceDesignVersions.json",
    "resourceType": "Microsoft.HybridNetwork/publishers/networkServiceDesignGroups/networkServiceDesignVersions",
    "isChild": true,
    "parentType": "Microsoft.HybridNetwork/publishers/networkServiceDesignGroups"
  },
  {
    "file": "Azure::TestBase::TestBaseAccounts_packages.json",
    "resourceType": "Microsoft.TestBase/testBaseAccounts/packages",
    "isChild": true,
    "parentType": "Microsoft.TestBase/testBaseAccounts"
  },
  {
    "file": "Azure::DataShare::Accounts_shareSubscriptions.json",
    "resourceType": "Microsoft.DataShare/accounts/shareSubscriptions",
    "isChild": true,
    "parentType": "Microsoft.DataShare/accounts"
  },
  {
    "file": "Azure::AwsConnector::IamPasswordPolicies.json",
    "resourceType": "Microsoft.AwsConnector/iamPasswordPolicies",
    "isChild": false
  },
  {
    "file": "Azure::Web::Sites_deployments.json",
    "resourceType": "Microsoft.Web/sites/deployments",
    "isChild": true,
    "parentType": "Microsoft.Web/sites"
  },
  {
    "file": "Azure::Web::Sites_backups.json",
    "resourceType": "Microsoft.Web/sites/backups",
    "isChild": true,
    "parentType": "Microsoft.Web/sites"
  },
  {
    "file": "Azure::Web::Sites_slots_domainOwnershipIdentifiers.json",
    "resourceType": "Microsoft.Web/sites/slots/domainOwnershipIdentifiers",
    "isChild": true,
    "parentType": "Microsoft.Web/sites/slots"
  },
  {
    "file": "Azure::EventGrid::Domains_privateEndpointConnections.json",
    "resourceType": "Microsoft.EventGrid/domains/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.EventGrid/domains"
  },
  {
    "file": "Azure::AwsConnector::ElasticBeanstalkConfigurationTemplates.json",
    "resourceType": "Microsoft.AwsConnector/elasticBeanstalkConfigurationTemplates",
    "isChild": false
  },
  {
    "file": "Azure::DataManagement::Organizations.json",
    "resourceType": "Informatica.DataManagement/organizations",
    "isChild": false
  },
  {
    "file": "Azure::KeyVault::Vaults_privateEndpointConnections.json",
    "resourceType": "Microsoft.KeyVault/vaults/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.KeyVault/vaults"
  },
  {
    "file": "Azure::MachineLearningServices::Workspaces_outboundRules.json",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/outboundRules",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/workspaces"
  },
  {
    "file": "Azure::ApiManagement::Service_portalsettings.json",
    "resourceType": "Microsoft.ApiManagement/service/portalsettings",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service"
  },
  {
    "file": "Azure::Search::SearchServices_privateEndpointConnections.json",
    "resourceType": "Microsoft.Search/searchServices/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.Search/searchServices"
  },
  {
    "file": "Azure::RecoveryServices::Vaults_backupResourceGuardProxies.json",
    "resourceType": "Microsoft.RecoveryServices/vaults/backupResourceGuardProxies",
    "isChild": true,
    "parentType": "Microsoft.RecoveryServices/vaults"
  },
  {
    "file": "Azure::NetworkCloud::StorageAppliances.json",
    "resourceType": "Microsoft.NetworkCloud/storageAppliances",
    "isChild": false
  },
  {
    "file": "Azure::Kusto::Clusters_managedPrivateEndpoints.json",
    "resourceType": "Microsoft.Kusto/clusters/managedPrivateEndpoints",
    "isChild": true,
    "parentType": "Microsoft.Kusto/clusters"
  },
  {
    "file": "Azure::ResourceGraph::Queries.json",
    "resourceType": "Microsoft.ResourceGraph/queries",
    "isChild": false
  },
  {
    "file": "Azure::AzureStackHCI::Clusters.json",
    "resourceType": "Microsoft.AzureStackHCI/clusters",
    "isChild": false
  },
  {
    "file": "Azure::DeploymentManager::ArtifactSources.json",
    "resourceType": "Microsoft.DeploymentManager/artifactSources",
    "isChild": false
  },
  {
    "file": "Azure::TimeSeriesInsights::Environments_accessPolicies.json",
    "resourceType": "Microsoft.TimeSeriesInsights/environments/accessPolicies",
    "isChild": true,
    "parentType": "Microsoft.TimeSeriesInsights/environments"
  },
  {
    "file": "Azure::AVS::PrivateClouds_workloadNetworks_segments.json",
    "resourceType": "Microsoft.AVS/privateClouds/workloadNetworks/segments",
    "isChild": true,
    "parentType": "Microsoft.AVS/privateClouds/workloadNetworks"
  },
  {
    "file": "Azure::DataLakeAnalytics::Accounts_DataLakeStoreAccounts.json",
    "resourceType": "Microsoft.DataLakeAnalytics/accounts/dataLakeStoreAccounts",
    "isChild": true,
    "parentType": "Microsoft.DataLakeAnalytics/accounts"
  },
  {
    "file": "Azure::Devices::IotHubs.json",
    "resourceType": "Microsoft.Devices/IotHubs",
    "isChild": false
  },
  {
    "file": "Azure::Web::Sites_sitecontainers.json",
    "resourceType": "Microsoft.Web/sites/sitecontainers",
    "isChild": true,
    "parentType": "Microsoft.Web/sites"
  },
  {
    "file": "Azure::StorSimple::Managers_devices_backupPolicies_schedules.json",
    "resourceType": "Microsoft.StorSimple/managers/devices/backupPolicies/schedules",
    "isChild": true,
    "parentType": "Microsoft.StorSimple/managers/devices/backupPolicies"
  },
  {
    "file": "Azure::AwsConnector::LogsLogGroups.json",
    "resourceType": "Microsoft.AwsConnector/logsLogGroups",
    "isChild": false
  },
  {
    "file": "Azure::AwsConnector::RdsDBSnapshots.json",
    "resourceType": "Microsoft.AwsConnector/rdsDBSnapshots",
    "isChild": false
  },
  {
    "file": "Azure::ApiManagement::Service_authorizationServers.json",
    "resourceType": "Microsoft.ApiManagement/service/authorizationServers",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service"
  },
  {
    "file": "Azure::AwsConnector::Macie2JobSummaries.json",
    "resourceType": "Microsoft.AwsConnector/macie2JobSummaries",
    "isChild": false
  },
  {
    "file": "Azure::CognitiveServices::Accounts_defenderForAISettings.json",
    "resourceType": "Microsoft.CognitiveServices/accounts/defenderForAISettings",
    "isChild": true,
    "parentType": "Microsoft.CognitiveServices/accounts"
  },
  {
    "file": "Azure::MachineLearningServices::Workspaces_connections_raiPolicies.json",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/connections/raiPolicies",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/workspaces/connections"
  },
  {
    "file": "Azure::HybridNetwork::Publishers.json",
    "resourceType": "Microsoft.HybridNetwork/publishers",
    "isChild": false
  },
  {
    "file": "Azure::DataBoxEdge::DataBoxEdgeDevices_diagnosticProactiveLogCollectionSettings.json",
    "resourceType": "Microsoft.DataBoxEdge/dataBoxEdgeDevices/diagnosticProactiveLogCollectionSettings",
    "isChild": true,
    "parentType": "Microsoft.DataBoxEdge/dataBoxEdgeDevices"
  },
  {
    "file": "Azure::IoTOperationsOrchestrator::Instances.json",
    "resourceType": "Microsoft.IoTOperationsOrchestrator/instances",
    "isChild": false
  },
  {
    "file": "Azure::BillingBenefits::Discounts.json",
    "resourceType": "Microsoft.BillingBenefits/discounts",
    "isChild": false
  },
  {
    "file": "Azure::Automation::AutomationAccounts_jobs.json",
    "resourceType": "Microsoft.Automation/automationAccounts/jobs",
    "isChild": true,
    "parentType": "Microsoft.Automation/automationAccounts"
  },
  {
    "file": "Azure::DataReplication::ReplicationVaults_protectedItems.json",
    "resourceType": "Microsoft.DataReplication/replicationVaults/protectedItems",
    "isChild": true,
    "parentType": "Microsoft.DataReplication/replicationVaults"
  },
  {
    "file": "Azure::ManagedNetworkFabric::L3IsolationDomains_externalNetworks.json",
    "resourceType": "Microsoft.ManagedNetworkFabric/l3IsolationDomains/externalNetworks",
    "isChild": true,
    "parentType": "Microsoft.ManagedNetworkFabric/l3IsolationDomains"
  },
  {
    "file": "Azure::HybridData::DataManagers.json",
    "resourceType": "Microsoft.HybridData/dataManagers",
    "isChild": false
  },
  {
    "file": "Azure::Web::Sites_privateEndpointConnections.json",
    "resourceType": "Microsoft.Web/sites/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.Web/sites"
  },
  {
    "file": "Azure::ApiManagement::Service_workspaces_tags_apiLinks.json",
    "resourceType": "Microsoft.ApiManagement/service/workspaces/tags/apiLinks",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/workspaces/tags"
  },
  {
    "file": "Azure::OffAzure::VMwareSites.json",
    "resourceType": "Microsoft.OffAzure/vmwareSites",
    "isChild": false
  },
  {
    "file": "Azure::Aadiam::AzureADMetrics.json",
    "resourceType": "microsoft.aadiam/azureADMetrics",
    "isChild": false
  },
  {
    "file": "Azure::OperationalInsights::QueryPacks_queries.json",
    "resourceType": "Microsoft.OperationalInsights/queryPacks/queries",
    "isChild": true,
    "parentType": "Microsoft.OperationalInsights/queryPacks"
  },
  {
    "file": "Azure::DataCatalog::Catalogs.json",
    "resourceType": "Microsoft.DataCatalog/catalogs",
    "isChild": false
  },
  {
    "file": "Azure::DataBoxEdge::DataBoxEdgeDevices_storageAccounts_containers.json",
    "resourceType": "Microsoft.DataBoxEdge/dataBoxEdgeDevices/storageAccounts/containers",
    "isChild": true,
    "parentType": "Microsoft.DataBoxEdge/dataBoxEdgeDevices/storageAccounts"
  },
  {
    "file": "Azure::Security::SecurityConnectors.json",
    "resourceType": "Microsoft.Security/securityConnectors",
    "isChild": false
  },
  {
    "file": "Azure::Network::DdosProtectionPlans.json",
    "resourceType": "Microsoft.Network/ddosProtectionPlans",
    "isChild": false
  },
  {
    "file": "Azure::Easm::Workspaces.json",
    "resourceType": "Microsoft.Easm/workspaces",
    "isChild": false
  },
  {
    "file": "Azure::VoiceServices::CommunicationsGateways_contacts.json",
    "resourceType": "Microsoft.VoiceServices/communicationsGateways/contacts",
    "isChild": true,
    "parentType": "Microsoft.VoiceServices/communicationsGateways"
  },
  {
    "file": "Azure::Logic::IntegrationAccounts_partners.json",
    "resourceType": "Microsoft.Logic/integrationAccounts/partners",
    "isChild": true,
    "parentType": "Microsoft.Logic/integrationAccounts"
  },
  {
    "file": "Azure::MachineLearningServices::Workspaces_connections_raiBlocklists.json",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/connections/raiBlocklists",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/workspaces/connections"
  },
  {
    "file": "Azure::KeyVault::ManagedHSMs_privateEndpointConnections.json",
    "resourceType": "Microsoft.KeyVault/managedHSMs/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.KeyVault/managedHSMs"
  },
  {
    "file": "Azure::Network::VpnGateways.json",
    "resourceType": "Microsoft.Network/vpnGateways",
    "isChild": false
  },
  {
    "file": "Azure::DataLakeStore::Accounts.json",
    "resourceType": "Microsoft.DataLakeStore/accounts",
    "isChild": false
  },
  {
    "file": "Azure::Sql::Servers_devOpsAuditingSettings.json",
    "resourceType": "Microsoft.Sql/servers/devOpsAuditingSettings",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers"
  },
  {
    "file": "Azure::ServiceBus::Namespaces_ipfilterrules.json",
    "resourceType": "Microsoft.ServiceBus/namespaces/ipfilterrules",
    "isChild": true,
    "parentType": "Microsoft.ServiceBus/namespaces"
  },
  {
    "file": "Azure::ServiceFabricMesh::Secrets_values.json",
    "resourceType": "Microsoft.ServiceFabricMesh/secrets/values",
    "isChild": true,
    "parentType": "Microsoft.ServiceFabricMesh/secrets"
  },
  {
    "file": "Azure::AgFoodPlatform::FarmBeats_dataConnectors.json",
    "resourceType": "Microsoft.AgFoodPlatform/farmBeats/dataConnectors",
    "isChild": true,
    "parentType": "Microsoft.AgFoodPlatform/farmBeats"
  },
  {
    "file": "Azure::EventHub::Namespaces_eventhubs.json",
    "resourceType": "Microsoft.EventHub/namespaces/eventhubs",
    "isChild": true,
    "parentType": "Microsoft.EventHub/namespaces"
  },
  {
    "file": "Azure::StorSimple::Managers_devices_volumeContainers.json",
    "resourceType": "Microsoft.StorSimple/managers/devices/volumeContainers",
    "isChild": true,
    "parentType": "Microsoft.StorSimple/managers/devices"
  },
  {
    "file": "Azure::NetworkCloud::Clusters_metricsConfigurations.json",
    "resourceType": "Microsoft.NetworkCloud/clusters/metricsConfigurations",
    "isChild": true,
    "parentType": "Microsoft.NetworkCloud/clusters"
  },
  {
    "file": "Azure::Security::CustomAssessmentAutomations.json",
    "resourceType": "Microsoft.Security/customAssessmentAutomations",
    "isChild": false
  },
  {
    "file": "Azure::DataShare::Accounts_shares_dataSets.json",
    "resourceType": "Microsoft.DataShare/accounts/shares/dataSets",
    "isChild": true,
    "parentType": "Microsoft.DataShare/accounts/shares"
  },
  {
    "file": "Azure::Database::CloudVmClusters.json",
    "resourceType": "Oracle.Database/cloudVmClusters",
    "isChild": false
  },
  {
    "file": "Azure::Network::NetworkInterfaces_tapConfigurations.json",
    "resourceType": "Microsoft.Network/networkInterfaces/tapConfigurations",
    "isChild": true,
    "parentType": "Microsoft.Network/networkInterfaces"
  },
  {
    "file": "Azure::Compute::VirtualMachineScaleSets_virtualMachines_extensions.json",
    "resourceType": "Microsoft.Compute/virtualMachineScaleSets/virtualMachines/extensions",
    "isChild": true,
    "parentType": "Microsoft.Compute/virtualMachineScaleSets/virtualMachines"
  },
  {
    "file": "Azure::ContainerService::Managedclustersnapshots.json",
    "resourceType": "Microsoft.ContainerService/managedclustersnapshots",
    "isChild": false
  },
  {
    "file": "Azure::Storage::StorageAccounts_queueServices_queues.json",
    "resourceType": "Microsoft.Storage/storageAccounts/queueServices/queues",
    "isChild": true,
    "parentType": "Microsoft.Storage/storageAccounts/queueServices"
  },
  {
    "file": "Azure::RecommendationsService::Accounts_serviceEndpoints.json",
    "resourceType": "Microsoft.RecommendationsService/accounts/serviceEndpoints",
    "isChild": true,
    "parentType": "Microsoft.RecommendationsService/accounts"
  },
  {
    "file": "Azure::ApiManagement::Service_privateEndpointConnections.json",
    "resourceType": "Microsoft.ApiManagement/service/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service"
  },
  {
    "file": "Azure::App::ConnectedEnvironments.json",
    "resourceType": "Microsoft.App/connectedEnvironments",
    "isChild": false
  },
  {
    "file": "Azure::AppPlatform::Spring_applicationAccelerators.json",
    "resourceType": "Microsoft.AppPlatform/Spring/applicationAccelerators",
    "isChild": true,
    "parentType": "Microsoft.AppPlatform/Spring"
  },
  {
    "file": "Azure::CognitiveServices::Accounts_projects_connections.json",
    "resourceType": "Microsoft.CognitiveServices/accounts/projects/connections",
    "isChild": true,
    "parentType": "Microsoft.CognitiveServices/accounts/projects"
  },
  {
    "file": "Azure::NetApp::NetAppAccounts_snapshotPolicies.json",
    "resourceType": "Microsoft.NetApp/netAppAccounts/snapshotPolicies",
    "isChild": true,
    "parentType": "Microsoft.NetApp/netAppAccounts"
  },
  {
    "file": "Azure::Solutions::ApplicationDefinitions.json",
    "resourceType": "Microsoft.Solutions/applicationDefinitions",
    "isChild": false
  },
  {
    "file": "Azure::AwsConnector::Ec2NetworkInterfaces.json",
    "resourceType": "Microsoft.AwsConnector/ec2NetworkInterfaces",
    "isChild": false
  },
  {
    "file": "Azure::Sql::Servers_databases_geoBackupPolicies.json",
    "resourceType": "Microsoft.Sql/servers/databases/geoBackupPolicies",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers/databases"
  },
  {
    "file": "Azure::TestBase::TestBaseAccounts_draftPackages.json",
    "resourceType": "Microsoft.TestBase/testBaseAccounts/draftPackages",
    "isChild": true,
    "parentType": "Microsoft.TestBase/testBaseAccounts"
  },
  {
    "file": "Azure::Network::FirewallPolicies_ruleCollectionGroups_ruleCollectionGroupDrafts.json",
    "resourceType": "Microsoft.Network/firewallPolicies/ruleCollectionGroups/ruleCollectionGroupDrafts",
    "isChild": true,
    "parentType": "Microsoft.Network/firewallPolicies/ruleCollectionGroups"
  },
  {
    "file": "Azure::DevTestLab::Labs_users_environments.json",
    "resourceType": "Microsoft.DevTestLab/labs/users/environments",
    "isChild": true,
    "parentType": "Microsoft.DevTestLab/labs/users"
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_apis_databases_settings.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/apis/databases/settings",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts/apis/databases"
  },
  {
    "file": "Azure::Kubernetes::ConnectedClusters.json",
    "resourceType": "Microsoft.Kubernetes/connectedClusters",
    "isChild": false
  },
  {
    "file": "Azure::Compute::VirtualMachineScaleSets_virtualMachines_runCommands.json",
    "resourceType": "Microsoft.Compute/virtualMachineScaleSets/virtualMachines/runCommands",
    "isChild": true,
    "parentType": "Microsoft.Compute/virtualMachineScaleSets/virtualMachines"
  },
  {
    "file": "Azure::Sql::Servers_ipv6FirewallRules.json",
    "resourceType": "Microsoft.Sql/servers/ipv6FirewallRules",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers"
  },
  {
    "file": "Azure::HybridContainerService::ProvisionedClusters_agentPools.json",
    "resourceType": "Microsoft.HybridContainerService/provisionedClusters/agentPools",
    "isChild": true,
    "parentType": "Microsoft.HybridContainerService/provisionedClusters"
  },
  {
    "file": "Azure::HealthcareApis::Workspaces_analyticsconnectors.json",
    "resourceType": "Microsoft.HealthcareApis/workspaces/analyticsconnectors",
    "isChild": true,
    "parentType": "Microsoft.HealthcareApis/workspaces"
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_chaosFaults.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/chaosFaults",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts"
  },
  {
    "file": "Azure::EventHub::Namespaces_applicationGroups.json",
    "resourceType": "Microsoft.EventHub/namespaces/applicationGroups",
    "isChild": true,
    "parentType": "Microsoft.EventHub/namespaces"
  },
  {
    "file": "Azure::DataReplication::ReplicationVaults_privateEndpointConnectionProxies.json",
    "resourceType": "Microsoft.DataReplication/replicationVaults/privateEndpointConnectionProxies",
    "isChild": true,
    "parentType": "Microsoft.DataReplication/replicationVaults"
  },
  {
    "file": "Azure::OperationsManagement::ManagementConfigurations.json",
    "resourceType": "Microsoft.OperationsManagement/ManagementConfigurations",
    "isChild": false
  },
  {
    "file": "Azure::AVS::PrivateClouds_clusters.json",
    "resourceType": "Microsoft.AVS/privateClouds/clusters",
    "isChild": true,
    "parentType": "Microsoft.AVS/privateClouds"
  },
  {
    "file": "Azure::Quantum::Workspaces.json",
    "resourceType": "Microsoft.Quantum/workspaces",
    "isChild": false
  },
  {
    "file": "Azure::Media::MediaServices_streamingLocators.json",
    "resourceType": "Microsoft.Media/mediaServices/streamingLocators",
    "isChild": true,
    "parentType": "Microsoft.Media/mediaServices"
  },
  {
    "file": "Azure::AppPlatform::Spring_buildServices_builds.json",
    "resourceType": "Microsoft.AppPlatform/Spring/buildServices/builds",
    "isChild": true,
    "parentType": "Microsoft.AppPlatform/Spring/buildServices"
  },
  {
    "file": "Azure::NetworkCloud::ClusterManagers.json",
    "resourceType": "Microsoft.NetworkCloud/clusterManagers",
    "isChild": false
  },
  {
    "file": "Azure::HanaOnAzure::SapMonitors.json",
    "resourceType": "Microsoft.HanaOnAzure/sapMonitors",
    "isChild": false
  },
  {
    "file": "Azure::Network::ExpressRouteGateways.json",
    "resourceType": "Microsoft.Network/expressRouteGateways",
    "isChild": false
  },
  {
    "file": "Azure::AwsConnector::Route53DomainsDomainSummaries.json",
    "resourceType": "Microsoft.AwsConnector/route53DomainsDomainSummaries",
    "isChild": false
  },
  {
    "file": "Azure::CustomProviders::ResourceProviders.json",
    "resourceType": "Microsoft.CustomProviders/resourceProviders",
    "isChild": false
  },
  {
    "file": "Azure::HybridCloud::CloudConnections.json",
    "resourceType": "Microsoft.HybridCloud/cloudConnections",
    "isChild": false
  },
  {
    "file": "Azure::ServiceBus::Namespaces_privateEndpointConnections.json",
    "resourceType": "Microsoft.ServiceBus/namespaces/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.ServiceBus/namespaces"
  },
  {
    "file": "Azure::ApiManagement::Service_workspaces_backends.json",
    "resourceType": "Microsoft.ApiManagement/service/workspaces/backends",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/workspaces"
  },
  {
    "file": "Azure::MachineLearning::CommitmentPlans.json",
    "resourceType": "Microsoft.MachineLearning/commitmentPlans",
    "isChild": false
  },
  {
    "file": "Azure::SecurityDevOps::AzureDevOpsConnectors_orgs_projects.json",
    "resourceType": "Microsoft.SecurityDevOps/azureDevOpsConnectors/orgs/projects",
    "isChild": true,
    "parentType": "Microsoft.SecurityDevOps/azureDevOpsConnectors/orgs"
  },
  {
    "file": "Azure::PowerBIDedicated::Capacities.json",
    "resourceType": "Microsoft.PowerBIDedicated/capacities",
    "isChild": false
  },
  {
    "file": "Azure::Security::CustomEntityStoreAssignments.json",
    "resourceType": "Microsoft.Security/customEntityStoreAssignments",
    "isChild": false
  },
  {
    "file": "Azure::ExtendedLocation::CustomLocations_resourceSyncRules.json",
    "resourceType": "Microsoft.ExtendedLocation/customLocations/resourceSyncRules",
    "isChild": true,
    "parentType": "Microsoft.ExtendedLocation/customLocations"
  },
  {
    "file": "Azure::MachineLearningServices::Workspaces_featuresets_versions.json",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/featuresets/versions",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/workspaces/featuresets"
  },
  {
    "file": "Azure::ContainerService::OpenShiftManagedClusters.json",
    "resourceType": "Microsoft.ContainerService/openShiftManagedClusters",
    "isChild": false
  },
  {
    "file": "Azure::Compute::Extensions.json",
    "resourceType": "Microsoft.Compute/virtualMachines/extensions",
    "isChild": true,
    "parentType": "Microsoft.Compute/virtualMachines"
  },
  {
    "file": "Azure::AwsConnector::EcsServices.json",
    "resourceType": "Microsoft.AwsConnector/ecsServices",
    "isChild": false
  },
  {
    "file": "Azure::AzureArcData::SqlManagedInstances.json",
    "resourceType": "Microsoft.AzureArcData/sqlManagedInstances",
    "isChild": false
  },
  {
    "file": "Azure::OperationalInsights::Workspaces_linkedServices.json",
    "resourceType": "Microsoft.OperationalInsights/workspaces/linkedServices",
    "isChild": true,
    "parentType": "Microsoft.OperationalInsights/workspaces"
  },
  {
    "file": "Azure::Database::AutonomousDatabases.json",
    "resourceType": "Oracle.Database/autonomousDatabases",
    "isChild": false
  },
  {
    "file": "Azure::Cdn::Profiles_afdEndpoints_routes.json",
    "resourceType": "Microsoft.Cdn/profiles/afdEndpoints/routes",
    "isChild": true,
    "parentType": "Microsoft.Cdn/profiles/afdEndpoints"
  },
  {
    "file": "Azure::EventGrid::Namespaces_clientGroups.json",
    "resourceType": "Microsoft.EventGrid/namespaces/clientGroups",
    "isChild": true,
    "parentType": "Microsoft.EventGrid/namespaces"
  },
  {
    "file": "Azure::ApiCenter::Services_workspaces_apiSources.json",
    "resourceType": "Microsoft.ApiCenter/services/workspaces/apiSources",
    "isChild": true,
    "parentType": "Microsoft.ApiCenter/services/workspaces"
  },
  {
    "file": "Azure::HealthcareApis::Workspaces_iotconnectors.json",
    "resourceType": "Microsoft.HealthcareApis/workspaces/iotconnectors",
    "isChild": true,
    "parentType": "Microsoft.HealthcareApis/workspaces"
  },
  {
    "file": "Azure::Database::ExadbVmClusters.json",
    "resourceType": "Oracle.Database/exadbVmClusters",
    "isChild": false
  },
  {
    "file": "Azure::Automation::AutomationAccounts_sourceControls.json",
    "resourceType": "Microsoft.Automation/automationAccounts/sourceControls",
    "isChild": true,
    "parentType": "Microsoft.Automation/automationAccounts"
  },
  {
    "file": "Azure::Relay::Namespaces_hybridConnections.json",
    "resourceType": "Microsoft.Relay/namespaces/HybridConnections",
    "isChild": true,
    "parentType": "Microsoft.Relay/namespaces"
  },
  {
    "file": "Azure::Network::ExpressRouteCircuits_peerings.json",
    "resourceType": "Microsoft.Network/expressRouteCircuits/peerings",
    "isChild": true,
    "parentType": "Microsoft.Network/expressRouteCircuits"
  },
  {
    "file": "Azure::MobilePacketCore::AmfDeployments.json",
    "resourceType": "Microsoft.MobilePacketCore/amfDeployments",
    "isChild": false
  },
  {
    "file": "Azure::Compute::Galleries.json",
    "resourceType": "Microsoft.Compute/galleries",
    "isChild": false
  },
  {
    "file": "Azure::DelegatedNetwork::Controller.json",
    "resourceType": "Microsoft.DelegatedNetwork/controller",
    "isChild": false
  },
  {
    "file": "Azure::Storage::StorageAccounts_queueServices.json",
    "resourceType": "Microsoft.Storage/storageAccounts/queueServices",
    "isChild": true,
    "parentType": "Microsoft.Storage/storageAccounts"
  },
  {
    "file": "Azure::Network::VirtualHubs_bgpConnections.json",
    "resourceType": "Microsoft.Network/virtualHubs/bgpConnections",
    "isChild": true,
    "parentType": "Microsoft.Network/virtualHubs"
  },
  {
    "file": "Azure::Sql::Servers_outboundFirewallRules.json",
    "resourceType": "Microsoft.Sql/servers/outboundFirewallRules",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers"
  },
  {
    "file": "Azure::ApiManagement::Service_notifications_recipientEmails.json",
    "resourceType": "Microsoft.ApiManagement/service/notifications/recipientEmails",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/notifications"
  },
  {
    "file": "Azure::App::ManagedEnvironments_dotNetComponents.json",
    "resourceType": "Microsoft.App/managedEnvironments/dotNetComponents",
    "isChild": true,
    "parentType": "Microsoft.App/managedEnvironments"
  },
  {
    "file": "Azure::RecoveryServices::Vaults_replicationFabrics_replicationProtectionContainers_replicationProtectionClusters.json",
    "resourceType": "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers/replicationProtectionClusters",
    "isChild": true,
    "parentType": "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers"
  },
  {
    "file": "Azure::Authorization::ResourceManagementPrivateLinks.json",
    "resourceType": "Microsoft.Authorization/resourceManagementPrivateLinks",
    "isChild": false
  },
  {
    "file": "Azure::Sql::ManagedInstances_azureADOnlyAuthentications.json",
    "resourceType": "Microsoft.Sql/managedInstances/azureADOnlyAuthentications",
    "isChild": true,
    "parentType": "Microsoft.Sql/managedInstances"
  },
  {
    "file": "Azure::Logic::IntegrationAccounts_assemblies.json",
    "resourceType": "Microsoft.Logic/integrationAccounts/assemblies",
    "isChild": true,
    "parentType": "Microsoft.Logic/integrationAccounts"
  },
  {
    "file": "Azure::AzureStack::Registrations.json",
    "resourceType": "Microsoft.AzureStack/registrations",
    "isChild": false
  },
  {
    "file": "Azure::DBforMariaDB::Servers.json",
    "resourceType": "Microsoft.DBforMariaDB/servers",
    "isChild": false
  },
  {
    "file": "Azure::Sql::Servers_databases_extensions.json",
    "resourceType": "Microsoft.Sql/servers/databases/extensions",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers/databases"
  },
  {
    "file": "Azure::Monitor::Accounts.json",
    "resourceType": "Microsoft.Monitor/accounts",
    "isChild": false
  },
  {
    "file": "Azure::Web::HostingEnvironments_multiRolePools.json",
    "resourceType": "Microsoft.Web/hostingEnvironments/multiRolePools",
    "isChild": true,
    "parentType": "Microsoft.Web/hostingEnvironments"
  },
  {
    "file": "Azure::Resources::DeploymentScripts.json",
    "resourceType": "Microsoft.Resources/deploymentScripts",
    "isChild": false
  },
  {
    "file": "Azure::Network::VirtualWans_p2sVpnServerConfigurations.json",
    "resourceType": "Microsoft.Network/virtualWans/p2sVpnServerConfigurations",
    "isChild": true,
    "parentType": "Microsoft.Network/virtualWans"
  },
  {
    "file": "Azure::DataReplication::ReplicationVaults.json",
    "resourceType": "Microsoft.DataReplication/replicationVaults",
    "isChild": false
  },
  {
    "file": "Azure::Automation::AutomationAccounts.json",
    "resourceType": "Microsoft.Automation/automationAccounts",
    "isChild": false
  },
  {
    "file": "Azure::Compute::VirtualMachineScaleSets.json",
    "resourceType": "Microsoft.Compute/virtualMachineScaleSets",
    "isChild": false
  },
  {
    "file": "Azure::Synapse::Workspaces_azureADOnlyAuthentications.json",
    "resourceType": "Microsoft.Synapse/workspaces/azureADOnlyAuthentications",
    "isChild": true,
    "parentType": "Microsoft.Synapse/workspaces"
  },
  {
    "file": "Azure::Storage::StorageAccounts_encryptionScopes.json",
    "resourceType": "Microsoft.Storage/storageAccounts/encryptionScopes",
    "isChild": true,
    "parentType": "Microsoft.Storage/storageAccounts"
  },
  {
    "file": "Azure::Confluent::Organizations_environments.json",
    "resourceType": "Microsoft.Confluent/organizations/environments",
    "isChild": true,
    "parentType": "Microsoft.Confluent/organizations"
  },
  {
    "file": "Azure::ApiManagement::Gateways_configConnections.json",
    "resourceType": "Microsoft.ApiManagement/gateways/configConnections",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/gateways"
  },
  {
    "file": "Azure::Network::VirtualNetworks.json",
    "resourceType": "Microsoft.Network/virtualnetworks",
    "isChild": false
  },
  {
    "file": "Azure::ServiceFabric::Managedclusters_applications.json",
    "resourceType": "Microsoft.ServiceFabric/managedclusters/applications",
    "isChild": true,
    "parentType": "Microsoft.ServiceFabric/managedclusters"
  },
  {
    "file": "Azure::Web::Sites_slots_publicCertificates.json",
    "resourceType": "Microsoft.Web/sites/slots/publicCertificates",
    "isChild": true,
    "parentType": "Microsoft.Web/sites/slots"
  },
  {
    "file": "Azure::Relay::Namespaces_privateEndpointConnections.json",
    "resourceType": "Microsoft.Relay/namespaces/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.Relay/namespaces"
  },
  {
    "file": "Azure::MachineLearningServices::Workspaces_managedNetworks.json",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/managedNetworks",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/workspaces"
  },
  {
    "file": "Azure::ServiceFabric::ManagedClusters_nodeTypes.json",
    "resourceType": "Microsoft.ServiceFabric/managedClusters/nodeTypes",
    "isChild": true,
    "parentType": "Microsoft.ServiceFabric/managedClusters"
  },
  {
    "file": "Azure::Migrate::Projects_groups.json",
    "resourceType": "Microsoft.Migrate/projects/groups",
    "isChild": true,
    "parentType": "Microsoft.Migrate/projects"
  },
  {
    "file": "Azure::Web::ManagedHostingEnvironments.json",
    "resourceType": "Microsoft.Web/managedHostingEnvironments",
    "isChild": false
  },
  {
    "file": "Azure::MachineLearningServices::Workspaces_inferencePools_groups.json",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/inferencePools/groups",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/workspaces/inferencePools"
  },
  {
    "file": "Azure::PowerBIDedicated::AutoScaleVCores.json",
    "resourceType": "Microsoft.PowerBIDedicated/autoScaleVCores",
    "isChild": false
  },
  {
    "file": "Azure::CognitiveServices::Accounts_privateEndpointConnections.json",
    "resourceType": "Microsoft.CognitiveServices/accounts/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.CognitiveServices/accounts"
  },
  {
    "file": "Azure::ApiManagement::Service_gateways.json",
    "resourceType": "Microsoft.ApiManagement/service/gateways",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service"
  },
  {
    "file": "Azure::Workloads::SapVirtualInstances_databaseInstances.json",
    "resourceType": "Microsoft.Workloads/sapVirtualInstances/databaseInstances",
    "isChild": true,
    "parentType": "Microsoft.Workloads/sapVirtualInstances"
  },
  {
    "file": "Azure::Media::Mediaservices_liveEvents.json",
    "resourceType": "Microsoft.Media/mediaservices/liveEvents",
    "isChild": true,
    "parentType": "Microsoft.Media/mediaservices"
  },
  {
    "file": "Azure::ApiManagement::Service_workspaces_tags_operationLinks.json",
    "resourceType": "Microsoft.ApiManagement/service/workspaces/tags/operationLinks",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/workspaces/tags"
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_gremlinRoleDefinitions.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/gremlinRoleDefinitions",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts"
  },
  {
    "file": "Azure::MachineLearningServices::Workspaces_serverlessEndpoints.json",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/serverlessEndpoints",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/workspaces"
  },
  {
    "file": "Azure::AwsConnector::OpenSearchDomainStatuses.json",
    "resourceType": "Microsoft.AwsConnector/openSearchDomainStatuses",
    "isChild": false
  },
  {
    "file": "Azure::AwsConnector::Ec2NetworkAcls.json",
    "resourceType": "Microsoft.AwsConnector/ec2NetworkAcls",
    "isChild": false
  },
  {
    "file": "Azure::DatabaseFleetManager::Fleets_tiers.json",
    "resourceType": "Microsoft.DatabaseFleetManager/fleets/tiers",
    "isChild": true,
    "parentType": "Microsoft.DatabaseFleetManager/fleets"
  },
  {
    "file": "Azure::StorageCache::Caches_storageTargets.json",
    "resourceType": "Microsoft.StorageCache/caches/storageTargets",
    "isChild": true,
    "parentType": "Microsoft.StorageCache/caches"
  },
  {
    "file": "Azure::HanaOnAzure::HanaInstances.json",
    "resourceType": "Microsoft.HanaOnAzure/hanaInstances",
    "isChild": false
  },
  {
    "file": "Azure::DevTestLab::Labs_virtualmachines.json",
    "resourceType": "Microsoft.DevTestLab/labs/virtualmachines",
    "isChild": true,
    "parentType": "Microsoft.DevTestLab/labs"
  },
  {
    "file": "Azure::Datadog::Monitors_singleSignOnConfigurations.json",
    "resourceType": "Microsoft.Datadog/monitors/singleSignOnConfigurations",
    "isChild": true,
    "parentType": "Microsoft.Datadog/monitors"
  },
  {
    "file": "Azure::IoTOperationsMQ::Mq_broker_listener.json",
    "resourceType": "Microsoft.IoTOperationsMQ/mq/broker/listener",
    "isChild": true,
    "parentType": "Microsoft.IoTOperationsMQ/mq/broker"
  },
  {
    "file": "Azure::AzureLargeInstance::AzureLargeStorageInstances.json",
    "resourceType": "Microsoft.AzureLargeInstance/azureLargeStorageInstances",
    "isChild": false
  },
  {
    "file": "Azure::Network::BastionHosts.json",
    "resourceType": "Microsoft.Network/bastionHosts",
    "isChild": false
  },
  {
    "file": "Azure::Peering::Peerings_registeredPrefixes.json",
    "resourceType": "Microsoft.Peering/peerings/registeredPrefixes",
    "isChild": true,
    "parentType": "Microsoft.Peering/peerings"
  },
  {
    "file": "Azure::CertificateRegistration::CertificateOrders.json",
    "resourceType": "Microsoft.CertificateRegistration/certificateOrders",
    "isChild": false
  },
  {
    "file": "Azure::ApiManagement::Service_templates.json",
    "resourceType": "Microsoft.ApiManagement/service/templates",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service"
  },
  {
    "file": "Azure::ServiceBus::Namespaces_topics_subscriptions_rules.json",
    "resourceType": "Microsoft.ServiceBus/namespaces/topics/subscriptions/rules",
    "isChild": true,
    "parentType": "Microsoft.ServiceBus/namespaces/topics/subscriptions"
  },
  {
    "file": "Azure::NetworkCloud::L3Networks.json",
    "resourceType": "Microsoft.NetworkCloud/l3Networks",
    "isChild": false
  },
  {
    "file": "Azure::ApiManagement::Service_workspaces_subscriptions.json",
    "resourceType": "Microsoft.ApiManagement/service/workspaces/subscriptions",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/workspaces"
  },
  {
    "file": "Azure::Cdn::Profiles_keyGroups.json",
    "resourceType": "Microsoft.Cdn/profiles/keyGroups",
    "isChild": true,
    "parentType": "Microsoft.Cdn/profiles"
  },
  {
    "file": "Azure::OperationalInsights::Workspaces_tables.json",
    "resourceType": "Microsoft.OperationalInsights/workspaces/tables",
    "isChild": true,
    "parentType": "Microsoft.OperationalInsights/workspaces"
  },
  {
    "file": "Azure::ApiManagement::Service_apis_issues_attachments.json",
    "resourceType": "Microsoft.ApiManagement/service/apis/issues/attachments",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service/apis/issues"
  },
  {
    "file": "Azure::Migrate::ModernizeProjects.json",
    "resourceType": "Microsoft.Migrate/modernizeProjects",
    "isChild": false
  },
  {
    "file": "Azure::Network::AzureFirewalls.json",
    "resourceType": "Microsoft.Network/azureFirewalls",
    "isChild": false
  },
  {
    "file": "Azure::IoTOperations::Instances_brokers_authentications.json",
    "resourceType": "Microsoft.IoTOperations/instances/brokers/authentications",
    "isChild": true,
    "parentType": "Microsoft.IoTOperations/instances/brokers"
  },
  {
    "file": "Azure::Sql::Servers_databases_dataMaskingPolicies_rules.json",
    "resourceType": "Microsoft.Sql/servers/databases/dataMaskingPolicies/rules",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers/databases/dataMaskingPolicies"
  },
  {
    "file": "Azure::ManufacturingPlatform::ManufacturingDataServices.json",
    "resourceType": "Microsoft.ManufacturingPlatform/manufacturingDataServices",
    "isChild": false
  },
  {
    "file": "Azure::Communication::EmailServices_domains_suppressionLists_suppressionListAddresses.json",
    "resourceType": "Microsoft.Communication/emailServices/domains/suppressionLists/suppressionListAddresses",
    "isChild": true,
    "parentType": "Microsoft.Communication/emailServices/domains/suppressionLists"
  },
  {
    "file": "Azure::ConnectedCache::IspCustomers.json",
    "resourceType": "Microsoft.ConnectedCache/ispCustomers",
    "isChild": false
  },
  {
    "file": "Azure::ManagedNetworkFabric::NetworkPacketBrokers.json",
    "resourceType": "Microsoft.ManagedNetworkFabric/networkPacketBrokers",
    "isChild": false
  },
  {
    "file": "Azure::MachineLearning::Workspaces.json",
    "resourceType": "Microsoft.MachineLearning/workspaces",
    "isChild": false
  },
  {
    "file": "Azure::ResourceConnector::Appliances.json",
    "resourceType": "Microsoft.ResourceConnector/appliances",
    "isChild": false
  },
  {
    "file": "Azure::Network::ServiceEndpointPolicies.json",
    "resourceType": "Microsoft.Network/serviceEndpointPolicies",
    "isChild": false
  },
  {
    "file": "Azure::StorageSync::StorageSyncServices_syncGroups_cloudEndpoints.json",
    "resourceType": "Microsoft.StorageSync/storageSyncServices/syncGroups/cloudEndpoints",
    "isChild": true,
    "parentType": "Microsoft.StorageSync/storageSyncServices/syncGroups"
  },
  {
    "file": "Azure::Network::NetworkVirtualAppliances_networkVirtualApplianceConnections.json",
    "resourceType": "Microsoft.Network/networkVirtualAppliances/networkVirtualApplianceConnections",
    "isChild": true,
    "parentType": "Microsoft.Network/networkVirtualAppliances"
  },
  {
    "file": "Azure::MachineLearningServices::Workspaces_capabilityHosts.json",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/capabilityHosts",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/workspaces"
  },
  {
    "file": "Azure::ConnectedVMwarevSphere::VirtualMachines_hybridIdentityMetadata.json",
    "resourceType": "Microsoft.ConnectedVMwarevSphere/virtualMachines/hybridIdentityMetadata",
    "isChild": true,
    "parentType": "Microsoft.ConnectedVMwarevSphere/virtualMachines"
  },
  {
    "file": "Azure::Communication::EmailServices.json",
    "resourceType": "Microsoft.Communication/emailServices",
    "isChild": false
  },
  {
    "file": "Azure::ConnectedCache::EnterpriseMccCustomers_enterpriseMccCacheNodes.json",
    "resourceType": "Microsoft.ConnectedCache/enterpriseMccCustomers/enterpriseMccCacheNodes",
    "isChild": true,
    "parentType": "Microsoft.ConnectedCache/enterpriseMccCustomers"
  },
  {
    "file": "Azure::Network::FirewallPolicies_signatureOverrides.json",
    "resourceType": "Microsoft.Network/firewallPolicies/signatureOverrides",
    "isChild": true,
    "parentType": "Microsoft.Network/firewallPolicies"
  },
  {
    "file": "Azure::ApiManagement::Service_policies.json",
    "resourceType": "Microsoft.ApiManagement/service/policies",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service"
  },
  {
    "file": "Azure::BotService::BotServices_Connections.json",
    "resourceType": "Microsoft.BotService/botServices/connections",
    "isChild": true,
    "parentType": "Microsoft.BotService/botServices"
  },
  {
    "file": "Azure::ContainerRegistry::Registries_connectedRegistries.json",
    "resourceType": "Microsoft.ContainerRegistry/registries/connectedRegistries",
    "isChild": true,
    "parentType": "Microsoft.ContainerRegistry/registries"
  },
  {
    "file": "Azure::DataBoxEdge::DataBoxEdgeDevices_users.json",
    "resourceType": "Microsoft.DataBoxEdge/dataBoxEdgeDevices/users",
    "isChild": true,
    "parentType": "Microsoft.DataBoxEdge/dataBoxEdgeDevices"
  },
  {
    "file": "Azure::Web::Sites_slots_deployments.json",
    "resourceType": "Microsoft.Web/sites/slots/deployments",
    "isChild": true,
    "parentType": "Microsoft.Web/sites/slots"
  },
  {
    "file": "Azure::Database::CloudVmClusters_virtualNetworkAddresses.json",
    "resourceType": "Oracle.Database/cloudVmClusters/virtualNetworkAddresses",
    "isChild": true,
    "parentType": "Oracle.Database/cloudVmClusters"
  },
  {
    "file": "Azure::Kusto::Clusters_dataConnections.json",
    "resourceType": "Microsoft.Kusto/clusters/dataconnections",
    "isChild": true,
    "parentType": "Microsoft.Kusto/clusters"
  },
  {
    "file": "Azure::App::ManagedEnvironments_privateEndpointConnections.json",
    "resourceType": "Microsoft.App/managedEnvironments/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.App/managedEnvironments"
  },
  {
    "file": "Azure::AwsConnector::RdsDBClusters.json",
    "resourceType": "Microsoft.AwsConnector/rdsDBClusters",
    "isChild": false
  },
  {
    "file": "Azure::ServiceBus::Namespaces_topics.json",
    "resourceType": "Microsoft.ServiceBus/namespaces/topics",
    "isChild": true,
    "parentType": "Microsoft.ServiceBus/namespaces"
  },
  {
    "file": "Azure::ManagedIdentity::UserAssignedIdentities_federatedIdentityCredentials.json",
    "resourceType": "Microsoft.ManagedIdentity/userAssignedIdentities/federatedIdentityCredentials",
    "isChild": true,
    "parentType": "Microsoft.ManagedIdentity/userAssignedIdentities"
  },
  {
    "file": "Azure::Compute::CapacityReservationGroups.json",
    "resourceType": "Microsoft.Compute/capacityReservationGroups",
    "isChild": false
  },
  {
    "file": "Azure::Network::NetworkManagers_securityUserConfigurations_ruleCollections_rules.json",
    "resourceType": "Microsoft.Network/networkManagers/securityUserConfigurations/ruleCollections/rules",
    "isChild": true,
    "parentType": "Microsoft.Network/networkManagers/securityUserConfigurations/ruleCollections"
  },
  {
    "file": "Azure::MobileNetwork::SimGroups.json",
    "resourceType": "Microsoft.MobileNetwork/simGroups",
    "isChild": false
  },
  {
    "file": "Azure::AppPlatform::Spring.json",
    "resourceType": "Microsoft.AppPlatform/Spring",
    "isChild": false
  },
  {
    "file": "Azure::MobilePacketCore::UpfDeployments.json",
    "resourceType": "Microsoft.MobilePacketCore/upfDeployments",
    "isChild": false
  },
  {
    "file": "Azure::Network::PrivateDnsZones_MX.json",
    "resourceType": "Microsoft.Network/privateDnsZones/MX",
    "isChild": true,
    "parentType": "Microsoft.Network/privateDnsZones"
  },
  {
    "file": "Azure::Network::NetworkManagers_securityUserConfigurations.json",
    "resourceType": "Microsoft.Network/networkManagers/securityUserConfigurations",
    "isChild": true,
    "parentType": "Microsoft.Network/networkManagers"
  },
  {
    "file": "Azure::AwsConnector::Ec2InstanceStatuses.json",
    "resourceType": "Microsoft.AwsConnector/ec2InstanceStatuses",
    "isChild": false
  },
  {
    "file": "Azure::AVS::PrivateClouds_clusters_placementPolicies.json",
    "resourceType": "Microsoft.AVS/privateClouds/clusters/placementPolicies",
    "isChild": true,
    "parentType": "Microsoft.AVS/privateClouds/clusters"
  },
  {
    "file": "Azure::AVS::PrivateClouds_cloudLinks.json",
    "resourceType": "Microsoft.AVS/privateClouds/cloudLinks",
    "isChild": true,
    "parentType": "Microsoft.AVS/privateClouds"
  },
  {
    "file": "Azure::Synapse::Workspaces_sqlAdministrators.json",
    "resourceType": "Microsoft.Synapse/workspaces/sqlAdministrators",
    "isChild": true,
    "parentType": "Microsoft.Synapse/workspaces"
  },
  {
    "file": "Azure::AwsConnector::RedshiftClusterParameterGroups.json",
    "resourceType": "Microsoft.AwsConnector/redshiftClusterParameterGroups",
    "isChild": false
  },
  {
    "file": "Azure::RecoveryServices::Vaults_replicationProtectionIntents.json",
    "resourceType": "Microsoft.RecoveryServices/vaults/replicationProtectionIntents",
    "isChild": true,
    "parentType": "Microsoft.RecoveryServices/vaults"
  },
  {
    "file": "Azure::HybridContainerService::ProvisionedClusters.json",
    "resourceType": "Microsoft.HybridContainerService/provisionedClusters",
    "isChild": false
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_apis_databases_collections_settings.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/apis/databases/collections/settings",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts/apis/databases/collections"
  },
  {
    "file": "Azure::Blockchain::BlockchainMembers_transactionNodes.json",
    "resourceType": "Microsoft.Blockchain/blockchainMembers/transactionNodes",
    "isChild": true,
    "parentType": "Microsoft.Blockchain/blockchainMembers"
  },
  {
    "file": "Azure::Purview::Accounts_kafkaConfigurations.json",
    "resourceType": "Microsoft.Purview/accounts/kafkaConfigurations",
    "isChild": true,
    "parentType": "Microsoft.Purview/accounts"
  },
  {
    "file": "Azure::DesktopVirtualization::HostPools_sessionHostConfigurations.json",
    "resourceType": "Microsoft.DesktopVirtualization/hostPools/sessionHostConfigurations",
    "isChild": true,
    "parentType": "Microsoft.DesktopVirtualization/hostPools"
  },
  {
    "file": "Azure::AzureArcData::PostgresInstances.json",
    "resourceType": "Microsoft.AzureArcData/postgresInstances",
    "isChild": false
  },
  {
    "file": "Azure::MobileNetwork::PacketCoreControlPlanes_packetCoreDataPlanes.json",
    "resourceType": "Microsoft.MobileNetwork/packetCoreControlPlanes/packetCoreDataPlanes",
    "isChild": true,
    "parentType": "Microsoft.MobileNetwork/packetCoreControlPlanes"
  },
  {
    "file": "Azure::Compute::Snapshots.json",
    "resourceType": "Microsoft.Compute/snapshots",
    "isChild": false
  },
  {
    "file": "Azure::Synapse::Workspaces_trustedServiceByPassConfiguration.json",
    "resourceType": "Microsoft.Synapse/workspaces/trustedServiceByPassConfiguration",
    "isChild": true,
    "parentType": "Microsoft.Synapse/workspaces"
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_apis_databases_graphs.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/apis/databases/graphs",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts/apis/databases"
  },
  {
    "file": "Azure::ServiceBus::Namespaces_networkRuleSets.json",
    "resourceType": "Microsoft.ServiceBus/namespaces/networkRuleSets",
    "isChild": true,
    "parentType": "Microsoft.ServiceBus/namespaces"
  },
  {
    "file": "Azure::VoiceServices::CommunicationsGateways.json",
    "resourceType": "Microsoft.VoiceServices/communicationsGateways",
    "isChild": false
  },
  {
    "file": "Azure::Sql::Servers_databases_syncGroups_syncMembers.json",
    "resourceType": "Microsoft.Sql/servers/databases/syncGroups/syncMembers",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers/databases/syncGroups"
  },
  {
    "file": "Azure::Postgres::Organizations.json",
    "resourceType": "Neon.Postgres/organizations",
    "isChild": false
  },
  {
    "file": "Azure::Network::VpnServerConfigurations_configurationPolicyGroups.json",
    "resourceType": "Microsoft.Network/vpnServerConfigurations/configurationPolicyGroups",
    "isChild": true,
    "parentType": "Microsoft.Network/vpnServerConfigurations"
  },
  {
    "file": "Azure::AwsConnector::WafWebACLSummaries.json",
    "resourceType": "Microsoft.AwsConnector/wafWebACLSummaries",
    "isChild": false
  },
  {
    "file": "Azure::Network::DnsZones_MX.json",
    "resourceType": "Microsoft.Network/dnszones/MX",
    "isChild": true,
    "parentType": "Microsoft.Network/dnszones"
  },
  {
    "file": "Azure::Web::ContainerApps.json",
    "resourceType": "Microsoft.Web/containerApps",
    "isChild": false
  },
  {
    "file": "Azure::Network::DscpConfigurations.json",
    "resourceType": "Microsoft.Network/dscpConfigurations",
    "isChild": false
  },
  {
    "file": "Azure::Sql::Servers_vulnerabilityAssessments.json",
    "resourceType": "Microsoft.Sql/servers/vulnerabilityAssessments",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers"
  },
  {
    "file": "Azure::AzureStackHCI::VirtualHardDisks.json",
    "resourceType": "Microsoft.AzureStackHCI/virtualharddisks",
    "isChild": false
  },
  {
    "file": "Azure::Network::LocalNetworkGateways.json",
    "resourceType": "Microsoft.Network/localNetworkGateways",
    "isChild": false
  },
  {
    "file": "Azure::Network::DnsZones_TLSA.json",
    "resourceType": "Microsoft.Network/dnsZones/TLSA",
    "isChild": true,
    "parentType": "Microsoft.Network/dnsZones"
  },
  {
    "file": "Azure::StorSimple::Managers_accessControlRecords.json",
    "resourceType": "Microsoft.StorSimple/managers/accessControlRecords",
    "isChild": true,
    "parentType": "Microsoft.StorSimple/managers"
  },
  {
    "file": "Azure::MobileNetwork::MobileNetworks_dataNetworks.json",
    "resourceType": "Microsoft.MobileNetwork/mobileNetworks/dataNetworks",
    "isChild": true,
    "parentType": "Microsoft.MobileNetwork/mobileNetworks"
  },
  {
    "file": "Azure::Communication::CommunicationServices_smtpUsernames.json",
    "resourceType": "Microsoft.Communication/communicationServices/smtpUsernames",
    "isChild": true,
    "parentType": "Microsoft.Communication/communicationServices"
  },
  {
    "file": "Azure::DevTestLab::Labs_notificationchannels.json",
    "resourceType": "Microsoft.DevTestLab/labs/notificationchannels",
    "isChild": true,
    "parentType": "Microsoft.DevTestLab/labs"
  },
  {
    "file": "Azure::Network::RouteTables_routes.json",
    "resourceType": "Microsoft.Network/routeTables/routes",
    "isChild": true,
    "parentType": "Microsoft.Network/routeTables"
  },
  {
    "file": "Azure::Datadog::Monitors_tagRules.json",
    "resourceType": "Microsoft.Datadog/monitors/tagRules",
    "isChild": true,
    "parentType": "Microsoft.Datadog/monitors"
  },
  {
    "file": "Azure::Compute::Images.json",
    "resourceType": "Microsoft.Compute/images",
    "isChild": false
  },
  {
    "file": "Azure::Sovereign::LandingZoneAccounts.json",
    "resourceType": "Microsoft.Sovereign/landingZoneAccounts",
    "isChild": false
  },
  {
    "file": "Azure::AzureSphere::Catalogs_products_deviceGroups.json",
    "resourceType": "Microsoft.AzureSphere/catalogs/products/deviceGroups",
    "isChild": true,
    "parentType": "Microsoft.AzureSphere/catalogs/products"
  },
  {
    "file": "Azure::MobilePacketCore::NetworkFunctions.json",
    "resourceType": "Microsoft.MobilePacketCore/networkFunctions",
    "isChild": false
  },
  {
    "file": "Azure::DevOpsInfrastructure::Pools.json",
    "resourceType": "Microsoft.DevOpsInfrastructure/pools",
    "isChild": false
  },
  {
    "file": "Azure::StorSimple::Managers_bandwidthSettings.json",
    "resourceType": "Microsoft.StorSimple/managers/bandwidthSettings",
    "isChild": true,
    "parentType": "Microsoft.StorSimple/managers"
  },
  {
    "file": "Azure::Solutions::Appliances.json",
    "resourceType": "Microsoft.Solutions/appliances",
    "isChild": false
  },
  {
    "file": "Azure::SignalRService::SignalR_replicas.json",
    "resourceType": "Microsoft.SignalRService/signalR/replicas",
    "isChild": true,
    "parentType": "Microsoft.SignalRService/signalR"
  },
  {
    "file": "Azure::ScVmm::VirtualMachineTemplates.json",
    "resourceType": "Microsoft.ScVmm/virtualMachineTemplates",
    "isChild": false
  },
  {
    "file": "Azure::EventGrid::PartnerNamespaces_eventChannels.json",
    "resourceType": "Microsoft.EventGrid/partnerNamespaces/eventChannels",
    "isChild": true,
    "parentType": "Microsoft.EventGrid/partnerNamespaces"
  },
  {
    "file": "Azure::DevOps::Pipelines.json",
    "resourceType": "Microsoft.DevOps/pipelines",
    "isChild": false
  },
  {
    "file": "Azure::AwsConnector::IamAccessKeyMetadata.json",
    "resourceType": "Microsoft.AwsConnector/iamAccessKeyMetadata",
    "isChild": false
  },
  {
    "file": "Azure::Fabric::Capacities.json",
    "resourceType": "Microsoft.Fabric/capacities",
    "isChild": false
  },
  {
    "file": "Azure::Migrate::ModernizeProjects_migrateAgents.json",
    "resourceType": "Microsoft.Migrate/modernizeProjects/migrateAgents",
    "isChild": true,
    "parentType": "Microsoft.Migrate/modernizeProjects"
  },
  {
    "file": "Azure::AwsConnector::SageMakerNotebookInstanceSummaries.json",
    "resourceType": "Microsoft.AwsConnector/sageMakerNotebookInstanceSummaries",
    "isChild": false
  },
  {
    "file": "Azure::AzureStackHCI::VirtualMachines_extensions.json",
    "resourceType": "Microsoft.AzureStackHCI/virtualMachines/extensions",
    "isChild": true,
    "parentType": "Microsoft.AzureStackHCI/virtualMachines"
  },
  {
    "file": "Azure::Network::ApplicationGatewayWebApplicationFirewallPolicies.json",
    "resourceType": "Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies",
    "isChild": false
  },
  {
    "file": "Azure::ServiceFabric::Clusters_applications_services.json",
    "resourceType": "Microsoft.ServiceFabric/clusters/applications/services",
    "isChild": true,
    "parentType": "Microsoft.ServiceFabric/clusters/applications"
  },
  {
    "file": "Azure::DBforPostgreSQL::Servers_privateEndpointConnections.json",
    "resourceType": "Microsoft.DBforPostgreSQL/servers/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.DBforPostgreSQL/servers"
  },
  {
    "file": "Azure::Network::PrivateEndpoints.json",
    "resourceType": "Microsoft.Network/privateEndpoints",
    "isChild": false
  },
  {
    "file": "Azure::StorageMover::StorageMovers_agents.json",
    "resourceType": "Microsoft.StorageMover/storageMovers/agents",
    "isChild": true,
    "parentType": "Microsoft.StorageMover/storageMovers"
  },
  {
    "file": "Azure::AVS::PrivateClouds_workloadNetworks_dnsZones.json",
    "resourceType": "Microsoft.AVS/privateClouds/workloadNetworks/dnsZones",
    "isChild": true,
    "parentType": "Microsoft.AVS/privateClouds/workloadNetworks"
  },
  {
    "file": "Azure::NetworkCloud::VirtualMachines.json",
    "resourceType": "Microsoft.NetworkCloud/virtualMachines",
    "isChild": false
  },
  {
    "file": "Azure::ElasticSan::ElasticSans_privateEndpointConnections.json",
    "resourceType": "Microsoft.ElasticSan/elasticSans/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.ElasticSan/elasticSans"
  },
  {
    "file": "Azure::DeploymentManager::ServiceTopologies.json",
    "resourceType": "Microsoft.DeploymentManager/serviceTopologies",
    "isChild": false
  },
  {
    "file": "Azure::Sql::ManagedInstances_advancedThreatProtectionSettings.json",
    "resourceType": "Microsoft.Sql/managedInstances/advancedThreatProtectionSettings",
    "isChild": true,
    "parentType": "Microsoft.Sql/managedInstances"
  },
  {
    "file": "Azure::AzureArcData::SqlServerInstances.json",
    "resourceType": "Microsoft.AzureArcData/sqlServerInstances",
    "isChild": false
  },
  {
    "file": "Azure::HardwareSecurityModules::CloudHsmClusters.json",
    "resourceType": "Microsoft.HardwareSecurityModules/cloudHsmClusters",
    "isChild": false
  },
  {
    "file": "Azure::MachineLearningServices::Workspaces_data_versions.json",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/data/versions",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/workspaces/data"
  },
  {
    "file": "Azure::CloudHealth::Healthmodels.json",
    "resourceType": "Microsoft.CloudHealth/healthmodels",
    "isChild": false
  },
  {
    "file": "Azure::Logic::Workflows.json",
    "resourceType": "Microsoft.Logic/workflows",
    "isChild": false
  },
  {
    "file": "Azure::ServiceFabricMesh::Applications.json",
    "resourceType": "Microsoft.ServiceFabricMesh/applications",
    "isChild": false
  },
  {
    "file": "Azure::NetworkAnalytics::DataProducts_dataTypes.json",
    "resourceType": "Microsoft.NetworkAnalytics/dataProducts/dataTypes",
    "isChild": true,
    "parentType": "Microsoft.NetworkAnalytics/dataProducts"
  },
  {
    "file": "Azure::DocumentDB::DatabaseAccounts_apis_databases.json",
    "resourceType": "Microsoft.DocumentDB/databaseAccounts/apis/databases",
    "isChild": true,
    "parentType": "Microsoft.DocumentDB/databaseAccounts/apis"
  },
  {
    "file": "Azure::StoragePool::DiskPools_iscsiTargets.json",
    "resourceType": "Microsoft.StoragePool/diskPools/iscsiTargets",
    "isChild": true,
    "parentType": "Microsoft.StoragePool/diskPools"
  },
  {
    "file": "Azure::ContainerRegistry::Registries_pipelineRuns.json",
    "resourceType": "Microsoft.ContainerRegistry/registries/pipelineRuns",
    "isChild": true,
    "parentType": "Microsoft.ContainerRegistry/registries"
  },
  {
    "file": "Azure::HybridNetwork::Publishers_networkFunctionDefinitionGroups_networkFunctionDefinitionVersions.json",
    "resourceType": "Microsoft.HybridNetwork/publishers/networkFunctionDefinitionGroups/networkFunctionDefinitionVersions",
    "isChild": true,
    "parentType": "Microsoft.HybridNetwork/publishers/networkFunctionDefinitionGroups"
  },
  {
    "file": "Azure::Synapse::Workspaces_bigDataPools.json",
    "resourceType": "Microsoft.Synapse/workspaces/bigDataPools",
    "isChild": true,
    "parentType": "Microsoft.Synapse/workspaces"
  },
  {
    "file": "Azure::MobileNetwork::MobileNetworks.json",
    "resourceType": "Microsoft.MobileNetwork/mobileNetworks",
    "isChild": false
  },
  {
    "file": "Azure::DevTestLab::Labs_servicerunners.json",
    "resourceType": "Microsoft.DevTestLab/labs/servicerunners",
    "isChild": true,
    "parentType": "Microsoft.DevTestLab/labs"
  },
  {
    "file": "Azure::ApiManagement::Service_schemas.json",
    "resourceType": "Microsoft.ApiManagement/service/schemas",
    "isChild": true,
    "parentType": "Microsoft.ApiManagement/service"
  },
  {
    "file": "Azure::StorSimple::Managers_devices_timeSettings.json",
    "resourceType": "Microsoft.StorSimple/managers/devices/timeSettings",
    "isChild": true,
    "parentType": "Microsoft.StorSimple/managers/devices"
  },
  {
    "file": "Azure::DBforPostgreSQL::ServerGroupsv2_nodeConfigurations.json",
    "resourceType": "Microsoft.DBforPostgreSQL/serverGroupsv2/nodeConfigurations",
    "isChild": true,
    "parentType": "Microsoft.DBforPostgreSQL/serverGroupsv2"
  },
  {
    "file": "Azure::ApiCenter::Services_workspaces.json",
    "resourceType": "Microsoft.ApiCenter/services/workspaces",
    "isChild": true,
    "parentType": "Microsoft.ApiCenter/services"
  },
  {
    "file": "Azure::Network::ExpressRouteGateways_expressRouteConnections.json",
    "resourceType": "Microsoft.Network/expressRouteGateways/expressRouteConnections",
    "isChild": true,
    "parentType": "Microsoft.Network/expressRouteGateways"
  },
  {
    "file": "Azure::DeviceRegistry::SchemaRegistries_schemas_schemaVersions.json",
    "resourceType": "Microsoft.DeviceRegistry/schemaRegistries/schemas/schemaVersions",
    "isChild": true,
    "parentType": "Microsoft.DeviceRegistry/schemaRegistries/schemas"
  },
  {
    "file": "Azure::AzureStackHCI::MarketplaceGalleryImages.json",
    "resourceType": "Microsoft.AzureStackHCI/marketplacegalleryimages",
    "isChild": false
  },
  {
    "file": "Azure::Storage::FileSystems.json",
    "resourceType": "Dell.Storage/filesystems",
    "isChild": false
  },
  {
    "file": "Azure::Sql::Servers_syncAgents.json",
    "resourceType": "Microsoft.Sql/servers/syncAgents",
    "isChild": true,
    "parentType": "Microsoft.Sql/servers"
  },
  {
    "file": "Azure::Maps::Accounts_privateAtlases.json",
    "resourceType": "Microsoft.Maps/accounts/privateAtlases",
    "isChild": true,
    "parentType": "Microsoft.Maps/accounts"
  },
  {
    "file": "Azure::Maintenance::ConfigurationAssignments.json",
    "resourceType": "Microsoft.Maintenance/configurationAssignments",
    "isChild": false
  },
  {
    "file": "Azure::Network::DnsZones_AAAA.json",
    "resourceType": "Microsoft.Network/dnszones/AAAA",
    "isChild": true,
    "parentType": "Microsoft.Network/dnszones"
  },
  {
    "file": "Azure::Logic::IntegrationAccounts_schemas.json",
    "resourceType": "Microsoft.Logic/integrationAccounts/schemas",
    "isChild": true,
    "parentType": "Microsoft.Logic/integrationAccounts"
  },
  {
    "file": "Azure::Batch::BatchAccounts_applications.json",
    "resourceType": "Microsoft.Batch/batchAccounts/applications",
    "isChild": true,
    "parentType": "Microsoft.Batch/batchAccounts"
  },
  {
    "file": "Azure::Synapse::Workspaces_sqlPools_dataMaskingPolicies_rules.json",
    "resourceType": "Microsoft.Synapse/workspaces/sqlPools/dataMaskingPolicies/rules",
    "isChild": true,
    "parentType": "Microsoft.Synapse/workspaces/sqlPools/dataMaskingPolicies"
  },
  {
    "file": "Azure::Insights::Components_exportconfiguration.json",
    "resourceType": "Microsoft.Insights/components/exportconfiguration",
    "isChild": true,
    "parentType": "Microsoft.Insights/components"
  },
  {
    "file": "Azure::AwsConnector::SsmInstanceInformations.json",
    "resourceType": "Microsoft.AwsConnector/ssmInstanceInformations",
    "isChild": false
  },
  {
    "file": "Azure::Network::ExpressRouteCircuits_authorizations.json",
    "resourceType": "Microsoft.Network/expressRouteCircuits/authorizations",
    "isChild": true,
    "parentType": "Microsoft.Network/expressRouteCircuits"
  },
  {
    "file": "Azure::Network::VirtualRouters_peerings.json",
    "resourceType": "Microsoft.Network/virtualRouters/peerings",
    "isChild": true,
    "parentType": "Microsoft.Network/virtualRouters"
  },
  {
    "file": "Azure::Synapse::Workspaces_managedIdentitySqlControlSettings.json",
    "resourceType": "Microsoft.Synapse/workspaces/managedIdentitySqlControlSettings",
    "isChild": true,
    "parentType": "Microsoft.Synapse/workspaces"
  },
  {
    "file": "Azure::ServiceFabric::Managedclusters_applicationTypes_versions.json",
    "resourceType": "Microsoft.ServiceFabric/managedclusters/applicationTypes/versions",
    "isChild": true,
    "parentType": "Microsoft.ServiceFabric/managedclusters/applicationTypes"
  },
  {
    "file": "Azure::Network::VirtualNetworks_subnets.json",
    "resourceType": "Microsoft.Network/virtualnetworks/subnets",
    "isChild": true,
    "parentType": "Microsoft.Network/virtualnetworks"
  },
  {
    "file": "Azure::RecoveryServices::Vaults_replicationAlertSettings.json",
    "resourceType": "Microsoft.RecoveryServices/vaults/replicationAlertSettings",
    "isChild": true,
    "parentType": "Microsoft.RecoveryServices/vaults"
  },
  {
    "file": "Azure::Synapse::Workspaces_sqlPools.json",
    "resourceType": "Microsoft.Synapse/workspaces/sqlPools",
    "isChild": true,
    "parentType": "Microsoft.Synapse/workspaces"
  },
  {
    "file": "Azure::AwsConnector::SecretsManagerSecrets.json",
    "resourceType": "Microsoft.AwsConnector/secretsManagerSecrets",
    "isChild": false
  },
  {
    "file": "Azure::AzureDataTransfer::Connections_flows.json",
    "resourceType": "Microsoft.AzureDataTransfer/connections/flows",
    "isChild": true,
    "parentType": "Microsoft.AzureDataTransfer/connections"
  },
  {
    "file": "Azure::MachineLearningServices::Workspaces_featurestoreEntities.json",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/featurestoreEntities",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/workspaces"
  },
  {
    "file": "Azure::Sql::Servers.json",
    "resourceType": "Microsoft.Sql/servers",
    "isChild": false
  },
  {
    "file": "Azure::DeploymentManager::Steps.json",
    "resourceType": "Microsoft.DeploymentManager/steps",
    "isChild": false
  },
  {
    "file": "Azure::ManagedNetworkFabric::NeighborGroups.json",
    "resourceType": "Microsoft.ManagedNetworkFabric/neighborGroups",
    "isChild": false
  },
  {
    "file": "Azure::Migrate::MigrateProjects_privateEndpointConnections.json",
    "resourceType": "Microsoft.Migrate/migrateProjects/privateEndpointConnections",
    "isChild": true,
    "parentType": "Microsoft.Migrate/migrateProjects"
  },
  {
    "file": "Azure::Network::VpnGateways_vpnConnections_vpnLinkConnections_sharedKeys.json",
    "resourceType": "Microsoft.Network/vpnGateways/vpnConnections/vpnLinkConnections/sharedKeys",
    "isChild": true,
    "parentType": "Microsoft.Network/vpnGateways/vpnConnections/vpnLinkConnections"
  },
  {
    "file": "Azure::MachineLearningServices::Workspaces_endpoints_deployments.json",
    "resourceType": "Microsoft.MachineLearningServices/workspaces/endpoints/deployments",
    "isChild": true,
    "parentType": "Microsoft.MachineLearningServices/workspaces/endpoints"
  },
  {
    "file": "Azure::StorSimple::Managers_devices_fileservers.json",
    "resourceType": "Microsoft.StorSimple/managers/devices/fileservers",
    "isChild": true,
    "parentType": "Microsoft.StorSimple/managers/devices"
  }
]